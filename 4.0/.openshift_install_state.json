{
    "*bootkube.CVOOverrides": {
        "FileList": [
            {
                "Filename": "templates/cvo-overrides.yaml.template",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgdXBzdHJlYW06IGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9ncmFwaAogIGNoYW5uZWw6IGZhc3QKICBjbHVzdGVySUQ6IHt7LkNWT0NsdXN0ZXJJRH19Cg=="
            }
        ]
    },
    "*bootkube.EtcdServiceKubeSystem": {
        "FileList": [
            {
                "Filename": "templates/etcd-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIGxhYmVsczoKICAgICMgdGhpcyBsYWJlbCBpcyB1c2VkIHRvIGluZGljYXRlIHRoYXQgaXQgc2hvdWxkIGJlIHNjcmFwZWQgYnkgcHJvbWV0aGV1cwogICAgazhzLWFwcDogZXRjZApzcGVjOgogIHNlbGVjdG9yOgogICAgazhzLWFwcDogZXRjZAogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAo="
            }
        ]
    },
    "*bootkube.HostEtcdServiceEndpointsKubeSystem": {
        "FileList": [
            {
                "Filename": "templates/host-etcd-service-endpoints.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogRW5kcG9pbnRzCm1ldGFkYXRhOgogIG5hbWU6IGhvc3QtZXRjZAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBhbm5vdGF0aW9uczoKICAgIGFscGhhLmluc3RhbGxlci5vcGVuc2hpZnQuaW8vZG5zLXN1ZmZpeDoge3suRXRjZEVuZHBvaW50RE5TU3VmZml4fX0Kc3Vic2V0czoKLSBhZGRyZXNzZXM6Cnt7LSByYW5nZSAkaWR4LCAkbWVtYmVyIDo9IC5FdGNkRW5kcG9pbnRIb3N0bmFtZXMgfX0KICAtIGlwOiAxOTIuMC4yLnt7IGFkZCAkaWR4IDEgfX0KICAgIGhvc3RuYW1lOiB7eyAkbWVtYmVyIH19Cnt7LSBlbmQgfX0KICBwb3J0czoKICAtIG5hbWU6IGV0Y2QKICAgIHBvcnQ6IDIzNzkKICAgIHByb3RvY29sOiBUQ1AK"
            }
        ]
    },
    "*bootkube.HostEtcdServiceKubeSystem": {
        "FileList": [
            {
                "Filename": "templates/host-etcd-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBob3N0LWV0Y2QKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NyYXBlZCBieSBwcm9tZXRoZXVzCiAgICBrOHMtYXBwOiBldGNkCnNwZWM6CiAgY2x1c3RlcklQOiBOb25lCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg=="
            }
        ]
    },
    "*bootkube.KubeCloudConfig": {
        "FileList": [
            {
                "Filename": "templates/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            }
        ]
    },
    "*bootkube.KubeSystemConfigmapEtcdServingCA": {
        "FileList": [
            {
                "Filename": "templates/kube-system-configmap-etcd-serving-ca.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2VydmluZy1jYQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KZGF0YToKICBjYS1idW5kbGUuY3J0OiB8CiAgICB7ey5FdGNkQ2FDZXJ0IHwgaW5kZW50IDR9fQo="
            }
        ]
    },
    "*bootkube.KubeSystemConfigmapRootCA": {
        "FileList": [
            {
                "Filename": "templates/kube-system-configmap-root-ca.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICB7ey5Sb290Q2FDZXJ0IHwgaW5kZW50IDR9fQo="
            }
        ]
    },
    "*bootkube.KubeSystemSecretEtcdClient": {
        "FileList": [
            {
                "Filename": "templates/kube-system-secret-etcd-client.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2xpZW50CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDoge3sgLkV0Y2RDbGllbnRDZXJ0IH19CiAgdGxzLmtleToge3sgLkV0Y2RDbGllbnRLZXkgfX0K"
            }
        ]
    },
    "*bootkube.MachineConfigServerTLSSecret": {
        "FileList": [
            {
                "Filename": "templates/machine-config-server-tls-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiB7ey5NY3NUTFNDZXJ0fX0KICB0bHMua2V5OiB7ey5NY3NUTFNLZXl9fQo="
            }
        ]
    },
    "*bootkube.OpenshiftClusterAPINamespace": {
        "FileList": [
            {
                "Filename": "templates/05-openshift-cluster-api-namespace.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogICMgVGhpcyBpcyB0aGUgbmFtZXNwYWNlIHVzZWQgdG8gaG9sZCBjbHVzdGVyLWFwaSBjb21wb25lbnRzLgogIG5hbWU6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            }
        ]
    },
    "*bootkube.OpenshiftMachineConfigOperator": {
        "FileList": [
            {
                "Filename": "templates/04-openshift-machine-config-operator.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            }
        ]
    },
    "*bootkube.OpenshiftServiceCertSignerNamespace": {
        "FileList": [
            {
                "Filename": "templates/09-openshift-service-cert-signer-namespace.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogICMgVGhpcyBpcyB0aGUgbmFtZXNwYWNlIHVzZWQgdG8gaG9sZCB0aGUgc2VydmljZS1zZXJ2aW5nLWNlcnQtc2lnbmVyLgogIG5hbWU6IG9wZW5zaGlmdC1zZXJ2aWNlLWNlcnQtc2lnbmVyCiAgbGFiZWxzOgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            }
        ]
    },
    "*bootkube.OpenshiftServiceCertSignerSecret": {
        "FileList": [
            {
                "Filename": "templates/openshift-service-cert-signer-ca-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHNlcnZpY2Utc2VydmluZy1jZXJ0LXNpZ25lci1zaWduaW5nLWtleQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LXNlcnZpY2UtY2VydC1zaWduZXIKdHlwZToga3ViZXJuZXRlcy5pby90bHMKZGF0YToKICB0bHMuY3J0OiB7ey5TZXJ2aWNlU2VydmluZ0NhQ2VydH19CiAgdGxzLmtleToge3suU2VydmljZVNlcnZpbmdDYUtleX19Cg=="
            }
        ]
    },
    "*bootkube.Pull": {
        "FileList": [
            {
                "Filename": "templates/pull.yaml.template",
                "Data": "ewogICJhcGlWZXJzaW9uIjogInYxIiwKICAia2luZCI6ICJTZWNyZXQiLAogICJ0eXBlIjogImt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbiIsCiAgIm1ldGFkYXRhIjogewogICAgIm5hbWVzcGFjZSI6ICJrdWJlLXN5c3RlbSIsCiAgICAibmFtZSI6ICJjb3Jlb3MtcHVsbC1zZWNyZXQiCiAgfSwKICAiZGF0YSI6IHsKICAgICIuZG9ja2VyY29uZmlnanNvbiI6ICJ7ey5QdWxsU2VjcmV0QmFzZTY0fX0iCiAgfQp9Cg=="
            }
        ]
    },
    "*bootstrap.Bootstrap": {
        "Config": {
            "ignition": {
                "config": {},
                "security": {
                    "tls": {}
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDtty9+Qton+j31GmZGakLqlk4tPuo/MFnWI9bYKXUhxc2w0AA99mw0KbO4VTP0Y5LeEbXE0aCls13TseH2CtoFUhnDSxxWM9aW9C4vXDMfd1buTPaDJMLaKOtynzu34Hkm7P7wnArw3Yr9mWoeTgTRWg38XiyKeh9z51L/TQden7NW2znaQCav8QWZGLm0LyiJWjMif5AqPBYee/EA3cugjU7ZFpCRvpxCarjCT+3jAAV702IynYsqBf+4mD7UBG5GU7zbmYJtmXIzcgBge9vyfSKhhXvioKkT9Y4NB+qBg9dJ0LJKaU+zIzHqwF7T07i3nQwnBG885amDyRHPDAdj rspazzol\n"
                        ]
                    }
                ]
            },
            "storage": {
                "files": [
                    {
                        "filesystem": "root",
                        "path": "/etc/motd",
                        "append": true,
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,VGhpcyBpcyB0aGUgYm9vdHN0cmFwIG5vZGU7IGl0IHdpbGwgYmUgZGVzdHJveWVkIHdoZW4gdGhlIG1hc3RlciBpcyBmdWxseSB1cC4KClRoZSBwcmltYXJ5IHNlcnZpY2UgaXMgImJvb3RrdWJlLnNlcnZpY2UiLiBUbyB3YXRjaCBpdHMgc3RhdHVzLCBydW4gZS5nLgoKICBqb3VybmFsY3RsIC1iIC1mIC11IGJvb3RrdWJlLnNlcnZpY2UK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "group": {
                            "name": "core"
                        },
                        "path": "/home/core/.bash_history",
                        "user": {
                            "name": "core"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,am91cm5hbGN0bCAtYiAtZiAtdSBib290a3ViZS5zZXJ2aWNlCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/bootkube-config-overrides/kube-apiserver-config-overrides.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZWNvbnRyb2xwbGFuZS5jb25maWcub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IEt1YmVBUElTZXJ2ZXJDb25maWcKa3ViZWxldENsaWVudEluZm86CiAgY2E6ICIiICAjIGt1YmVsZXQgdXNlcyBzZWxmLXNpZ25lZCBzZXJ2aW5nIGNlcnRzLiBUT0RPOiBmaXgga3ViZWxldCBwa2kK",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/bootkube-config-overrides/kube-controller-manager-config-overrides.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZWNvbnRyb2xwbGFuZS5jb25maWcub3BlbnNoaWZ0LmlvL3YxCmtpbmQ6IEt1YmVDb250cm9sbGVyTWFuYWdlckNvbmZpZwo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/bootkube-config-overrides/kube-scheduler-config-overrides.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29tcG9uZW50Y29uZmlnL3YxYWxwaGExCmtpbmQ6IEt1YmVTY2hlZHVsZXJDb25maWd1cmF0aW9uCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/root/.docker/config.json",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,eyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzNKb2JtZHdjM0p6Y0dGNmVtOXNNV1ZpWjJOellXeGpjVzk2Y25WcGJHbHNNSFJqYTNKa2JtNTRPazVDV2pCU1N6SkxORWhEVGpOVU4wTXpXVWxITVZGR1RVdFlWek5WVms1V1NFeFFXVWRDTVV4Q04xSktNa3hUUzFaQ1RrRllTalpDTkRoV01EZEVPVEk9IiwiZW1haWwiOiJyc3BhenpvbEByZWRoYXQuY29tIn0sInF1YXkuaW8iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLM0pvYm1kd2MzSnpjR0Y2ZW05c01XVmlaMk56WVd4amNXOTZjblZwYkdsc01IUmphM0prYm01NE9rNUNXakJTU3pKTE5FaERUak5VTjBNeldVbEhNVkZHVFV0WVZ6TlZWazVXU0V4UVdVZENNVXhDTjFKS01reFRTMVpDVGtGWVNqWkNORGhXTURkRU9UST0iLCJlbWFpbCI6InJzcGF6em9sQHJlZGhhdC5jb20ifX19Cg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/bootkube.sh",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/openshift.sh",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWUKCktVQkVDT05GSUc9IiQxIgoKa3ViZWN0bCgpIHsKCWVjaG8gIkV4ZWN1dGluZyBrdWJlY3RsICQqIiA+JjIKCXdoaWxlIHRydWUKCWRvCgkJc2V0ICtlCgkJb3V0PSQob2MgLS1jb25maWc9IiRLVUJFQ09ORklHIiAiJEAiIDI+JjEpCgkJc3RhdHVzPSQ/CgkJc2V0IC1lCgoJCWlmIGdyZXAgLS1xdWlldCAiQWxyZWFkeUV4aXN0cyIgPDw8ICIkb3V0IgoJCXRoZW4KCQkJZWNobyAiJG91dCwgc2tpcHBpbmciID4mMgoJCQlyZXR1cm4KCQlmaQoKCQllY2hvICIkb3V0IgoJCWlmIFsgIiRzdGF0dXMiIC1lcSAwIF0KCQl0aGVuCgkJCXJldHVybgoJCWZpCgoJCWVjaG8gImt1YmVjdGwgJCogZmFpbGVkLiBSZXRyeWluZyBpbiA1IHNlY29uZHMuLi4iID4mMgoJCXNsZWVwIDUKCWRvbmUKfQoKd2FpdF9mb3JfcG9kcygpIHsKCWVjaG8gIldhaXRpbmcgZm9yIHBvZHMgaW4gbmFtZXNwYWNlICQxLi4uIgoJd2hpbGUgdHJ1ZQoJZG8KCQlvdXQ9JChrdWJlY3RsIC0tbmFtZXNwYWNlICIkMSIgZ2V0IHBvZHMgLS1vdXRwdXQgY3VzdG9tLWNvbHVtbnM9U1RBVFVTOi5zdGF0dXMucGhhc2UsTkFNRToubWV0YWRhdGEubmFtZSAtLW5vLWhlYWRlcnM9dHJ1ZSkKCQllY2hvICIkb3V0IgoKCQkjIG1ha2Ugc3VyZSBrdWJlY3RsIHJldHVybnMgYXQgbGVhc3Qgb25lIHN0YXR1cwoJCWlmIFsgIiQod2MgLS1saW5lcyA8PDwgIiRvdXQiKSIgLWVxIDAgXQoJCXRoZW4KCQkJZWNobyAiTm8gcG9kcyB3ZXJlIGZvdW5kLiBXYWl0aW5nIGZvciA1IHNlY29uZHMuLi4iCgkJCXNsZWVwIDUKCQkJY29udGludWUKCQlmaQoKCQlpZiAhIGdyZXAgLS1pbnZlcnQtbWF0Y2ggJ15SdW5uaW5nJyA8PDwgIiRvdXQiCgkJdGhlbgoJCQlyZXR1cm4KCQlmaQoKCQllY2hvICJOb3QgYWxsIHBvZHMgYXZhaWxhYmxlIHlldC4gV2FpdGluZyBmb3IgNSBzZWNvbmRzLi4uIgoJCXNsZWVwIDUKCWRvbmUKCXNldCAtZQp9CgojIFdhaXQgZm9yIEt1YmVybmV0ZXMgcG9kcwp3YWl0X2Zvcl9wb2RzIGt1YmUtc3lzdGVtCgpmb3IgZmlsZSBpbiAkKGZpbmQgLiAtbWF4ZGVwdGggMSAtdHlwZSBmIHwgc29ydCkKZG8KCWVjaG8gIkNyZWF0aW5nIG9iamVjdCBmcm9tIGZpbGU6ICRmaWxlIC4uLiIKCWt1YmVjdGwgY3JlYXRlIC0tZmlsZW5hbWUgIiRmaWxlIgoJZWNobyAiRG9uZSBjcmVhdGluZyBvYmplY3QgZnJvbSBmaWxlOiAkZmlsZSAuLi4iCmRvbmUKCiMgV29ya2Fyb3VuZCBmb3IgaHR0cHM6Ly9naXRodWIuY29tL29wZW5jb250YWluZXJzL3J1bmMvcHVsbC8xODA3CnRvdWNoIC9vcHQvb3BlbnNoaWZ0Ly5vcGVuc2hpZnQuZG9uZQoKZWNobyAiT3BlblNoaWZ0IGluc3RhbGxhdGlvbiBpcyBkb25lIgo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/report-progress.sh",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWUKCktVQkVDT05GSUc9IiR7MX0iCk5BTUU9IiR7Mn0iCk1FU1NBR0U9IiR7M30iClRJTUVTVEFNUD0iJChkYXRlIC11ICsnJVktJW0tJWRUJUg6JU06JVNaJykiCgplY2hvICJSZXBvcnRpbmcgaW5zdGFsbCBwcm9ncmVzcy4uLiIKCm9jIC0tY29uZmlnPSIkS1VCRUNPTkZJRyIgY3JlYXRlIC1mIC0gPDxFT0YKYXBpVmVyc2lvbjogdjEKa2luZDogRXZlbnQKbWV0YWRhdGE6CiAgbmFtZTogIiR7TkFNRX0iCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQppbnZvbHZlZE9iamVjdDoKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCm1lc3NhZ2U6ICIke01FU1NBR0V9IgpmaXJzdFRpbWVzdGFtcDogIiR7VElNRVNUQU1QfSIKbGFzdFRpbWVzdGFtcDogIiR7VElNRVNUQU1QfSIKY291bnQ6IDEKc291cmNlOgogIGNvbXBvbmVudDogY2x1c3RlcgogIGhvc3Q6ICQoaG9zdG5hbWUpCkVPRgo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-config.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYmFzZURvbWFpbjogcmFmZmEueHl6CiAgICBjbHVzdGVySUQ6IGIzNzljY2M1LTZkODUtNDliNi05Y2U3LTI2MDM1ZmNlNzcwOQogICAgbWFjaGluZXM6CiAgICAtIG5hbWU6IG1hc3RlcgogICAgICBwbGF0Zm9ybToge30KICAgICAgcmVwbGljYXM6IDEKICAgIC0gbmFtZTogd29ya2VyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIG5hbWU6IGVudjEKICAgIG5ldHdvcmtpbmc6CiAgICAgIGNsdXN0ZXJOZXR3b3JrczoKICAgICAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICAgICAgaG9zdFN1Ym5ldExlbmd0aDogOQogICAgICBzZXJ2aWNlQ0lEUjogMTcyLjMwLjAuMC8xNgogICAgICB0eXBlOiBPcGVuc2hpZnRTRE4KICAgIHBsYXRmb3JtOgogICAgICBhd3M6CiAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTEKICAgICAgICB2cGNDSURSQmxvY2s6IDEwLjAuMC4wLzE2CiAgICBwdWxsU2VjcmV0OiAneyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzNKb2JtZHdjM0p6Y0dGNmVtOXNNV1ZpWjJOellXeGpjVzk2Y25WcGJHbHNNSFJqYTNKa2JtNTRPazVDV2pCU1N6SkxORWhEVGpOVU4wTXpXVWxITVZGR1RVdFlWek5WVms1V1NFeFFXVWRDTVV4Q04xSktNa3hUUzFaQ1RrRllTalpDTkRoV01EZEVPVEk9IiwiZW1haWwiOiJyc3BhenpvbEByZWRoYXQuY29tIn0sInF1YXkuaW8iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLM0pvYm1kd2MzSnpjR0Y2ZW05c01XVmlaMk56WVd4amNXOTZjblZwYkdsc01IUmphM0prYm01NE9rNUNXakJTU3pKTE5FaERUak5VTjBNeldVbEhNVkZHVFV0WVZ6TlZWazVXU0V4UVdVZENNVXhDTjFKS01reFRTMVpDVGtGWVNqWkNORGhXTURkRU9UST0iLCJlbWFpbCI6InJzcGF6em9sQHJlZGhhdC5jb20ifX19JwogICAgc3NoS2V5OiB8CiAgICAgIHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQkFRRHR0eTkrUXRvbitqMzFHbVpHYWtMcWxrNHRQdW8vTUZuV0k5YllLWFVoeGMydzBBQTk5bXcwS2JPNFZUUDBZNUxlRWJYRTBhQ2xzMTNUc2VIMkN0b0ZVaG5EU3h4V005YVc5QzR2WERNZmQxYnVUUGFESk1MYUtPdHluenUzNEhrbTdQN3duQXJ3M1lyOW1Xb2VUZ1RSV2czOFhpeUtlaDl6NTFML1RRZGVuN05XMnpuYVFDYXY4UVdaR0xtMEx5aUpXak1pZjVBcVBCWWVlL0VBM2N1Z2pVN1pGcENSdnB4Q2FyakNUKzNqQUFWNzAySXluWXNxQmYrNG1EN1VCRzVHVTd6Ym1ZSnRtWEl6Y2dCZ2U5dnlmU0toaFh2aW9La1Q5WTROQitxQmc5ZEowTEpLYVUrekl6SHF3RjdUMDdpM25Rd25CRzg4NWFtRHlSSFBEQWRqIHJzcGF6em9sCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/kube-system-configmap-etcd-serving-ca.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2VydmluZy1jYQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KZGF0YToKICBjYS1idW5kbGUuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURLVENDQWhHZ0F3SUJBZ0lJV1BPMTE0RDZNaXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1USXlPREU1TkRVME5Gb1gKICAgIERUSTRNVEl5TlRFNU5EVTBOVm93SGpFTk1Bc0dBMVVFQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQ0MKICAgIEFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEtPcFFmY2pDdDBmcURsUTBaNEJNZWIKICAgICtQc1ZhdmJZU212V3JUV1p3aC9MbTQ1N2JTUFEzcEJhM29XaHdKZ0NMYjNTK2hzTWNLcDFtRi9oMWFXUVhPQXoKICAgIGRpRmFXV2JEK21ORjhIWFl0VXlsV1ZheXluVHM4MnprdHFEUTNIeCtNelNhTDNvVS8zczNFYkk5L01EWUhad1UKICAgICtuMXd2RmhLOGdLTEt1eGxNM1NNVnRlZ25Uc0Fsd2xuRE8vR2lCcnBWZW9xQ1lFTmd4WjNVSm5POGZDajhwMFcKICAgIEpiRkpLOU1xZURDYk5SbWExaDIyczBZKzA2RjF3VlZOcmk5Q1pWSW5TalpYVXk3aG1Mbm9uYmdFRkI2RkE5cjIKICAgIEpXa3FaQ1NpUStmYlpaZEFxaWh3ZUFoeUF1ZFNTd2Q4N2k5K005cHhiZW8xUnJueGhSbEhNZGwwbzVhektwc0MKICAgIEF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KICAgIEJCWUVGSE5UZVBVQ3ZDQ3J0SktqSitZRDIzODk1VkdFTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcnRKS2oKICAgIEorWUQyMzg5NVZHRU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVRoUUttTWx0VTFNaHB1K0dnM1JLejdCbGIKICAgIDJTU1BPTGRYUGtVWHV6QXV6ZzMzSk54c1dSZnlhRU5HTk8zN3BHaUdsY0hFM3U3dVdNUWhEaE04eGYrUDcralkKICAgIEo2TmsrOWFEZWhXSURHZWhSOW0wL0FHY09qNlFnSjQrMG0xeGU1d2JmT1hTUHI1QUhVY2dkUkdwdjJTZWRVSzkKICAgIFVPVUgvcUk2MWVEVlpESkxBTUppYU90RktjQWJvSGlnTDdQNUxkWTBGM0szTUZNYmNCeXlaVnJCZCtXWlFMbm0KICAgIHc2RUkwUVptdnh5YjdoRG1hVzBCUDd4SjhZRHZHa3c0K00rZ2tXZEpDNnRhWlVqbVpVZlNMb0MwK0ZJMXFYQmUKICAgIFM3dE42czhJL1pFQUo3a2gxaThnK1h4WHpmWnZkWW8yZ0l4ZmdKYldxUEtjU243cWNGMEQ1Rlcvbm1VaQogICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/04-openshift-machine-config-operator.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/05-openshift-cluster-api-namespace.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogICMgVGhpcyBpcyB0aGUgbmFtZXNwYWNlIHVzZWQgdG8gaG9sZCBjbHVzdGVyLWFwaSBjb21wb25lbnRzLgogIG5hbWU6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/09-openshift-service-signer-namespace.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogICMgVGhpcyBpcyB0aGUgbmFtZXNwYWNlIHVzZWQgdG8gaG9sZCB0aGUgc2VydmljZS1zZXJ2aW5nLWNlcnQtc2lnbmVyLgogIG5hbWU6IG9wZW5zaGlmdC1zZXJ2aWNlLWNlcnQtc2lnbmVyCiAgbGFiZWxzOgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-service.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIGxhYmVsczoKICAgICMgdGhpcyBsYWJlbCBpcyB1c2VkIHRvIGluZGljYXRlIHRoYXQgaXQgc2hvdWxkIGJlIHNjcmFwZWQgYnkgcHJvbWV0aGV1cwogICAgazhzLWFwcDogZXRjZApzcGVjOgogIHNlbGVjdG9yOgogICAgazhzLWFwcDogZXRjZAogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/host-etcd-service.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBob3N0LWV0Y2QKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NyYXBlZCBieSBwcm9tZXRoZXVzCiAgICBrOHMtYXBwOiBldGNkCnNwZWM6CiAgY2x1c3RlcklQOiBOb25lCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/openshift-service-signer-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHNlcnZpY2Utc2VydmluZy1jZXJ0LXNpZ25lci1zaWduaW5nLWtleQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LXNlcnZpY2UtY2VydC1zaWduZXIKdHlwZToga3ViZXJuZXRlcy5pby90bHMKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUFJFTkRRV2xEWjBGM1NVSkJaMGxKWmpsMVdsTnlVa3hHUmsxM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMFRWUkplVTlFUlRWT1JGVXdUa1p2V0FwRVZFazBUVlJKZVU1VVJUVk9SRlV3VGxadmQweFVSVkpOUVRoSFFURlZSVU40VFVsWmJUbDJaRWQwTVZsdFZYaEhSRUZYUW1kT1ZrSkJUVlJFTTA1c0NtTnVXbkJaTWxWMFl6SldlV1J0YkhWYWVrTkRRVk5KZDBSUldVcExiMXBKYUhaalRrRlJSVUpDVVVGRVoyZEZVRUZFUTBOQlVXOURaMmRGUWtGTGJWa0tUakZwVDNOTk5EQXJhSGxCVkd0T1MxWlVjVkpDV1VSalZsUjVlblUzY0M5Nk9UUlFhMlo0VkZGbVdWZzROMHBrTWxaUE1qQkZhV1ZvVTA5Q1lXdGlad3AwY1RORk16TTJlR2swTUdScGIwVlBNMWN4U0Rab1QzUXpVbWhwTjJsNFVtNXFXRGhFY1d4UFdFZ3JlSE5zUXpKd00yNXJNR1prYTI5MmF6ZFRLelIzQ25kT1RVZzRZa1pEVGtjMFpYZzBhRnBzYkdSQmFIWkdRa1l4VWsxVk0weHZjemhQV2psaldHNTFOVEI2TlVkeFF6UkhkVTA1VjBWMVdFcFVTbU5UVUdnS2IwSnNVMFpVU2t0MGRHbFBkRnBYUzBaQk0wVnFPVzlTWmpSdlpUbEVUR2RJV2pKcFNEVnROemhUT1dSc1JqZGxUUzh4V25KSkx6QldZaXN6YkhOdmF3cFZlSHBzYlZWQk5IUllhRTVrUjJ0a1kySXdUMkZKVG1KUlFVWk9RV3N5U2xkNGFUbFpNM0JwY1Nzd1ZubERhRWRUUkZackt6RTRRbGRhVVN0RGNVSlZDalZZUzBkTWFtUkRlRkp0VkhkWGEyZzJWR3REUVhkRlFVRmhUbXBOUjBWM1JHZFpSRlpTTUZCQlVVZ3ZRa0ZSUkVGblMydE5RVGhIUVRGVlpFVjNSVUlLTDNkUlJrMUJUVUpCWmpoM1NGRlpSRlpTTUU5Q1FsbEZSa2hPVkdWUVZVTjJRME55ZEVwTGFrb3JXVVF5TXpnNU5WWkhSVTFDT0VkQk1WVmtTWGRSV1FwTlFtRkJSa2hPVkdWUVZVTjJRME55ZEVwTGFrb3JXVVF5TXpnNU5WWkhSVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkRkMVZCUVRSSlFrRlJRVlJXSzNWSUNrSjVObkJTVm5aakwxRktNa1J6WW1vd1dUTktUMDl5Umtsb05reFpVMU5KYjNoR01XZzBVRkJYUVZZek1EUTBRa2t2UWtkdlNVaGljV2hpUmsxeGRsSUtUREZ0Y2pkVVpsZ3ljWGR5ZWxGcE1VeG9PVTQwUjB0T1NYVnBZVzFQU2xGR01rSmtRbU5MV2pVeGMwTk1aR3hMVkc5cWVrZHVLMG94UjJaRVIxcFRLd3A2ZGtWT00ybHJXVkpNTVdnd2IzcHFSRFZsTWs1NmJDOVJUV05JY1ZaWk5VNVRkbmN3ZGtSV1VWcHVPRGhhTHpOMk0zYzRUM0JZTlZsUlJHcHdaR3RuQ2xGcFpuUjRhemhEVVVrMFdERXdSM0ZUUm5KNFNUUnNTekZaU1ZZeVRGSTFWVWhJVFZGU1lYRmFLM2gwVEhoUlJsWnZiWGd3ZWtKYVZtWlZjSE0xYTFrS1NXaHVjR1pFWXpaV1kwRlRTVEZSSzFwdVdEWjVRbm8xWkdod1IzWTJVRlZuY3pWNmNVa3lNVWxETlZObGFtUlZUWFl3TVVSNVRUUkVhR1pCTjNZcldBbzVRVkZVYkRCS1IzSXpPQzkwVkUxcENpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJjVnBuTTFkSk5uZDZhbFEyU0VsQ1QxRXdjRlpQY0VWR1owNTRWbEJNVHpkMWJpOVFNMmNyVWk5R1RrSTVhR1o2Q25Oc00xcFZOMkpSVTBvMlJrazBSbkZTZFVNeWNtTlVabVp5UjB4cVVqSkxaMUUzWkdKVlpuRkZOak5rUjBkTWRVeEdSMlZPWm5kUGNWVTFZMlkzUjNrS1ZVeGhibVZsVkZJNU1sTnBLMVIwVERkcVJFRXdkMlo0YzFWSk1HSm9OMGhwUm0xWFZqQkRSemhWUlZoV1JYaFVZM1ZwZW5jMWJqRjRaV1UzYmxSUWF3cGhiMHhuWVRSNk1WbFROV05zVFd4NFNTdEhaMGRXU1ZaTmEzRXlNa2syTVd4WmIxVkVZMU5RTW1oR0wybG9OekJOZFVGa2JtRkpabTFpZG5oTU1USlZDbGgwTkhvdlZtMXphaTlTVm5ZM1pWZDVhVkpVU0U5WFdsRkVhVEZsUlRFd1lWSXhlSFpSTlc5bk1YUkJRVlV3UTFSWmJHSkhUREZxWlcxTGNqZFNXRWtLUzBWYVNVNVhWRGRZZDBaYWJFUTBTMjlHVkd4amIxbDFUakJNUmtkYVVFSmhVMGh3VDFGSlJFRlJRVUpCYjBsQ1FVaEZkMWxzTHpobVFYaHJWbnB0UndwbFRGWTBaWGRIYm05TFEzTmlWV05wVUdaNmRrdFFSSGRQTWt4SmRuQkdZekIzTUUxcVpYWk9ZVFV6VFVSMFpuWnRPWEpMVWpaSllXSXpMMFJTTTNoaUNscDNSbFI0YmpCV1RHbHJUVTVUTHpsa2VrTnNSMGsyTTA0MlNGQTFkbEpwZVV4M1RqZERSSGxyZVVGdFZHODVRa0ZEUW5NNFdWUnVTRWQ0VGpNeWFGQUtjWEZTWVVKdWEyUlhMMHhSYlhBeGMyYzFWMEp6WkdsMVprNVphME5VVG1GeGRYZ3dSREpGTmxCdldqUldhV1JFVFdscmVFUjZOelJKU0ZWS2NWRkNVZ3BSYzBobU5FRjZPR1JHTkRsblFucEdOMGxqYms5cE1sUXhOM3BqZWxOSFMycE5hblo2VDJ4WVpreElhWFJCVm1obVNqQm9UbkE0Y1RoQ1MySXdWaTlEQ21GTGRIRkRZekl3UVRSUU1qUXpZVlJqU2k5QlZETk1SMVE1WldGd2JuRXdVRTF0ZFVkRlRIRlBXSEo2YTJ3Mk0wZERRa2hEYlZCQmFYcFZNV05IVFVnS1EyTnNieTg0UlVObldVVkJNbGxVUW5wTWFsbDJhemwzYkc0eWFGZFlkemRqZUVsbU9YbFJVekl2UW5vclRIQTBiV1UxWmtGTGVpdDBTblowY0cxRVNRcHNaM0pCUkdnMWNURlBXazVoYzAxb2VFSTRkVmRTVGpnNWRuZHJjR2RKZDBGT1QyVlhhbll3YmpOa1IxaGhOVU5yWkRKeVNWaFVVemwxU0M5bmN6QnRDbXcxYmpNeVVXVkNhRTlVYTA5aVpYQlZUamhvVDBwUFZIcFJVRkJuYm00MFltUkpRazlvV2toT1Frd3dRVmd3UVZNNGFuRnVNVlZEWjFsRlFYZzFhMFlLU0RoaGJHdzJkM2xUVDNwVlEyRkdSV042UmxKMFMyNVNPVGROU3pFdksycG9RM0JDVUVKWE1uazFRMmhOTWxoWU1ITnFUQ3M0TW5wcmN6SkpURUZVWVFwTVVIVnRjRTB6UzA5a01rUlRVR05qY21RcmRqRlRZWGxsVUROaVRtOUNUV2gxTUhndmQzZGhSMWhFYVVwVVdHcHFlbTgxVEhONWRFTXZSME5JUVZwUENrRjBibk0wZGxVelYwUjBWR1ZYV0hScVFVRm5hR2xVVVcxYWRWWlZUazFQYTNSRllTdHNWVU5uV1VWQmRYbHRkazB2T1hScFJIVkZhbWRyYkdRMFJXUUtRMnRPZWs4NE1WQmhUelEyWVRZdlVIRXJkbVV4VVRoR2VuUlNTWEJhZFhKdVQyTTVTVU5xZFVaaGFtZDJiR1ZQZVRGc2JFbFJTbE41V2xwc01XMDBWZ3BpWmtOdk1XTXlNMFJEZFhWWlZtUmlUVzVZUWtaWVYxaFFVbFo2VEU1S2JsQmFWV1pJVTBOSVVYQnNUa0UxYWxReVMwWldlbGdyTW1OdVlYWTJMelJXQ2xaRVIyRkhjV2R0ZEd4clJXMWxPRGN2VUcxNFdVVXdRMmRaUVdaQlVVaDFkMkZwVUU5emVFVjZObFJSUzJsRE56QXZiR2hIY3k5dGNtZFZUazFGVW5rS1JIazBOalo0VTA0MGJGWnVObTVZZGpWQmFuSm5SRkpaY0ZaNE1XMW1kRm8yVnpCc1VrZEpXbEYyVGxaeWFYcHBVbFpFUjNneFFVcDNNRlE1TTJ0blJRb3pWM1JoZEhOTFNFZFRXRWh4WlhSRVNVVlJjSEJPYkhOa1dVNUZXSGxhV0VGM2NuTTFha3BIYm14RFJrWjJVV3BRZUVoUFVrbEhlVzF3ZUVSQ1kxaEtDbmRJYkRCVlVVdENaME5CTjNoMFoxbzNWRWxoY2t4Rk4yNVphRXRpVDIxdk5XOWpTMkpYV1dWeE1tMUNjbkZETWpCaVl6UjFWVUZ5YURKR1lqTTNTRWdLY3pKbmFXOXlZVWxGYjJwdE1GcFpabEZwUVVjd1dYcFdSbEV2TnpaVFV6TmhZVUpRWm0xQ1pXNUNVVFZXT0hGT1pFTkNSMGt2VDNONU5uWjFNRzlrU1FwdlNtczFVMWRwZEUxTmFGcHpWVk54YldwaEwwbElaRGhQWWxwdU9GSnNabXd2YkhGaFRqQnZaV3RhVlhCcllXVkhVMUV6Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/kube-system-configmap-root-ca.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKICAgIGMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3SGhjTk1UZ3hNakk0TVRrME5UUTBXaGNOTWpneE1qSTEKICAgIE1UazBOVFEwV2pBbU1SSXdFQVlEVlFRTEV3bHZjR1Z1YzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXcKICAgIGdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKICAgIDRibmhGd2VmRW5WVDhuSG1oVFloa0FNUzVVOTYrOGVBdFdnMGJtU2lPNDlaZmVsVTFyY3c3NXV2N0RZLzYrM3AKICAgIC9KMWhFVll5djJ3Sk1hRHZON09QdVB6M3NKUCtDZjBKb1k2M3NBdjU2UHpJdEZPdGJ6a043VGpPNTVyRkY0aVgKICAgIG9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KICAgIFlqdnVreDZmWTZiYUF4Q0twbnY0Sm1ReEQwSGZ4ZHJlNHVrNjF6NHdaTVpHNEx1Y3QyTDZpdVhkVlQ2QUZudFAKICAgIG9RWmJkaFI5RThCcENEYXF0eXVkaGh2OFp3Y0lVSEV5eDFjTEMyL2E0QSs2UkFtL0xxL3JyQmMwQ2NuMEUzTWgKICAgIEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKICAgIERnUVdCQlJ6VTNqMUFyd2dxN1NTb3lmbUE5dC9QZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVN6QW8KICAgIHpEeXVpZ0dMNnhIK0ZuL1lLUVNzekl3WlpEQnpqNmRteXJOUk9TWDlSOXpsNFhOYVJvdk92M2Qvb3VpUFQvV1IKICAgIHg0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKICAgIGUxTGxZN2NUSUF6NWFRL1hjNHZLRmxqVTNISVZmMFRQMjhPOTJYZlZkZXhSNnNteHdpTmFXdUZROTBDU09PR1YKICAgIE5JdWlmYVBQcWlpeXI4V2poTGg1OVdmeTRYRndHYnljeXE5VzBmNHJFQlJ0VCsxN2xMQTZueWlWTWNRS1loYjEKICAgIE5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KICAgIGZiRjQxTlpZUFZMaVRaY3VYdz09CiAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/machine-config-server-tls-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSVGVrTkRRV3BQWjBGM1NVSkJaMGxKV1VoeGNXTnhUM01yVjBWM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMFRWUkplVTlFUlRWT1JGVXdUa1p2V0FwRVZFazBUVlJKZVU1VVJUVk9SRlV3VGpGdmQwaFVSV0pOUW10SFFURlZSVUY0VFZOYVZ6VXlUVk14YUdOSGEzVmpiVVp0V20xRmRXVkliRFpOU1VsQ0NrbHFRVTVDWjJ0eGFHdHBSemwzTUVKQlVVVkdRVUZQUTBGUk9FRk5TVWxDUTJkTFEwRlJSVUY0UlRsWWRHWlhORTVSVDJ4TFowNXdZVlZPWm1GSVpYSUtNVTVOWkdOSVpYbE9TRXQzYWtkb1VVbGlNbGhwY0ZReVNuVmlORXR2WXpOdU5VWnBSRU5OZDFNeGJGSm9aSHB5S3pFeFZIUldOemswZGtwSVdtWndkQXBtYWtncmVGZEdOV2hHVlZFMVdYZGFibWx3ZVhoa2RXMVpORzgzZVhNeFZsVm1aVVppZW5saWFVeHFRMGxRS3pSR1VtSkRaRE0yUm1wYU5WaHJTRFJwQ214a00wWkpVakp0VHpJNE5WaHhSM1ZoWlhoTE56aE5ZbFIxYzBzcmFIQkJUMGRNWVdJNU4zTTRaSEZ4T0VoVEswOVRTV2NyV201elF6WlJkMmgwYUhJS2EzZzNja0p0YUdKclNteE9VR2gzTW5wQ1ZYSmpSMUpRSzJ3NWRFazRhWHBsVlc1aWVVVTVOUzlTVVhaTFZsQnpXSE5WTjA1UmFsTjFXRGhQU1hObFl3cFlhMjFxV0dSblVreHJkR3AyZURnd1JuY3lkRmt5ZFZaRmFHZDRNRzFNWldKWWVGQXJVaXR4V0dkTU9XSlhPRFpHTm5wNlVVcHNhemRIU1hCeVVVbEVDa0ZSUVVKdk5FZEdUVWxIUTAxQ1RVZEJNVlZrU2xGUlRVMUJiMGREUTNOSFFWRlZSa0ozVFVKTlFYZEhRVEZWWkVWM1JVSXZkMUZEVFVGQmQwaFJXVVFLVmxJd1QwSkNXVVZHU0U1VVpWQlZRM1pEUTNKMFNrdHFTaXRaUkRJek9EazFWa2RGVFVJNFIwRXhWV1JKZDFGWlRVSmhRVVpJVGxSbFVGVkRka05EY2dwMFNrdHFTaXRaUkRJek9EazFWa2RGVFVJd1IwRXhWV1JGVVZGWFRVSlRRMFZ0Vm5Wa2FrVjBXVmhDY0V4dVNtaGFiVnBvVEc1b05XVnFRVTVDWjJ0eENtaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJhbTV5ZFRkeFNYSnRUSGxNWnpsNlRUSk1UMjFqT1VKRU1FSkpaelZzU2pZemVuSlphblVyTkVSQ1EzZ0tLMWRKTTNac1dIZE1TMmh0WXprMWVERlZiVzh6ZDNaaGRFSkNlRFJNY0ZCaGVtMW1VMGxqWTBGaVowTlROa2R5YmtocFoxUnVjMVU0TmpoUE5FeHVNd29yWVU0M1RYTXhUWGwxZUd0bFNGRjNjM0YzUzFoMmRuVldlbmswWlhwU1QyTlplR0ZIYjFGNGJERTJkQ3RZWWxrNVowNU5Oa2h4YkZCUFoxRnpPRmhsQ25wclIwaHVORVp0Y1Zsc1lUZG9jbGxDVDJ4TGFrTTNkMlZuYTJSelJtUlFLekZsTTJkVmFVcGFWbk5UU0doRlVtaGljRVV2YUhSU01rSlhha2xJUWxrS01qVXlORm8wU0hOcmJXMTRhSEJuWTFwd1pVaFZRMlF3TTBaSE4xSm1SV3hHWkRCVVZHVkJWRVJJYVZobE1uTkthaTkxV1RjMmVGVmpOa051SzJGa1FRb3JNWFo1YlM5M1dIcFVRVWhEUTJ4V1ZFVllUelZXWmpsdFVGazJSWGxCTTFGMGNrWmpUWGhpTW5jOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICB0bHMua2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZiM2RKUWtGQlMwTkJVVVZCZUVVNVdIUm1WelJPVVU5c1MyZE9jR0ZWVG1aaFNHVnlNVTVOWkdOSVpYbE9TRXQzYWtkb1VVbGlNbGhwY0ZReUNrcDFZalJMYjJNemJqVkdhVVJEVFhkVE1XeFNhR1I2Y2lzeE1WUjBWamM1TkhaS1NGcG1jSFJtYWtncmVGZEdOV2hHVlZFMVdYZGFibWx3ZVhoa2RXMEtXVFJ2TjNsek1WWlZabVZHWW5wNVltbE1ha05KVUNzMFJsSmlRMlF6TmtacVdqVllhMGcwYVd4a00wWkpVakp0VHpJNE5WaHhSM1ZoWlhoTE56aE5ZZ3BVZFhOTEsyaHdRVTlIVEdGaU9UZHpPR1J4Y1RoSVV5dFBVMGxuSzFwdWMwTTJVWGRvZEdoeWEzZzNja0p0YUdKclNteE9VR2gzTW5wQ1ZYSmpSMUpRQ2l0c09YUkpPR2w2WlZWdVlubEZPVFV2VWxGMlMxWlFjMWh6VlRkT1VXcFRkVmc0VDBselpXTllhMjFxV0dSblVreHJkR3AyZURnd1JuY3lkRmt5ZFZZS1JXaG5lREJ0VEdWaVdIaFFLMUlyY1ZoblREbGlWemcyUmpaNmVsRktiR3MzUjBsd2NsRkpSRUZSUVVKQmIwbENRVkZEY25ad05rWXljM1ZzTVdWTFVncDBlSEJ3ZEZRcmNreGpaSFpGY1ZGWE1sTkdXRTFXSzNvNWVUZHFNV1pNVjJ0NWQyNU1USEpCZFdwMU0zQnZSMXBFVGtGaWJUZEVkVFZFUTNkWlVqTjVDamswUVROS1N5OURWVU15Y1RCcFMwdHVTbE55WVdGRE1uTnlUbGMxVG5jd2NtTTBUVVk0ZG01NVYzaDZiMXBHYW0xRGNXRnRjMnc0UWxRd1VHUnFTRGdLVTFCNVpYZFpSSEZOVUVGb1NGUjRlR3hJWW5sWFNWSm5abWxOVWtaMFYzQlRjVkprU0ZkRlJIWnpOa0pKVVVaemQzUk1SMWRaYWxwblpHRlBUR0VyYmdwRVpGbFZLeXRKZFZZd05uZHdUR1JTWkc1dVYxVnZUVkU1VmtweVptZFFha1ZDY0VwVmFGRXlWRXRNTTJ4VmNVSk1TVFJaTmpRdlVEbEhNekE0WXpSMUNtOUljM05rU1cxUlluWlJNMFZNY21oUE9UQklTbHBXVjNKVVRtRm5SalZxTmsxdE5IbGhOM2RCVEhGQ1VXZ3lVWFpMZG1sNU9VOUNlRU5uUzAxUE5sUUtTa1V3V25GRU5FSkJiMGRDUVUxV2ExcEJWMGN2UjFGdE1UaDRNWHBGTkd4dVZUWnFWMHcyTkZBeFNtMDBOV2hoUjBOaWJtODBSMUJTY2pSaWVHdExTQXBwYzI1dUwyWkVPWFE1V2xkTVprVTBTR0ZTZFVwb2FWUmtPVUpTVnpWMGQyVm1SRXM0WTNOMVVHaFNabWxDT0VsdlpuUjRVRkJqTkhCaFFVTXhXbXhUQ2xCMWIzSkpjazFoT1daWk0wZ3ZLekJPV2twb1dEbGhPREV4WTFORmEzQnJXR0o1VFhVNVZ6SnFTa0k1ZUVvemRHTTNhbmhtYUZCNFFXOUhRa0ZRTmxrS2MxZ3ZOWFExVXpFMWFUTnJkazlaY21OdlZXNXpibWRETTJscGFVaEpibXBTZHpreGRVUmFOVE5qV0dNeVIxQXhWM2t6VGxKWGJtaGxMMnBsTDAxVVdBcGlSakpxVUdzMWNrWTNjMWxwVGxoRVpuZGlkMWhwVmtoSVRuRnBWbGcwU3pGUFNrMUtlVVppY25Ca0szSTJWbWhNS3pWcFVrbG1kMGdyYW5ab1YycDRDa0Z1UmtaS00zSk1iVFEwTURCU1R5OTBPRTlhYUZnMGNXTkdSWEUzUjJKb1dqTmplVTFxTVRsQmIwZEJUV2sxT0dONE9VaERUbk5NU0RWTFR6bDNjaXNLS3prdmVFUnpUbVZpWWprd1pYVllhMjR2WkdocVR6RXdlVm96WTBGRmRtWkVPR1J1ZFhBeE1UUkJjVmR6VnpGWWN6bGlRVE53ZVZjMlEwaFhlbE5UUXdwRE5razRZVVJCUVZoclQxQkpibmxoVjFsalNGQmlOWEk1VFhKcWNra3ZTa3RPVlVGb1JrbEdWaloyV2l0aVRFSnlPRFJNYUVaalREQTNibTVhYm5kMkNtcEhRMjB6UVZWR2NGUkphME40V1hwNGFpc3lhM0pGUTJkWlFWRmpZbkJrVVhKeVducDRibkk0ZFRsRmFYQXZaQ3M1T1hGSmRqRkpZMHBuV2xNcldFY0tSMDUwY1VsV2NubHpZalJGVkhNcmVESkxWbGxJYld4TlprNUxhM2REYkU5eWQwZFRVRkpoVDFSb2NHZG1SREJVVEV0c1dVUlJlbEJFYkdOd1UyWm1VUXBIWnpCWksxaDNRV0YyTVdKWFJHbHdWa0V5VEVocVdtaGlSRGhaZEZOQ2MxRnZVVE5UVkd4c05sRkdjMGhwUkROalJUUlJRbEoxTWtWdGFYTnBTR2xRQ2xkV01tNVlVVXRDWjBkbFRuSkhMMHQ0VEZZNGVIUktPVFJxTVVWR2FVSnpRME5oVDIweFVqQk9WVmhSVURsQlVsaDNWVEVyZGxGbmNWRkpVWEp5UVc0S1IwbDVNbVJ1VFVka1dXbHpXRlpOVHpaVmNXeHhXRXBCYTBGSlozaHFNamhITm5sUGFVMXNaVnBuUm5oVFRrNDVlWEpwVW5GWFVIQXpSVmRzZVVZM1V3cHZiekJ2U0RGaGNVWnNla0YxT0hGVWRETmhWM2t5TUhSeGVYbFRhMkowZUVVNVUzVnNUaTlUV0ZKVUsxaHFaVmgyVUVjMkNpMHRMUzB0UlU1RUlGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDZz09Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/kube-cloud-config.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cvo-overrides.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgdXBzdHJlYW06IGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9ncmFwaAogIGNoYW5uZWw6IGZhc3QKICBjbHVzdGVySUQ6IGIzNzljY2M1LTZkODUtNDliNi05Y2U3LTI2MDM1ZmNlNzcwOQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/host-etcd-service-endpoints.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogRW5kcG9pbnRzCm1ldGFkYXRhOgogIG5hbWU6IGhvc3QtZXRjZAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBhbm5vdGF0aW9uczoKICAgIGFscGhhLmluc3RhbGxlci5vcGVuc2hpZnQuaW8vZG5zLXN1ZmZpeDogcmFmZmEueHl6CnN1YnNldHM6Ci0gYWRkcmVzc2VzOgogIC0gaXA6IDE5Mi4wLjIuMQogICAgaG9zdG5hbWU6IGVudjEtZXRjZC0wCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/kube-system-secret-etcd-client.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2xpZW50CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkZha05EUVdaeFowRjNTVUpCWjBsSlRHcGhlbXhhVmxrMVp6QjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRJYWtWT1RVRnpSMEV4VlVVS1EzaE5SVnBZVW1wYVJFVk9UVUZ6UjBFeFZVVkJlRTFGV2xoU2FscEVRV1ZHZHpCNFQwUkZlVTFxWjNoUFZGRXhUa1JTWVVaM01IbFBSRVY1VFdwVmVBcFBWRkV4VGtSYVlVMUNOSGhFVkVGTVFtZE9Wa0pCYzFSQ1IxWXdXVEpSZUVSVVFVeENaMDVXUWtGTlZFSkhWakJaTWxGM1oyZEZhVTFCTUVkRFUzRkhDbE5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGRuZDNNV1J5U25JMmFETk9RM1ZPUVU5cVkxTkhlRkI2YTNNNGNtODBlRFFLY25ONVMyeFljV2sxVTBneGFTOHlRM0paZVZWbmFGaFhhMDVSY1d4b1dtTnRia0owUTJKR1ZYZGtSbUpRYjBaUEwwRnRXR1pTYUdKb2NUTjFSMmhuVFFwQldsTXZaazloYkdjNVRHaGpZbko1YzFsSk9YQllaV3h4UlVncksybzRaVE5LUzJKSVYzSmhVM1JDTmtneWEzQkxZVlJHVFRCREx6QmhUMnBLYmpRNUNrTjJkVE5zVW14cGNHZDFNWFEwYkhCc1VUYzFUMDVGWlhWR2JrVkdhVUZ6VERVNU9FWkxaREl2WlhwdVNXMHdWMmxGZUVsNlYxTm5LMFUwVUROWGIxUUtPR2hGTHpodFpEaFNjVGs0ZHpaTVdraFpOV0ZpWms1eGRHTmtkM1pxT1hJeE5GWmlTRFo0S3pVNVRqWTBVbXg0T0hkSGVVbGxLeThyTm5aNmNGUXZid3BOZVVsRU0ySk5SRlV4WVM5WWJqSnRNRUp1ZVZNeFVWTkJhMGQ0ZGs5VmIzTXlXa1l4U2s1NWEwNUdkVW9yTW5odWEwTXhRV2ROUWtGQlIycFdSRUpUQ2sxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsR1NVUkJWRUpuVGxaSVUxVkZSRVJCUzBKblozSkNaMFZHUWxGalJFRnFRVTFDWjA1V1NGSk5Ra0ZtT0VVS1FXcEJRVTFDTUVkQk1WVmtSR2RSVjBKQ1VteHdVMHBFVEVWTFozbDVSMkZ3WjJvMVZGUmhVVnA2YUhOV1JFRk9RbWRyY1docmFVYzVkekJDUVZGelJncEJRVTlEUVZGRlFXZHRTSEptZG1Vd1RVODBOMDQzTUdOaVdVSkNWRmM1VkhKNFZGbEhhelZQS3pkUVpsZFpabkZ5U2xjeFdWaENiWFZJVEN0dFpEbDNDa0puZVRoWE5IY3lPVzFCTmpReVRWTXZVelZhYm1Wd2JISklORmxCV0VkMVNFRXJOalYzVEdseWVTOWpka05KU3pndlExcDJSbmw0Y0ZsV01tNXpaRGdLVm1odFZsTk5XbTk2WWxGMGNIUkZTbUZzTkZWNmIyZE5XSE5LZFhkQ1UzbzRLMjg0VHpFM1JFZDFaRmRwVGtJck1ITnlZekl6YlZaUWNtTk5iemt2VmdwbVkwVmtVekp5VjFkUk9IaFdkakpEWm1SWVZITllZMnRLTkdKbWJYZDFTSEpFYnpKckszWmpiWGh4VFdkNWRWVXpMMUYwZG00MFNWSTJUMFUxVFhWVUNuQm9MMHBUYkZBeGFWUnNOM2xqT0N0eU5IQTVhbFZ2WVdzemFrOUxkMVpYY1c5T2R6RTFRMWh6ZFVsUmVITXJXbmtyT0RZMWVqRlNOSFJNUTFONFdFRUtZbFJZZHl0dVdqbDFUMGhJWWxOd1pqaENPVTUyYzJoQ2RURXZWbkZSUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJjSEk0VFU1WVlYbGhLMjlrZWxGeWFsRkViek5GYUhOVU9EVk1VRXMyVDAxbFN6ZE5hWEJXTm05MVZXZzVXWFk1Q21keE1rMXNTVWxXTVhCRVZVdHdXVmRZU25CM1lsRnRlRlpOU0ZKWGVqWkNWSFozU213ek1GbFhOR0YwTjJodldVUkJSMVYyTTNwdGNGbFFVelJZUnpZS09ISkhRMUJoVmpOd1lXaENMM1p2TDBoMGVWTnRlREZ4TW10eVVXVm9PWEJMVTIxcmVGUk9RWFk1UjJwdmVWb3JVRkZ5TjNRMVZWcFpjVmxNZEdKbFNncGhXbFZQSzFScVVraHlhRnA0UWxsblRFTXJabVpDVTI1a2RqTnpOWGxLZEVadmFFMVRUVEZyYjFCb1QwUTVNWEZGTDBsU1VDOUtibVpGWVhabVRVOXBDakpTTWs5WGJUTjZZWEpZU0dOTU5DOWhPV1ZHVjNncmMyWjFabFJsZFVWYVkyWk5Rbk5wU0haMkwzVnlPRFpWTHpaRVRXbEJPVEo2UVRGT1YzWXhOVGtLY0hSQldqaHJkRlZGWjBwQ2MySjZiRXRNVG0xU1pGTlVZM0JFVW1KcFpuUnpXalZCZEZGSlJFRlJRVUpCYjBsQ1FVVklOVGs0SzNweWJtTnhhRU0wWXdwTU4zazNSRUV3TmpjMVRVSjBUREF3YTJsRmVVMU1XbTh6VFZKV1YzcEdNeXRaTDJGTldGTldXVU5UY3pJeldXRlBja1JpV0hJMlYwSnFaR1ZHVVU1QkNsbFNUM0ZtTDFWVWVIazFNM2hLZDJkalVVWllTWE0zT1d0YWJFNDFiMUJVV2pCQlpEUnJWMWxGYUZwWE1DODBZV05DTURZNGVuTjVNRnBQWWpWSk9XUUtia1pPZDB0alZIQlBZVnB6VVZrMFRtSm5aV3BNSzFBNGREZFhha1FyZGprNFR6aEZTRXBaTm5GM2MyODNiRnBJVFhsSWFIWjVlRWQ1VkhwSmFGVkVUZ3AyU0d0cmRFbFdOV1U1YTBsSFFYWlJRMHhZWkhKYVFVRmhNVFI1ZVVWMFFqQTNSSGhpVm5acFpGSlhVVmRLY0VGamVERlhjekp5Vm1KaFExbHNhRTQ1Q25aUE9IWjJTVUpDYW1aT2ExcG1VVEZQWkdVck0wdzRjREJNVWpKNmNHbDFkVTF3VEd4Qk9IVnROM1paWm14blNuZ3dVWFV4WTFBclZFUkhaSGhPYUhjS05USnZNVmR2VlVObldVVkJlRWhYY2pCVWNFSXZaa3RtV1VoVlNsSXhNa2x4THpaaWRVTTNiRUZxTXpKb2RUSnFXR3RJYWtvNU5XMVpUeTlvZDJ4aGN3bzFhWFIwZGpSSVR6bFFTbkJxUnpCaFZVZEZlR1JZV1ZkWWFGUnVVRVJzUnpWWlpHbG9aeTh4YWpocVYyeFpTbk5NY21FeFJVRnhRUzlCWlVJM01UVlNDblJtSzBGYVpVTnhiVUYxVFRSSmQyc3dibTEzT0dWamMzRlhiVlpQTm14elJuRmtiR3BNTXpWU2VGSkxaaXROT0d0ak4wbHdTR05EWjFsRlFUSlZaMUVLVVVkdU1IVkhhRGwxWTJRMFJWYzFXWEp3YjFFNVRVaGxURWhXYUdsR1drcFpOWE5TVjB4bGVqYzRXWFJFWkVvM1ZVSjJiMnhEVnpSTFZFUlRNV1JJU3dwVFZsRjZPR1owWjFOdlRYUkNPSHBFTm5WR1FVWllXWFZETDB0amVGaExNVTlMUzBrME1XMVBkblJEZDFsSVFreEhUM1ZSV2pKVFdrMXNaa1V5YUdZeUNqZFZaMGgwVFVkdVRFTnBlRGd4UjNsR1ptbDNaMVJJVHk5MGJqQjBXV05qWTJoclIzRjZUVU5uV1VGUVVIZHhUV1pFWW5VelJYUmxSWFpqWWxsTWFtY0thME4yU21sWGIyZFhSM0YyV1daWVVuUk5PVXRKYzNCVVREUnhXSEZHTlZkd2JuZHVOVzh3U0VkWFJIcHJkWFk1TTA4d1dISnZhR2d5VFVaNFVGRnBlQXBsTWxrM0wxUlZWR0ZaVTNSeFlXUXpiMHB3UVcxdVFWVklkMnRKWVVsMGVUQnNaRWRyVERkelpXTnFMMFJEUlROaVJsazVSRGRITlc1QldVY3dWV3RuQ2tsUVIxTnJTazkwTTI1a1FtOVpUSEl4WkRWblZsRkxRbWRCY2t0eFNIWTJhSHAzVG1aSmExbHVhRGhJWjNkSlVrSjBlVkpOUnpZeU1tTlNRM1pPZUdzS2JrVlVlWGR6TkdFMGNYWTBSVEJZVlZSUldHMXdZa2gxUTJSeGVUQTRRVEp1VjI1alYxWnFOa1ZQWkRsU1VraExXa1IwYzNCcVlsUnpkazltYTJRMmFBcFBMMnhIZG0wNE9YZEVWRm92ZGtSaE5tczBiMVZsSzA1TGJYSkhiU3MwU0VWT1RIRmtNVzlpU0RGT09XTkZTR3hIZVdObWFWTTVhRTVsVlRaTk4wSTNDa00zYVM5QmIwZEJZamMzWTFnek9WSm1LMHQwVFVOblpYRkphMmMwZERnMVNHRmFURE5YU0V4Tk5UQk1ZM1JtUzNGTGVWWjVkM1UxVmt4SE4xSTFNU3NLVDJ0c05VczVTV0pCYkVoUmJYVkZhbE5yY0c1RlMxWlFXbE5NZGpsNE5WTkZSMEpNYzJoNFkydzRSa2wyU0U5SU5tSTJUVnBtVTNKUlFUTkdVMUp3YUFvd1pWRTVjMGxYVkZVckwxSmpha2QzVWpoeksxUTRXRUZrU3pWVk9XNUZPVE00WjBRME9UbFlaVEE0TUVaR1pFTmlWSE05Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/pull.json",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,ewogICJhcGlWZXJzaW9uIjogInYxIiwKICAia2luZCI6ICJTZWNyZXQiLAogICJ0eXBlIjogImt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbiIsCiAgIm1ldGFkYXRhIjogewogICAgIm5hbWVzcGFjZSI6ICJrdWJlLXN5c3RlbSIsCiAgICAibmFtZSI6ICJjb3Jlb3MtcHVsbC1zZWNyZXQiCiAgfSwKICAiZGF0YSI6IHsKICAgICIuZG9ja2VyY29uZmlnanNvbiI6ICJleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6TktiMkp0Wkhkak0wcDZZMGRHTm1WdE9YTk5WMVpwV2pKT2VsbFhlR3BqVnprMlkyNVdjR0pIYkhOTlNGSnFZVE5LYTJKdE5UUlBhelZEVjJwQ1UxTjZTa3hPUldoRVZHcE9WVTR3VFhwWFZXeElUVlpHUjFSVmRGbFdlazVXVm1zMVYxTkZlRkZYVldSRFRWVjRRMDR4U2t0TmEzaFVVekZhUTFSclJsbFRhbHBEVGtSb1YwMUVaRVZQVkVrOUlpd2laVzFoYVd3aU9pSnljM0JoZW5wdmJFQnlaV1JvWVhRdVkyOXRJbjBzSW5GMVlYa3VhVzhpT25zaVlYVjBhQ0k2SW1JelFteGliazV2WVZkYU1FeFlTbXhpUjFab1l6SlZkRnBIVmpKTE0wcHZZbTFrZDJNelNucGpSMFkyWlcwNWMwMVhWbWxhTWs1NldWZDRhbU5YT1RaamJsWndZa2RzYzAxSVVtcGhNMHByWW0wMU5FOXJOVU5YYWtKVFUzcEtURTVGYUVSVWFrNVZUakJOZWxkVmJFaE5Wa1pIVkZWMFdWWjZUbFpXYXpWWFUwVjRVVmRWWkVOTlZYaERUakZLUzAxcmVGUlRNVnBEVkd0R1dWTnFXa05PUkdoWFRVUmtSVTlVU1QwaUxDSmxiV0ZwYkNJNkluSnpjR0Y2ZW05c1FISmxaR2hoZEM1amIyMGlmWDE5IgogIH0KfQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-ingress-01-crd.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogaW5ncmVzc2VzLmNvbmZpZy5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogIG5hbWVzOgogICAga2luZDogSW5ncmVzcwogICAgbGlzdEtpbmQ6IEluZ3Jlc3NMaXN0CiAgICBwbHVyYWw6IGluZ3Jlc3NlcwogICAgc2luZ3VsYXI6IGluZ3Jlc3MKICBzY29wZTogQ2x1c3RlcgogIHZlcnNpb25zOgogIC0gbmFtZTogdjEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-ingress-02-config.yml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5lbnYxLnJhZmZhLnh5egpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-dns-01-crd.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogZG5zZXMuY29uZmlnLm9wZW5zaGlmdC5pbwpzcGVjOgogIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgbmFtZXM6CiAgICBraW5kOiBETlMKICAgIGxpc3RLaW5kOiBETlNMaXN0CiAgICBwbHVyYWw6IGRuc2VzCiAgICBzaW5ndWxhcjogZG5zCiAgc2NvcGU6IENsdXN0ZXIKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-dns-02-config.yml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogcmFmZmEueHl6CnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-network-01-crd.yml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxYmV0YTEKa2luZDogQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uCm1ldGFkYXRhOgogIG5hbWU6IG5ldHdvcmtjb25maWdzLm5ldHdvcmtvcGVyYXRvci5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogbmV0d29ya29wZXJhdG9yLm9wZW5zaGlmdC5pbwogIG5hbWVzOgogICAga2luZDogTmV0d29ya0NvbmZpZwogICAgbGlzdEtpbmQ6IE5ldHdvcmtDb25maWdMaXN0CiAgICBwbHVyYWw6IG5ldHdvcmtjb25maWdzCiAgICBzaW5ndWxhcjogbmV0d29ya2NvbmZpZwogIHNjb3BlOiBDbHVzdGVyCiAgdmVyc2lvbnM6CiAgICAtIG5hbWU6IHYxCiAgICAgIHNlcnZlZDogdHJ1ZQogICAgICBzdG9yYWdlOiB0cnVlCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-network-02-config.yml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbmV0d29ya29wZXJhdG9yLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrQ29uZmlnCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogZGVmYXVsdApzcGVjOgogIGFkZGl0aW9uYWxOZXR3b3JrczogbnVsbAogIGNsdXN0ZXJOZXR3b3JrczoKICAtIGNpZHI6IDEwLjEyOC4wLjAvMTQKICAgIGhvc3RTdWJuZXRMZW5ndGg6IDkKICBkZWZhdWx0TmV0d29yazoKICAgIG9wZW5zaGlmdFNETkNvbmZpZzoKICAgICAgbW9kZTogTmV0d29ya3BvbGljeQogICAgb3RoZXJDb25maWc6IG51bGwKICAgIHR5cGU6IE9wZW5zaGlmdFNETgogIHNlcnZpY2VOZXR3b3JrOiAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_cloud-creds-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFVbFBRa1kzVUVKVlRrcERTa0pZV2tFPQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogWmxGS1FVcGhkMFIwY1RCdVlTOWFZVzl4YkZKU00ySnlZaXREWjJzM2JIVmpTSFYzUVZKdlJ3PT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_role-cloud-creds-secret-reader.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIG5hbWU6IGF3cy1jcmVkcy1zZWNyZXQtcmVhZGVyCnJ1bGVzOgotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJzZWNyZXRzIl0KICByZXNvdXJjZU5hbWVzOiBbImF3cy1jcmVkcyJdCiAgdmVyYnM6IFsiZ2V0Il0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_binding-discovery.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjFiZXRhMQptZXRhZGF0YToKICBuYW1lOiBkaXNjb3ZlcnkKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogc3lzdGVtOmRpc2NvdmVyeQpzdWJqZWN0czoKLSBraW5kOiBHcm91cAogIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwotIGtpbmQ6IEdyb3VwCiAgbmFtZTogJ3N5c3RlbTphdXRoZW50aWNhdGVkJwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_kubeadmin-password-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3SkdSNVNTODRjSE5JU1UxNFJ5NU1NbGRNT0haek5DNVFiRWRRUVRKNlNsUkdURVl4YW10V2FXWldOV1k0Y21GVVpXRk9VMmsyCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDJWdWRqRXRZWEJwTG5KaFptWmhMbmg1ZWpvME9UVXdNQzlqYjI1bWFXY3ZiV0Z6ZEdWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUkZaRlRrUlJWMXBJV2pCR00xTlZTa0phTUd4RFVWVlNRbFJyU201aE0wWnZZVEpzU0U5WVkzZFJhMFpTWXpCYVFsSkZSblJVVmtwS1pEQldRbGRWVWxkVlZrWk5VbGhrYzJSdFRraFdibFZMV1hwS2IyTkdjSFZWV0doR1VrVkdVRkZ0WkU5V2EwcENWRlpTUTAwd2NESlphazVTWkVacmVWSllaRWxoUjA1UFZGWlNibVZGTVhGVFZGSk9Wa2R6ZDFSc1VsSk5SbVJ2V1RBMVRtRnRaRFJVVjNCS1RWRndUbFpIYzNkVWJGSlNUVVprY1ZGWE1VNVZhMnd6VWxWR1dsSkdXbEpWVlhoR1pESjRNbGt3WkZka1YwMTVZVWhDWVdKc1JqUlNWVkpDVkRCS2JsUnNXa05SVlRGVlVXcE9TMlJ0U1hwVldGSmFUV3RXTTBOdFpHNVNWMnhPVVZSQ1NGRXhUbmhTTVU1S1dXcE9SVlZWVmtOUlZrWldVVlZGTUZOVlNrVmtNRVl6V2pKa1JsTXdSblpUVlVwQ1ZWVk9kR1ZHYkhGVlJGWlRWMnBDUW1GWGNIaE1NM0JhWkc1T2NXVkdXVXRPUjBwMVlVVmFNMXBYV2taaWJGcFZUMGMxU1dKWGFGVlhWMmh5VVZVeFZFNVdWVFZPYVhNMFdsVkdNRll5WTNkWmJURlVZVlU0TUU5V2NHMWFWM2hXVFZoS2FtUjZZekZrV0ZrelVrWnJkazVwYzNwalFXOTJVMnBHYjFKV1dscGxXRmw1WkRCd1RsbFZVakpVYW1SUVZVaFdVV1ZxVG5wVGJFRnlVVEpaZDFOdE9WcE9hazU2VVZoWk1VNXNRalpUV0ZKSFZETlNhV1Z0ZEU5T01WSnhWSHBWTVdOcldrZE9SMnhaUTIwNWExTllWWGhWUlRBeVpFUktiVnBGTVhGUFIxWlhWRWhTTTFaNmFFWlVNWEF3V2tWTk1WZHROWHBPVjFaR1ZURmFlV1F5TlUxYVZXOXlWMnRzZWxVeVZrOVhSR1JLVWtoS01GbFhaRlZpVlRReFVuazRTMWRYY0RKa1YzUTBUbTFhV2s1dFNtaFJXR2hFVXpOQ2RXUnFVa3RpVmtZMFVrUkNTVnB1YUd0amJWVXdaRmR6TWsxWWJ6QmtNWEJPVjJ0ak1GUklWbXBrUkVwTlRtMXNNVmRIVWxkV1JGcENVbTAxTUZWQmNIWlZWbkJwV2tkb1UwOVZWVFJSYmtKRVVrZEdlR1JJYkRGYVIyaHZaR3BvWVdReVRrcFdWV2hHWlZobmVGa3dlRVJOYVRsb1RrVkZjazVzU2tKaVV6bE5ZMU01ZVdOclNtcE5SVTVxWW1wQ1JrMHdNVzlEYTBadVZGVktRbEZWWkhGVlYzQkRVVlV4UWs1RlpFSk5WbFpyVWtoa1JsRnBPVE5WVlZaQ1pEQnNSR05GVWtKVlJVcHVWR3hhU1ZWck1VTlJWMWswVWxWS1ZWRlZVa0pWVldkMlZGVkpkMUl3UlhoV1YxRkxVa2RrVWxZd1NrTlZibkJXVFRKdmVGRllTak5hTTBVelZURk9kbVZYV25SUlZHd3dUREZDYkZac1NtOVNSVVpQVVcxa2NtTlhhSEpoVldNMVpIcENRMUZXUm5wU2EwWkNWREJPUWxWVlZrSlZNM0JDWW5kd05sSkliREZoVjJSSVZFUmFORk5EZEVkaWFUbGFVekZHVkdNemNFcGtNWEJoVWtWS05tRnFXbXRpV0d4NVZHeEtVRlV4WnpWVmFtdzJZa1JTV1ZSdFJsTmlNMXBRWkdwT2Ewd3lPVEZoVmtKVlRERmtVME51WnpCalYwWlRZekZLVUZkRVdsbFhiRnB2Vm14YVVGVnFXbFZXU0ZaMFZUTldhbGxWTlZaU2VscHZUVVJrYmxKRmRHOVVhekUyWVhwQk1tUnJkRVpPUjNoc1dsZG5lV05xVW5WalZrNHpUV3RLYTA1RVkwdGFWRVpOWWtack0xa3hVa3BSV0c4eFdWWkZkbGRIVFRCa2EzUkhZa2R3Vmswd2FFcFdiVmwzVmtaQmVVOUZPRFZOYkdodFZtMVNiR1ZHU1RKak1qRTBaREpzVDFsV1pERlNiRVUxVFVWT1ZGUXdPVWhXWjNCUFUxaFdjRnB0UmxGVlNFWndZVmhzZVU5R1pIRmhSWGh2VGxSc1dGcHVhekJYUlZvelVqSktOVmt6YkhoUFZtTjNXbXBTZVZKVlNsTmtSbEZ5VFZSa2MxUkZSVEppYm14d1Ztc3hhbFZWZEZwaFIwbDRRMnMxUkZaRmRHMU5ha1pYVTJwc1RGcHRkM1prVnpCNVZsY3hRbU5YWjNkT1ZYaExUbXR3ZDJKWGVIbFVNSE14WkdwS1ZsUnRSbWxhVkZvMFkyNVNNazlHUW5oa2FtaHBXVk01YlZGVlZuaFZSVkoxVmtVMFMxcHRTa2RPUkVaUFYyeHNVVlpyZUhCV1JuQnFaRlpvTTFCVU1FdE1VekIwVEZNeFJsUnJVV2RSTUZaVFZrVnNSMU5WVGtKV1JWVjBURk13ZEV4UmJ6MGlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5ZlN3aWRHbHRaVzkxZEhNaU9udDlMQ0oyWlhKemFXOXVJam9pTWk0eUxqQWlmU3dpYm1WMGQyOXlhMlFpT250OUxDSndZWE56ZDJRaU9uc2lkWE5sY25NaU9sdDdJbTVoYldVaU9pSmpiM0psSWl3aWMzTm9RWFYwYUc5eWFYcGxaRXRsZVhNaU9sc2ljM05vTFhKellTQkJRVUZCUWpOT2VtRkRNWGxqTWtWQlFVRkJSRUZSUVVKQlFVRkNRVkZFZEhSNU9TdFJkRzl1SzJvek1VZHRXa2RoYTB4eGJHczBkRkIxYnk5TlJtNVhTVGxpV1V0WVZXaDRZekozTUVGQk9UbHRkekJMWWs4MFZsUlFNRmsxVEdWRllsaEZNR0ZEYkhNeE0xUnpaVWd5UTNSdlJsVm9ia1JUZUhoWFRUbGhWemxETkhaWVJFMW1aREZpZFZSUVlVUktUVXhoUzA5MGVXNTZkVE0wU0d0dE4xQTNkMjVCY25jeldYSTViVmR2WlZSblZGSlhaek00V0dsNVMyVm9PWG8xTVV3dlZGRmtaVzQzVGxjeWVtNWhVVU5oZGpoUlYxcEhURzB3VEhscFNsZHFUV2xtTlVGeFVFSlpaV1V2UlVFelkzVm5hbFUzV2tad1ExSjJjSGhEWVhKcVExUXJNMnBCUVZZM01ESkplVzVaYzNGQ1ppczBiVVEzVlVKSE5VZFZOM3BpYlZsS2RHMVlTWHBqWjBKblpUbDJlV1pUUzJob1dIWnBiMHRyVkRsWk5FNUNLM0ZDWnpsa1NqQk1Ta3RoVlN0NlNYcEljWGRHTjFRd04ya3pibEYzYmtKSE9EZzFZVzFFZVZKSVVFUkJaR29nY25Od1lYcDZiMnhjYmlKZGZWMTlMQ0p6ZEc5eVlXZGxJanA3ZlN3aWMzbHpkR1Z0WkNJNmUzMTkK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_cluster.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY2x1c3Rlci5rOHMuaW8vdjFhbHBoYTEKa2luZDogQ2x1c3RlcgptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGVudjEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogICAgcG9kczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4xMjguMC4wLzE0CiAgICBzZXJ2aWNlRG9tYWluOiAiIgogICAgc2VydmljZXM6CiAgICAgIGNpZHJCbG9ja3M6CiAgICAgIC0gMTcyLjMwLjAuMC8xNgogIHByb3ZpZGVyQ29uZmlnOiB7fQpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKaXRlbXM6Ci0gYXBpVmVyc2lvbjogY2x1c3Rlci5rOHMuaW8vdjFhbHBoYTEKICBraW5kOiBNYWNoaW5lCiAgbWV0YWRhdGE6CiAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgbGFiZWxzOgogICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlbnYxCiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtdHlwZTogbWFzdGVyCiAgICBuYW1lOiBlbnYxLW1hc3Rlci0wCiAgICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIHNwZWM6CiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgIHByb3ZpZGVyQ29uZmlnOgogICAgICB2YWx1ZToKICAgICAgICBhbWk6CiAgICAgICAgICBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6IG51bGwKICAgICAgICAgIGlkOiBhbWktMDA5ODAyN2RjM2EzNzllMTMKICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKICAgICAgICBjcmVkZW50aWFsc1NlY3JldDogbnVsbAogICAgICAgIGRldmljZUluZGV4OiAwCiAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgYXJuOiBudWxsCiAgICAgICAgICBmaWx0ZXJzOiBudWxsCiAgICAgICAgICBpZDogZW52MS1tYXN0ZXItcHJvZmlsZQogICAgICAgIGluc3RhbmNlVHlwZTogbTQubGFyZ2UKICAgICAgICBrZXlOYW1lOiBudWxsCiAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgICAtIG5hbWU6IGVudjEtZXh0CiAgICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgICAgLSBuYW1lOiBlbnYxLWludAogICAgICAgICAgdHlwZTogbmV0d29yawogICAgICAgIG1ldGFkYXRhOgogICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICBhdmFpbGFiaWxpdHlab25lOiB1cy1lYXN0LTFhCiAgICAgICAgICByZWdpb246IHVzLWVhc3QtMQogICAgICAgIHB1YmxpY0lwOiB0cnVlCiAgICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgICAgLSBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgLSBlbnYxX21hc3Rlcl9zZwogICAgICAgICAgaWQ6IG51bGwKICAgICAgICBzdWJuZXQ6CiAgICAgICAgICBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgLSBlbnYxLW1hc3Rlci11cy1lYXN0LTFhCiAgICAgICAgICBpZDogbnVsbAogICAgICAgIHRhZ3M6CiAgICAgICAgLSBuYW1lOiBvcGVuc2hpZnRDbHVzdGVySUQKICAgICAgICAgIHZhbHVlOiBiMzc5Y2NjNS02ZDg1LTQ5YjYtOWNlNy0yNjAzNWZjZTc3MDkKICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lbnYxCiAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICAgIG5hbWU6IG1hc3Rlci11c2VyLWRhdGEKICAgIHZlcnNpb25zOgogICAgICBrdWJlbGV0OiAiIgogIHN0YXR1czoge30Ka2luZDogTGlzdAptZXRhZGF0YToge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogd29ya2VyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDJWdWRqRXRZWEJwTG5KaFptWmhMbmg1ZWpvME9UVXdNQzlqYjI1bWFXY3ZkMjl5YTJWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUkZaRlRrUlJWMXBJV2pCR00xTlZTa0phTUd4RFVWVlNRbFJyU201aE0wWnZZVEpzU0U5WVkzZFJhMFpTWXpCYVFsSkZSblJVVmtwS1pEQldRbGRWVWxkVlZrWk5VbGhrYzJSdFRraFdibFZMV1hwS2IyTkdjSFZWV0doR1VrVkdVRkZ0WkU5V2EwcENWRlpTUTAwd2NESlphazVTWkVacmVWSllaRWxoUjA1UFZGWlNibVZGTVhGVFZGSk9Wa2R6ZDFSc1VsSk5SbVJ2V1RBMVRtRnRaRFJVVjNCS1RWRndUbFpIYzNkVWJGSlNUVVprY1ZGWE1VNVZhMnd6VWxWR1dsSkdXbEpWVlhoR1pESjRNbGt3WkZka1YwMTVZVWhDWVdKc1JqUlNWVkpDVkRCS2JsUnNXa05SVlRGVlVXcE9TMlJ0U1hwVldGSmFUV3RXTTBOdFpHNVNWMnhPVVZSQ1NGRXhUbmhTTVU1S1dXcE9SVlZWVmtOUlZrWldVVlZGTUZOVlNrVmtNRVl6V2pKa1JsTXdSblpUVlVwQ1ZWVk9kR1ZHYkhGVlJGWlRWMnBDUW1GWGNIaE1NM0JhWkc1T2NXVkdXVXRPUjBwMVlVVmFNMXBYV2taaWJGcFZUMGMxU1dKWGFGVlhWMmh5VVZVeFZFNVdWVFZPYVhNMFdsVkdNRll5WTNkWmJURlVZVlU0TUU5V2NHMWFWM2hXVFZoS2FtUjZZekZrV0ZrelVrWnJkazVwYzNwalFXOTJVMnBHYjFKV1dscGxXRmw1WkRCd1RsbFZVakpVYW1SUVZVaFdVV1ZxVG5wVGJFRnlVVEpaZDFOdE9WcE9hazU2VVZoWk1VNXNRalpUV0ZKSFZETlNhV1Z0ZEU5T01WSnhWSHBWTVdOcldrZE9SMnhaUTIwNWExTllWWGhWUlRBeVpFUktiVnBGTVhGUFIxWlhWRWhTTTFaNmFFWlVNWEF3V2tWTk1WZHROWHBPVjFaR1ZURmFlV1F5TlUxYVZXOXlWMnRzZWxVeVZrOVhSR1JLVWtoS01GbFhaRlZpVlRReFVuazRTMWRYY0RKa1YzUTBUbTFhV2s1dFNtaFJXR2hFVXpOQ2RXUnFVa3RpVmtZMFVrUkNTVnB1YUd0amJWVXdaRmR6TWsxWWJ6QmtNWEJPVjJ0ak1GUklWbXBrUkVwTlRtMXNNVmRIVWxkV1JGcENVbTAxTUZWQmNIWlZWbkJwV2tkb1UwOVZWVFJSYmtKRVVrZEdlR1JJYkRGYVIyaHZaR3BvWVdReVRrcFdWV2hHWlZobmVGa3dlRVJOYVRsb1RrVkZjazVzU2tKaVV6bE5ZMU01ZVdOclNtcE5SVTVxWW1wQ1JrMHdNVzlEYTBadVZGVktRbEZWWkhGVlYzQkRVVlV4UWs1RlpFSk5WbFpyVWtoa1JsRnBPVE5WVlZaQ1pEQnNSR05GVWtKVlJVcHVWR3hhU1ZWck1VTlJWMWswVWxWS1ZWRlZVa0pWVldkMlZGVkpkMUl3UlhoV1YxRkxVa2RrVWxZd1NrTlZibkJXVFRKdmVGRllTak5hTTBVelZURk9kbVZYV25SUlZHd3dUREZDYkZac1NtOVNSVVpQVVcxa2NtTlhhSEpoVldNMVpIcENRMUZXUm5wU2EwWkNWREJPUWxWVlZrSlZNM0JDWW5kd05sSkliREZoVjJSSVZFUmFORk5EZEVkaWFUbGFVekZHVkdNemNFcGtNWEJoVWtWS05tRnFXbXRpV0d4NVZHeEtVRlV4WnpWVmFtdzJZa1JTV1ZSdFJsTmlNMXBRWkdwT2Ewd3lPVEZoVmtKVlRERmtVME51WnpCalYwWlRZekZLVUZkRVdsbFhiRnB2Vm14YVVGVnFXbFZXU0ZaMFZUTldhbGxWTlZaU2VscHZUVVJrYmxKRmRHOVVhekUyWVhwQk1tUnJkRVpPUjNoc1dsZG5lV05xVW5WalZrNHpUV3RLYTA1RVkwdGFWRVpOWWtack0xa3hVa3BSV0c4eFdWWkZkbGRIVFRCa2EzUkhZa2R3Vmswd2FFcFdiVmwzVmtaQmVVOUZPRFZOYkdodFZtMVNiR1ZHU1RKak1qRTBaREpzVDFsV1pERlNiRVUxVFVWT1ZGUXdPVWhXWjNCUFUxaFdjRnB0UmxGVlNFWndZVmhzZVU5R1pIRmhSWGh2VGxSc1dGcHVhekJYUlZvelVqSktOVmt6YkhoUFZtTjNXbXBTZVZKVlNsTmtSbEZ5VFZSa2MxUkZSVEppYm14d1Ztc3hhbFZWZEZwaFIwbDRRMnMxUkZaRmRHMU5ha1pYVTJwc1RGcHRkM1prVnpCNVZsY3hRbU5YWjNkT1ZYaExUbXR3ZDJKWGVIbFVNSE14WkdwS1ZsUnRSbWxhVkZvMFkyNVNNazlHUW5oa2FtaHBXVk01YlZGVlZuaFZSVkoxVmtVMFMxcHRTa2RPUkVaUFYyeHNVVlpyZUhCV1JuQnFaRlpvTTFCVU1FdE1VekIwVEZNeFJsUnJVV2RSTUZaVFZrVnNSMU5WVGtKV1JWVjBURk13ZEV4UmJ6MGlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5ZlN3aWRHbHRaVzkxZEhNaU9udDlMQ0oyWlhKemFXOXVJam9pTWk0eUxqQWlmU3dpYm1WMGQyOXlhMlFpT250OUxDSndZWE56ZDJRaU9uc2lkWE5sY25NaU9sdDdJbTVoYldVaU9pSmpiM0psSWl3aWMzTm9RWFYwYUc5eWFYcGxaRXRsZVhNaU9sc2ljM05vTFhKellTQkJRVUZCUWpOT2VtRkRNWGxqTWtWQlFVRkJSRUZSUVVKQlFVRkNRVkZFZEhSNU9TdFJkRzl1SzJvek1VZHRXa2RoYTB4eGJHczBkRkIxYnk5TlJtNVhTVGxpV1V0WVZXaDRZekozTUVGQk9UbHRkekJMWWs4MFZsUlFNRmsxVEdWRllsaEZNR0ZEYkhNeE0xUnpaVWd5UTNSdlJsVm9ia1JUZUhoWFRUbGhWemxETkhaWVJFMW1aREZpZFZSUVlVUktUVXhoUzA5MGVXNTZkVE0wU0d0dE4xQTNkMjVCY25jeldYSTViVmR2WlZSblZGSlhaek00V0dsNVMyVm9PWG8xTVV3dlZGRmtaVzQzVGxjeWVtNWhVVU5oZGpoUlYxcEhURzB3VEhscFNsZHFUV2xtTlVGeFVFSlpaV1V2UlVFelkzVm5hbFUzV2tad1ExSjJjSGhEWVhKcVExUXJNMnBCUVZZM01ESkplVzVaYzNGQ1ppczBiVVEzVlVKSE5VZFZOM3BpYlZsS2RHMVlTWHBqWjBKblpUbDJlV1pUUzJob1dIWnBiMHRyVkRsWk5FNUNLM0ZDWnpsa1NqQk1Ta3RoVlN0NlNYcEljWGRHTjFRd04ya3pibEYzYmtKSE9EZzFZVzFFZVZKSVVFUkJaR29nY25Od1lYcDZiMnhjYmlKZGZWMTlMQ0p6ZEc5eVlXZGxJanA3ZlN3aWMzbHpkR1Z0WkNJNmUzMTkK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/auth/kubeconfig",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMXFTVFJOVkdzd1RsUlJNRmRvWTA1TmFtZDRUV3BKTVFwTlZHc3dUbFJSTUZkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGVGbHFVRFZTV2pCQmFXcHhMM3BaZG5OcWVGWUtOR0p1YUVaM1pXWkZibFpVT0c1SWJXaFVXV2hyUVUxVE5WVTVOaXM0WlVGMFYyY3dZbTFUYVU4ME9WcG1aV3hWTVhKamR6YzFkWFkzUkZrdk5pc3pjQW92U2pGb1JWWlplWFl5ZDBwTllVUjJUamRQVUhWUWVqTnpTbEFyUTJZd1NtOVpOak56UVhZMU5sQjZTWFJHVDNSaWVtdE9OMVJxVHpVMWNrWkdOR2xZQ205a1NYVXhVRTAyZERKbVpFMXFPR1ZXVEhSM1Z6aEZUMXAwWkVNMVdtNXpOV1ZGVTFaeWQyNU1aVW9yV2tselUyVk9XRGRKUkhKMFlXZFViVTQxUnk4S1dXcDJkV3Q0Tm1aWk5tSmhRWGhEUzNCdWRqUktiVkY0UkRCSVpuaGtjbVUwZFdzMk1YbzBkMXBOV2tjMFRIVmpkREpNTm1sMVdHUldWRFpCUm01MFVBcHZVVnBpWkdoU09VVTRRbkJEUkdGeGRIbDFaR2hvZGpoYWQyTkpWVWhGZVhneFkweERNaTloTkVFck5sSkJiUzlNY1M5eWNrSmpNRU5qYmpCRk0wMW9Da0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTDFCbFZsSm9SRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJVM3BCYndwNlJIbDFhV2RIVERaNFNDdEdiaTlaUzFGVGMzcEpkMXBhUkVKNmFqWmtiWGx5VGxKUFUxZzVVamw2YkRSWVRtRlNiM1pQZGpOa0wyOTFhVkJVTDFkU0NuZzBjV0ZTYzFKUFdEWllXbFpvVmxaUFVqWlVWSFZ0VTNWallVNVZSelpvTURkblJFdG9UazE2YXpBMmRrdEZOR3hsWldneWNqUnVjVk4zTWtKa05EY0taVEZNYkZrM1kxUkpRWG8xWVZFdldHTTBka3RHYkdwVk0waEpWbVl3VkZBeU9FODVNbGhtVm1SbGVGSTJjMjE0ZDJsT1lWZDFSbEU1TUVOVFQwOUhWZ3BPU1hWcFptRlFVSEZwYVhseU9GZHFhRXhvTlRsWFpuazBXRVozUjJKNVkzbHhPVmN3WmpSeVJVSlNkRlFyTVRkc1RFRTJibmxwVmsxalVVdFphR0l4Q2s1RFZFdG1NakZXU2psTFptd3ZkVzB5VlcxQmNXZ3dOVXhLTmtwd2JXeHlUMHMxZGpKVlRtRmlaVFo0Y25SMk9GQnhkamhpWVM5bVFVVnhVRVJ1VkU0S1ptSkdOREZPV2xsUVZreHBWRnBqZFZoM1BUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9lbnYxLWFwaS5yYWZmYS54eXo6NjQ0MwogIG5hbWU6IGVudjEKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGVudjEKICAgIHVzZXI6IGFkbWluCiAgbmFtZTogYWRtaW4KY3VycmVudC1jb250ZXh0OiBhZG1pbgpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJXYWtORFFXbzJaMEYzU1VKQlowbEpSVlJGZWl0bE1tWnhUMUYzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS1ZFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVkVRVTlDWjA1V1FrRk5WRUl5ZERGWmJWVjBXVEpGZDBob1kwNU5WR2Q0VFdwSk5FMVVhekJPVkZFd1YyaGpUZ3BOYW1kNFRXcEpNVTFVYXpCT1ZGRXlWMnBCZDAxU1kzZEdVVmxFVmxGUlMwVjNOWHBsV0U0d1dsY3dObUpYUm5wa1IxWjVZM3BGVmsxQ1RVZEJNVlZGQ2tGNFRVMWpNMng2WkVkV2RFOXRSbXRpVjJ4MVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFS2VVeDJTME12Y3pWdVZuaFROREowTUZNM2FXNXlZa3BqVlhGeVJGaGFSRXRsTWtkM1dUQldOMk4zY0dwMWNXVXZOazgxVlhwdGJWTjJaR0l2Yld0RFFncDBlVk5RYmpSaWVYSnhWU3RGZG1SelpTczJabEl3Tnl0dWRFMXFiMUk1U1VaNGJGbFplQzluYld4emRtRlpTVVV3VVc1S1ZYSXdSM2xPVVdSTU9VbHJDalIzTVZaUFpGZzJUWGMzVVVwTVlrOXFXazFaUldRMGEwSkhUM0FyZUhvdk9IbFJXSGhYTTBSUWNrUklUMFoyTlRCRFMwcHRibGxPT0VaV1JISlpXVklLWTNsdFdIZzJOMEZ3ZFdSUmVEaE1jVVo2UzFkTE1rdGpkRGhHTlVJeVZ6WlpWSEZaZEU1c0szQkxUSGRJV0ZWTFJuWlRWRzFxTm1kWE1sYzNPSEIwU2dvMVpqVTFSemhIZHpacE5tVXhia3RQU0ZFclFtcGhiV3M0VjBOV1J6ZzVSMlZ3WVc5eU5tWnFhMXB0TVdOd1JIZGpUMkZ2Y2xGcWMzQkxjRVF3YVZaUUNteEVkbkI0ZFd0T1VFWlpTWEp3ZUVFNFVWUTJPVkZKUkVGUlFVSnZNemgzWmxSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQ1lVRjNTRkZaUkZaU01Hd0tRa0paZDBaQldVbExkMWxDUWxGVlNFRjNSVWREUTNOSFFWRlZSa0ozVFVOTlFYZEhRVEZWWkVWM1JVSXZkMUZEVFVGQmQwaFJXVVJXVWpCUFFrSlpSUXBHU1VreWNFVlBMekZTUmpKbk1qZEhXVVkxYmtKek5tNVNlVlFyVFVJNFIwRXhWV1JKZDFGWlRVSmhRVVpJVGxSbFVGVkRka05EY25SS1MycEtLMWxFQ2pJek9EazFWa2RGVFVFd1IwTlRjVWRUU1dJelJGRkZRa04zVlVGQk5FbENRVkZDWXl0RVVtZHZPVlpNVVc1eVdWVjRibTAyWjBVcmFqWkJjWEp5WWpZS1ZGQlVOelE1YmpOVlpWVnJNRzQyZDNsNlUyVkVWVE5TT0ZoclEydGplbkp5WmpacVN6SktTSGw0WVdSVlMxTXJjMUptVEZoUk1VRkRkamRaZFVOWmFnbzJVbGRQTUhGQ2NFcERlRk12WjJsYVRUTkZMME4xS3pSWU1taG9ZVTFKZFdWU01XdGFlV2hPUkRoeU9YQTBOM2gwTTNNdlZuQllhRXM1TVRSM1UxRldDbUo2TjB3d1duSkxZek5qTmxGVFlURnNjVlJ6WVhFNE5VOXBWWEZVYVdjd1RHTk1abU5xWTBKVGIxWkZWMEZDYTFBd1NYZ3hNemhZZG5KbVZDc3hVVXdLZVhWMFJDOUlTMUJZV1RNelZXeGtNa1ZMZHpaTWJ6aHpSMmR6UVhCUWVqVTFVVWRvTUdwTGFqWmhlV1JRVUUxSGJtTmpTMlYwU2pkSlIwcFBMM014YWdwMFkzUnBibGxGY0M4NWQwWXZaMlZGYlZsUFRITkVLemMzUzNoUWNVdHlTRkZaUWk4eGVVczJkR3hYY1ZFcldXOXNjbE5RUWpNMGN3b3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQmVVeDJTME12Y3pWdVZuaFROREowTUZNM2FXNXlZa3BqVlhGeVJGaGFSRXRsTWtkM1dUQldOMk4zY0dwMWNXVXZDalpQTlZWNmJXMVRkbVJpTDIxclEwSjBlVk5RYmpSaWVYSnhWU3RGZG1SelpTczJabEl3Tnl0dWRFMXFiMUk1U1VaNGJGbFplQzluYld4emRtRlpTVVVLTUZGdVNsVnlNRWQ1VGxGa1REbEphelIzTVZaUFpGZzJUWGMzVVVwTVlrOXFXazFaUldRMGEwSkhUM0FyZUhvdk9IbFJXSGhYTTBSUWNrUklUMFoyTlFvd1EwdEtiVzVaVGpoR1ZrUnlXVmxTWTNsdFdIZzJOMEZ3ZFdSUmVEaE1jVVo2UzFkTE1rdGpkRGhHTlVJeVZ6WlpWSEZaZEU1c0szQkxUSGRJV0ZWTENrWjJVMVJ0YWpablZ6SlhOemh3ZEVvMVpqVTFSemhIZHpacE5tVXhia3RQU0ZFclFtcGhiV3M0VjBOV1J6ZzVSMlZ3WVc5eU5tWnFhMXB0TVdOd1JIY0tZMDloYjNKUmFuTndTM0JFTUdsV1VHeEVkbkI0ZFd0T1VFWlpTWEp3ZUVFNFVWUTJPVkZKUkVGUlFVSkJiMGxDUVVoMllVRm5kbkZqWkRNMWRrNXhPQXA2WjBJMllXeHlkR3hpUldJd00ySkVaekp6YkVaNVVIQkdkMWxtTDNaRFNESkJlbk5KUkRsTVVFWk5UbVZLS3k4NVZXb3JjMlU0U0RSSGVVcFpRV1J5Q25sbEsyUm9ORVZFTmtjMGRXSXJiRll4TjBWSk0yeFJjWE4yV1V0R1VFeFJWMmhDZDB4V2RIcGlaVUY2YmprMlJteHRWRkpOVTJsRFRXVkhWek5wTkVrS04wOUVSbEpVUTJoRmVTOTVTR3R5YkRGaVdUZExjaXRTZG1OdVRGSXJLMnQ0VW5WQ05Vd3lhbUp1ZUd3M1dHaGxTbkpxTTFkS1JHMUdZbkJ0WlZKVmR3cG5jMmxFTm5aUFptaFphblJJT0ZOUVkyRlRhR3BGYkhwbGVHMWxWMmRFWVVsV05qTXZWR0YxV210dWR6VlNNMmxDVWpaRWNtbHlLM3BFVjNnek1rRllDako0YlZoT05IRmtSMEZEV25wekswTm9lbWM0YzFCTFdEazViblE1WmxkMGNtOTJVVEozVFdWdFkxRldOMlZrYldjd1RqVnhhak5ZTlU1VVUyZHBOMDBLVFZoTlFrY3ZSVU5uV1VWQmVuQjZWVk5OWmtad1lrUXZZVVV3TDFCM1lVZ3ZTVFYyWWxGdWRWaHNkbFZXYWtGcVJuRlFiMlV4V1hZMmNtRm1NazFqTUFvMVV6QlZXR3h0YnpWYVJ6ZFhXbGx2TVcxbGEwZFZkVzkxVTNOc1UzSjRaUzlvWldsUGNEaEVVRTl0UlZaU05IUXdSR1ZxUjA5MlNHRmhkRXBXTUM5ckNuaDVTVU5STXpBdlJ5OHpXWEJ1VUVFMlNUY3lhR2hPYW5WUlNVVlNSbkk0Y3k5b1NqSXlLMVExUXpkblVGcEhUU3MyVDBsRUt6aERaMWxGUVN0TVl6QUtXbGhDV21Oa1UxbGlZWGRUZVd0eFYyUnFSMXBCYUdjclIyUkJaaTgyYWtOTlRtRjRkVGszZFc1bU4ya3dXRWhQVEhCcVMzVm5Wa3N5ZG5jd2FHc3dSd3AyT1RrME1HSjJWalp1Y0RkUlFqTk9jVmh1WmpNMk4waExNblpHZFRONmNDOUdlRGRoZVRKNFptUXhNMVJKWWxwWVNGVlpWVEVyVlRKdFpqZHROMnRUQ20xNWFFVk9PV3BsWlhCdU1qSkZSbkpLU0V0RFpEYzBZamM0VUd3M2VYRnJkMkY0T0hZeGMwTm5XVVZCZW1kb1ZVcE1UMkZKT0RGeFJrVXJZblI2VkVRS1NFcFlTa0phYmpKeGRpc3hjMkpFVlM5TWJUaHNiV3gxTlZGaWVWSmFSRFEzVjFKVWQwaGFNbFl4T1VsNlYwSlNTSFZXUWtoaWVERTFlR3BuVjJwUFdRcEpjR1pqZG1Od1pIaDZjM2xNUmsxdk5tczNhRUpJVUhsaGFYaFdkVmw2UWtoa1lVeElWbEJxVUM4eVYwMTJObEpMZUdWT1VFVjRVR3RIYTNwaGFIRXhDbXB3TkZWM1NUY3lhMjlCZDA5NFZrOHliM3BNYms0NFEyZFpSVUZ4U0VwalIwUXJjRTVKUlVvME1qRm9Ta2xUZW5SelZVMXVaa05TVkhGWk5IQmplRVVLUTFKUEwwOUZRbUZXT0U1cVJuWnlLell5ZDNORlUxTTBaQ3QyVFVoNFJsZ3JkV1E1VTI0M2RTdEhiVkIzTDB4eVkxWmlURzE0UldsaU0xRkZZbGRFUXdwclJuRkxaRU5LTUZSWmVVc3laR1ZUY1hnellrcGplR05aYW1RcmJuYzRVRmhQYnl0dFduaFdkMkU0TlVWWGJuUkRUR2hPVTBwQlNFWTNTVlJ5Y0VkNENrZEZTMk5GYmxWRFoxbEJORzVVYjJoemJFcEtUU3RrVFVONlRGWllSSEZFWW10cGVWRk5XVWhWTjJoaFExaDFabTlQV0hSMk5HMTBSSE5NWTJWRFVsZ0tSRXN5Y2xCUU1tcE1UMmxYT0djeWRWTTJNM2xRTWtSclZGTnFRVWhxVTIxemVWSnJPSHBxVmxsWWFGRkNjWE5VV1RKVFMxbzViMVp2Ym1kMGNtRklUUXBFY1VKUlpsWjJLMHRTWW5oMlJEZEtSWE16Vm5OelRGbGlWa3BRZFV3MFEwSlRNbkl4TVhsSE5tRjBLMjV3Y3l0VlpFUjZiV2M5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/auth/kubeconfig-kubelet",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMXFTVFJOVkdzd1RsUlJNRmRvWTA1TmFtZDRUV3BKTVFwTlZHc3dUbFJSTUZkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGVGbHFVRFZTV2pCQmFXcHhMM3BaZG5OcWVGWUtOR0p1YUVaM1pXWkZibFpVT0c1SWJXaFVXV2hyUVUxVE5WVTVOaXM0WlVGMFYyY3dZbTFUYVU4ME9WcG1aV3hWTVhKamR6YzFkWFkzUkZrdk5pc3pjQW92U2pGb1JWWlplWFl5ZDBwTllVUjJUamRQVUhWUWVqTnpTbEFyUTJZd1NtOVpOak56UVhZMU5sQjZTWFJHVDNSaWVtdE9OMVJxVHpVMWNrWkdOR2xZQ205a1NYVXhVRTAyZERKbVpFMXFPR1ZXVEhSM1Z6aEZUMXAwWkVNMVdtNXpOV1ZGVTFaeWQyNU1aVW9yV2tselUyVk9XRGRKUkhKMFlXZFViVTQxUnk4S1dXcDJkV3Q0Tm1aWk5tSmhRWGhEUzNCdWRqUktiVkY0UkRCSVpuaGtjbVUwZFdzMk1YbzBkMXBOV2tjMFRIVmpkREpNTm1sMVdHUldWRFpCUm01MFVBcHZVVnBpWkdoU09VVTRRbkJEUkdGeGRIbDFaR2hvZGpoYWQyTkpWVWhGZVhneFkweERNaTloTkVFck5sSkJiUzlNY1M5eWNrSmpNRU5qYmpCRk0wMW9Da0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTDFCbFZsSm9SRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJVM3BCYndwNlJIbDFhV2RIVERaNFNDdEdiaTlaUzFGVGMzcEpkMXBhUkVKNmFqWmtiWGx5VGxKUFUxZzVVamw2YkRSWVRtRlNiM1pQZGpOa0wyOTFhVkJVTDFkU0NuZzBjV0ZTYzFKUFdEWllXbFpvVmxaUFVqWlVWSFZ0VTNWallVNVZSelpvTURkblJFdG9UazE2YXpBMmRrdEZOR3hsWldneWNqUnVjVk4zTWtKa05EY0taVEZNYkZrM1kxUkpRWG8xWVZFdldHTTBka3RHYkdwVk0waEpWbVl3VkZBeU9FODVNbGhtVm1SbGVGSTJjMjE0ZDJsT1lWZDFSbEU1TUVOVFQwOUhWZ3BPU1hWcFptRlFVSEZwYVhseU9GZHFhRXhvTlRsWFpuazBXRVozUjJKNVkzbHhPVmN3WmpSeVJVSlNkRlFyTVRkc1RFRTJibmxwVmsxalVVdFphR0l4Q2s1RFZFdG1NakZXU2psTFptd3ZkVzB5VlcxQmNXZ3dOVXhLTmtwd2JXeHlUMHMxZGpKVlRtRmlaVFo0Y25SMk9GQnhkamhpWVM5bVFVVnhVRVJ1VkU0S1ptSkdOREZPV2xsUVZreHBWRnBqZFZoM1BUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9lbnYxLWFwaS5yYWZmYS54eXo6NjQ0MwogIG5hbWU6IGVudjEKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGVudjEKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0CmN1cnJlbnQtY29udGV4dDoga3ViZWxldApwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZWxldAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUjBSRU5EUVhCNVowRjNTVUpCWjBsSlJtdFJaREJMVVZWUU9FRjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLVkVWU1RVRTRSMEV4VlVVS1EzaE5TVmx0T1haa1IzUXhXVzFWZUVWRVFVOUNaMDVXUWtGTlZFSXlkREZaYlZWMFdUSkZkMGhvWTA1TlZHZDRUV3BKTkUxVWF6Qk9WRkV3VjJoalRncE5WR2Q0VFdwSk5FMXFRWGhPVkZFeVYycERRbXg2UmtKTlJEaEhRVEZWUlVOb1RUUmpNMng2WkVkV2RFOXVUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdDbU42Y0haalIxWjFZekpvY0ZwdVVYUmlWMFpxWVVkc2RWcFRNV3BpTWpWdFlWZGpkR0l6UW14amJVWXdZak5KZUZWcVFsRkNaMDVXUWtGTlZGTllUalVLWXpOU2JHSlVjSHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRVJ3ZG1OSFZuVmpNbWh3V201UmRHSlhSbXBoUjJ4MVdsTXhhbUl5TlcxaFYyTjBZak5DYkFwamJVWXdZak5KTm1KdE9XdGFVekZwWWpJNU1HTXpVbmxaV0VKM1dsaEpkMmRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM0NtZG5SVXRCYjBsQ1FWRkRNMHhKTWxoWWVHWktXSHBYUmpsT1dYZzFOMWhMZFRGR1NVTk5SWEZ3WjJoSGJXVk9PRFZKY1VkSmNUVlRjWEoxUmpGaFl6VUtaVnAyVUdKaE5HWldkVEZwTVhONFQxZENPWEJPTkZCUmRuWlVRa0pvZVd0V1MyODJjbFZSWVRodk5VdFdTV1ZIVTFKdFZsSTJOREY0VWpGNVdWZENUd3BNYzBONlRFaHplak5NVlVsaU5EQmFNMHBxVW1zNFZqZzVWV2x2YmxveGVISlNNMEpaUVdsV04xcDJTbGt5UW1VMGJTOWtVbkJEY0RKS2Eyb3lNa3d4Q210NFdVMHZUVWgzVVdWMVpuRlpOMmxzWVZoaFRtSlFlblptUjJac2NqaG9jblZEY1c5RE9UWlVLMFJwY1dSRldrTmpZak5CYmt0amRGWnZjbVZqZEZjS2JFSlhTWGM1YVVoTmREVTFOR0Y0T1ZveE9XOVpkM0J6VTNkUGIwSlBZakZQVTBkTlMxcDNVM0ZNTkZsdWExRXdPRnBvZDNwT09WRkRkMjVvVm0xWWFncHBUSEJxY2xOSFJIRnVOakIwY2pneWFUazRNVXN6U1ZsblVTOVdLMG9yYWtGblRVSkJRVWRxWkZSQ2VrMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbEdDbTlFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFJCYWtGTlFtZE9Wa2hTVFVKQlpqaEZRV3BCUVUxQ01FZEJNVlZrUkdkUlYwSkNVME1LVG5GU1JIWTVWVkprYjA1MWVHMUNaVnAzWWs5d01HTnJMMnBCWmtKblRsWklVMDFGUjBSQlYyZENVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTHdwUVpWWlNhRVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUVU5RFFWRkZRVnBUUVdNclp6Wk9UV0ZEV1Zkd1lsbHRkMUpyWld0NmVWazRlbVJFV0hKbkNrUkVWR3hDY0VacGJtVlVPSGd4THpkd2RVMXlhVXBoT0RReVEyTkhlaTl2ZGtoMWNFTjRhSEI2Y25kc1MyVlRORFo2YXpGc00zb3pRWEJwVERsQ1QxWUtiRmxVU1hwU1VsZDJPV1pSWm5aMU9UZG1jemR1Y1ZKbE4yOU1XVXhpTHpoMGNtTjFXRWRyUkU5bloxWm9UeTlPVlVGNWJtSm9MMUl5ZVVOR1NHdzNZZ3BtTVc1blkxQjJTM0p6YWpSbGJIZENjbEpuVVVaUU5ubHRNV04yUjBSbmQzazJhMWxPVXpWWk1uQTFNMEUxU0dGQlJYQkRkVlZYZWpob1JGRk1WWE5LQ2pCcVR6bDNlVTB6T0c1VFZqaG1lVXB5YzB4NFFtcDNkR1pwUVZOME0ydFlkVk5FUlVsWVdXbGxjV1JyY1c1UWFGTkJhWEowU0hCcUwzVjRaMEZoTTBRS1pXaFVhMFl4Y0RSVkswZFVkMWxGUjJsSWQzQmxla0V2U0VOYWJVYzNSR1Z4ZFhaMlNtZEpOSGxNVjNReVNtcG5lRVpXVDJ4UlBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjJkSlFrRkJTME5CVVVWQmRIbDVUbXd4T0ZoNVZqZ3hhR1pVVjAxbFpURjVjblJTVTBGcVFrdHhXVWxTY0c1cVprOVRTMmhwUzNWVmNYRTNDbWhrVjI1UFdHMWllakl5ZFVneFluUlpkR0pOVkd4blptRlVaVVF3VERjd2QxRlpZM0JHVTNGUGNURkZSM1pMVDFOc1UwaG9hMnRhYkZWbGRVNWpWV1FLWTIxR1oxUnBOMEZ6ZVhnM1RUbDVNVU5ISzA1SFpIbFpNRnBRUm1aUVZrbHhTakprWTJFd1pIZFhRVWxzWlRKaWVWZE9aMWgxU25ZelZXRlJjV1JwV2dwSk9YUnBPVnBOVjBSUWVrSTRSVWh5YmpadFR6UndWMnd5YWxkNk9EY3plRzQxWVM5SllUZG5jWEZCZG1WckwyYzBjVzVTUjFGdVJ6bDNTbmx1VEZaaENrc3pia3hXY0ZGV2FVMVFXV2g2VEdWbFpVZHpabGRrWm1GSFRVdGlSWE5FY1VGVWJUbFVhMmhxUTIxalJYRnBLMGRLTlVWT1VFZFpZMDE2WmxWQmMwb0tORlphYkRRMGFUWlpOakJvWnpad0szUk1ZUzlPYjNabVRsTjBlVWRKUlZBeFptbG1iM2RKUkVGUlFVSkJiMGxDUVVoWVJ5OVBaVEp4YUcwNU1GUkdiZ3AzZHpOc2JXUjBXRFZEVWpSR1NsRjViVFpIYUhNd1kweDNRa2xPV0VvNGEzcHNlRFJwZDFOSGNpdDFTVGN5ZFZKUWFWQlBWSGxIVlhkbFYzRllNbEZ4Q2xaRUswVnBXV2RWVGtSNE1GTm9WVEZ1Y3pSdFYyUnROMU5QY2xkWmVYRktjWEY0ZGpscVpIWkZiRXBwY1VocmNGVllSM2xKUkhwbWRscGpURGt2UTI0S01tMWpiM0ZUU2psdFIwNU9UakZuU0hCeFMzWTVhbWR6VTNCamQyZEtTVUl5Vm1kT2RsVTNkRGhVYjI5TGRIUllTa1YyUm5aa2NHdFZNa3RsUm1OR2J3cE5TazFVWlVaVFFYZG5XV05IT0dsc1ZXYzRXVzgxU1dGV09YTkhhVzQ1VW1Fdk9XZFpZa2xJUWtFdk9EWllSMWxaYVhkSFRIcEZTamxsTUc1dFowdE9DalJOVjNOSE1TOWxSV2wwUlN0NVVWZHBhMjl5YW01eFRtVXZZMGhCUVU1cEx5OWtjREp5ZFZKYVEycFphalZ2V1VOb2QyRlVXRzAyYVhoS2FFcENkbU1LTVUwMGFscElhME5uV1VWQk1GUmtRWFUzU0VSdU1uVnBPWGxSV0VoQmNqQTVjamMzUW1KcFpFSXZOV1l3THpCd1IwWjViVGhLVjNZcldsbFZPVVUwUkFwaU1VdDJlVkJ3YWl0UE1qWkhNV1Z2ZGk5VGNFZENlV1F6YVRSclZtVk1aWE4zVERKa1QzbDBZVWxNUWxaVEx5OTVUazkxUWpVMlFtdzBNWFJIUzBkYUNsVkZNRTV4ZEZCeVUxSkJPRTVaYldWNFFsRndRWEUwZHpoak1ISjNRVVpNVjJSc1ZWQldRbTF1VFRJM1dUQlhiVWR3U1RreGF6aERaMWxGUVRSRFMwUUtjazUwTnpGTmJrUkNTbmRwY0RSb2MybDRjV3BoU1RkVGVIRmtVbk0zWTAxVVJYaDFhMWQ2VldGdlMzUXpRM1oxT1RaT1dFTkRhR2hpUjA1MldsRTBXUXBHVWpKRGFqZEtVbG93V2s1VGRqSmFRelJPVUZaM2IweDJORXBwYkdoc05sYzVUMFJxU0ZONlpYZHlSM2RQTVRWcWVWTjRja28xU0hsdVFXdFdiRms1Q2xSaU1EVnVlbXBZV2pnNVEzb3pWMGczS3l0R1pERTNaMXBLVms1MmFIQXhRMW81Wkc5SE1FTm5XVUZRVFhReFowSlZlalV3ZERjeU5UQmtTMmRVTVVVS1p6WkdSM3BDSzFWVGFGWTJSMEZWV2xGUWJtSjBibEZtVWtwcWJrZHdaa1JUV2xZNWJYcHpVMEpYYzJ0MU1YbEdMMWRqWmxkcmVscHlRelV4YTNSTGN3b3pTVlU0THpCcGJIUkJTVXBvTUVGcmRtTlJRbmczUlZGaGJsUklaV3N6YUN0SlkwdHdkbE5NZWxWTmFXWkpiblJKY1ROTlFsRXlTRTB5YkM5UVJtcFhDa0ZUVkU5bk16TkJNMGN4Um1rdlZFTk1NbVZSYm5kTFFtZEVURVZJYjJJNFpqWlFSM1l3UmtGRVEyeGxTVkpsZDNoUGNHUjZlV1p1Y0dZelMzSkRTbklLTDFjNE5qaDZTR04yTTNoeVFuZHNXVWRrU21wTmR6TldlRGxzWm5jNWVXdG1ibTlHY21GS2VYSm1ZMkZWV25ac09XZGhSVFF2ZUZGcUwzWnVZMWQwZWdwRlVYbDZUV2xRWjFsUWR6VjZXbkUyWlZCUVkwNWxOa2xVTDB0MVVHUjRjSGsyT1dkMFNXeDVla2hOYnpjNE1VMTBla2tyWW5oNldrcEhOakpzTWxCRENtdFFXbEpCYjBkQlJXeDNVa2RMVVZaNlZqRnFkRUo1WnpKVVZFUnBRblJwWlN0SVN5c3JZMlU1TVVFeFVXMHdLM2wwT0d0YU0zUXdVMk4yY2xKbFIxZ0tPSGhXZEdkMVRub3JOamREUWtKd1VWSmphV2cyWWpWblVrRmFObTFNZWtKTWVEWXJaVXhaVlVacmEydFFVa1E1VlZkQ2FWWXZXR1pqTW5wVEwwTllXQXBVWkZOQkwwWnJjV2xYU2tNM2MyaGtjMmxSYWtKTU9HazRVakJuWWpVdmVEYzBSbXgwVkVaa00zbERTek1yWkhGYVZGRTlDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/root-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcHNXSXorVVdkQUlvNnY4Mkw3SThWZUc1NFJjSG54SjFVL0p4NW9VMklaQURFdVZQCmV2dkhnTFZvTkc1a29qdVBXWDNwVk5hM01PK2JyK3cyUCt2dDZmeWRZUkZXTXI5c0NUR2c3emV6ajdqODk3Q1QKL2duOUNhR090N0FMK2VqOHlMUlRyVzg1RGUwNHp1ZWF4UmVJbDZIU0x0VHpPcmRuM1RJL0hsUzdjRnZCRG1iWApRdVdaN09YaEVsYThKeTNpZm1TTEVualYreUE2N1dvRTVqZVJ2Mkk3N3BNZW4yT20yZ01RaXFaNytDWmtNUTlCCjM4WGEzdUxwT3RjK01HVEdSdUM3bkxkaStvcmwzVlUrZ0JaN1Q2RUdXM1lVZlJQQWFRZzJxcmNybllZYi9HY0gKQ0ZCeE1zZFhDd3R2MnVBUHVrUUp2eTZ2NjZ3WE5Bbko5Qk56SVFJREFRQUJBb0lCQUhCT3VsRjJidVoweGVWcgpOS3h1RlIrb3dTcUovY0hzQmtNZ0ZBQXZXVUxFM3EwTTY3ZGdjdnVFTHNhUVNRalBuenVmQlZEeXY2OGV6UE50CjJTSzIyU01uMFR3YkZyZGFIWUViZ010WDhYNHFENEVsMHFQVFNpb0FPRUlQTmlGMyt6T1Y3SHZ4V0xTK09mRnMKR3RmN2Z5ck4rT004MlFlRGwxaG9qQVQ2L3Jjc25EUHRHN0pvRVZXR2FWR0NKamhOT3RkZGhDVVlrSjU3U2traApwdnl4eUYvS05CRTBPaStTemNQNTZBV2RxWi9SSHJ6ZEh0TFN5dGh6ZER3QTNTRVB2NVZRK1lFVUdWVkRYMTBNCkM5Sm9scnlrcHlsNHNoOXhUOUw2K1BaTVdVczlFenVhQVdERzNJb0U5Z2IxZnNmK1NjTlNHaE1xREg0Qy80Y0IKUUFxMHR5RUNnWUVBd1lnRDJFNnRESXBzUUtBLzZwbFpHNnNPcGxRTzZ3MlU5WmtzQzZtUFQwNnNCOXdRMmxNaAo5LzB2cVp5T3htck5RVnptREVwZlA4OGhuRFkzQWZ4Y1pneFBLUGlRekd0cWNqS2RNem9DTE90SnMwSkl5dE4zCk4vS3JWblIrZU1QQ1BkRmwyTHJsN1VsTWkzWGUva294OVpBYVhHelN4VDE1MzVkNHRxdnFMalVDZ1lFQTNKcE0KVG5Wc1NHVkxyb2VmclhMeGNxSWxJeUZ2b0lZL3UyYmxtNXBkcnBCN3pmeVV5UnVQc1RhTTBrYjFWdmpRMndIQQovTWtIRXJnUHBuY1dRZXhKYmtWK1cxUENCREZMSTlaMVQxS2hGdmQ0RFdBYlFDQXRZMGVEWVVjTUJvSVNIVFErClV3RG41emt1Z2E5QmFIOEJhUitrTmUyYWRicm0rY0Urb2Q3VXZyMENnWUJVejNaZjVKcVJWRmY4T2ozSVlVdGIKaEtyMjJQOXdvcE1VemZzdllTOGNZaTJoaEI4ZWppL2tyVitseEtZTTdlRGxOQURjZ2ZzYnkzbS9LME1QNjdmUwpRTEt3RWIzaTEyL2VlNi9JTXpPZzI3dUFneHZEUnNpSURDQnAwc05aeU8vbWgwMUtuUjBGejRscjFFdlV4RThBCmZoWVBTdUZTN28zcUhrY1lSbDVwd1FLQmdEYmFoeTdiTTltc2xtMEhmRVQ4MTl6UlJMcS9qYW8wdDVRNXVjNC8KVEJ3a0FTVHZNVy93VW9LV05kM3psdjNSVU4ya1NnQ1JYQmpqZThEQXkrQUlpUm5LWGVrSG9xNjRNeDd1TEsxVQp0b21uYjBxa0l5S0czY0paL2VrcWFXc1UzTHcyU1drS1NKL09NQ28vRWR5UitCL1RwbGxpZzQzU3M2eFd5T1FuCkxHOWhBb0dBZlp2UUJIQnd2QlVnTHdidkpqQnpST1MwYlBjMzF2c0dkMkNvbGZ3Nml5bjE4NmY5VGdmUmNCN1QKY2dtdEJwRHplYmlmNEhuekc5dTNqZXNVNzZTOXJUbmtmV0pzbW02ME1xUG11bHNxY1grMlJXbWoybktSYW0rZwpDSlY3Vm5PZ1VFMmlLTHh1SDFqOGJibDhFOTVHNDVWSzkxdnZ1a29wVTY0ZWl5Q20xQ0k9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/root-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1qSTRNVGswTlRRMFdoY05Namd4TWpJMQpNVGswTlRRMFdqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKNGJuaEZ3ZWZFblZUOG5IbWhUWWhrQU1TNVU5Nis4ZUF0V2cwYm1TaU80OVpmZWxVMXJjdzc1dXY3RFkvNiszcAovSjFoRVZZeXYyd0pNYUR2TjdPUHVQejNzSlArQ2YwSm9ZNjNzQXY1NlB6SXRGT3RiemtON1RqTzU1ckZGNGlYCm9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KWWp2dWt4NmZZNmJhQXhDS3BudjRKbVF4RDBIZnhkcmU0dWs2MXo0d1pNWkc0THVjdDJMNml1WGRWVDZBRm50UApvUVpiZGhSOUU4QnBDRGFxdHl1ZGhodjhad2NJVUhFeXgxY0xDMi9hNEErNlJBbS9McS9yckJjMENjbjBFM01oCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3pBbwp6RHl1aWdHTDZ4SCtGbi9ZS1FTc3pJd1paREJ6ajZkbXlyTlJPU1g5Ujl6bDRYTmFSb3ZPdjNkL291aVBUL1dSCng0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKZTFMbFk3Y1RJQXo1YVEvWGM0dktGbGpVM0hJVmYwVFAyOE85MlhmVmRleFI2c214d2lOYVd1RlE5MENTT09HVgpOSXVpZmFQUHFpaXlyOFdqaExoNTlXZnk0WEZ3R2J5Y3lxOVcwZjRyRUJSdFQrMTdsTEE2bnlpVk1jUUtZaGIxCk5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KZmJGNDFOWllQVkxpVFpjdVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcEVQckVYeFVqRXl6WjBGVGY5L0VYRjdMaUozZkdUN29STjVCNlE0SXBxeGJpdHJDCkFpcWFQMitPbGpJOHdob3JIVWJVZ1NuamNxUlpWWnVVcDFybkxyTTd3N1JrTlUzODdTaURaVnMxS3BOczVHbkoKaEcrSFhZK2kvc1l2VWRkb3lDQ2NQaEtQZ3lCNFc4dURsdStZU3RRZGZjRC9JZzFXN0kvTUFURy8vNCszTXZBaAp6enFtRHJDMTB4UytOQ3R4eWQ5N1EwczV2cW0zOCt0dlJXSC82ekxJMVB1Y3RmeGJnWk5KS0JkY0xaRFZ2eldoCm9YRGJHOUNsbDFPQklPOHBQYXp4TGovRTVpUDlhUjh2SmFWQTB6Y1R0MlZzc2lNWDd5K3BPWXdHRUZ1bVU3YVIKaDIrbmF4cVFIK3pvYit2czVrNGVuTDhNOGZ3RU40L2EvYnZyUVFJREFRQUJBb0lCQVFDUHVaVnQ0VGtnNE9PQQpEdHArWWsydS9JcGRhTFNScEVjYUt0WEVrckRqRkorc0tLZmp1VjdvN2pUMkdkS3Jpclg2a2NUUmx0TVp0YzhzClprcDArOGFYUjkrYzVyTmZLSE9MRmcyUm0zSXpaSGE4akFyMFE1bFBOYVJLQXlIWUcvL2tTeFFxQTVkcUJma0oKYUZJa3VGS3A5bG92YzdSSUdSL2JNQjR4VlZSR3lCTVJhbHhmNk1pMHZkQWwzcGM3Yit4UnM3U2JFemlJdmpzOQptclBtbHdxNTdaeEtWc085WHNJNVNtRDFmTEcvSy9qaWRVRFFGSUUyWnRONDRmMy9scHRDTjltSnd2dFhrRzBUCnlIUFpxZHZXR0NBQ2VKdSt2WEEwTm5qYkNsM29rcGhCV2FGb1RXRGdVeDVXMEt6RzhPZmsvS3dES3UrQ2xYNloKMVRJazVONVpBb0dCQU1MSjlJWXFNNUZ4ekVDM2ZzZlI0YUx6b0R2QlZhR2lpTGI2Nnhjcno3K2hoSmc0bkY0SQpNL3FPd0lJRFVMRWVWbXIyMWlCYnpHOTQ3MjN2VmlKOG40by9zR0J1eDBuUzJ2dVdvdDNPcVAzL00yT1NKR3VGCjNDalhtZ0dNcnRxSERjQkhVc0hBZnB0aFgzWWIzdXQ4RmZNMEY1b21rY1FvZElGb1pHSGR6WERyQW9HQkFOZmkKZERQUmdaVUEzZVpSaCtLMnB2U0V1ZXV1Q0hpNW1xMkJsak1sZW14STl2RUN1QmlHYmxDYnc1a0NPMVBWZGFhcwovTkU1WjJCNG1mQk9pdVhCYk9kdHNONFFtdVdNd1RhNzNLY3d3eHdJU3c1ZzE2LzhUQUtoVFBnWFNDYlY1eVo0CmRPZzA4MnEyV0JQTk44U21Ec2svbmYxaTNsQnpTaW9NM0VHV01LbURBb0dBSUlRTjZZZUo3REdPNHc2K2Z5U3UKQWNHaGNkZ29Mejh1aXp6L21YS2F6MlpxOSs0YlRDY2FaaTBHUGEzSC9va042L1VnY1c1aGhnb3VEYS95TlBlUQp1a2MvYmhtUDh1YmIzenVhSEdTdkdSZE13TVpZaGdwbVlmcjdubDZab2FrQnhxTWhVVzZNcyt0aFFCb084RWhhCmNhcTBkZXNTVWloZXFtdCt0a2VNVDlrQ2dZRUF3RTQxNnU3bWVsK3lTdmMzajRuYkFSZTJNaTN0MS9TbHg0Y1cKeityRHVlL3BJVm1sdWhzTjYzcEZhMmdraHhJdjRsQllTTnZVcllmZ3dNS0dVaEhTTy9sblF2a1JzZ2VIR1lXUgpFZEdMQzg2TFpYeDR4WWgrQVIzRVhYOEh3NmhwWnNpSWcweWZ4T0EzWnpRNFNGRVAvTTlSb2lSUEd1VUlISnNtCkhMcDRFSmNDZ1lCMTYxbnpuQzRGd0J1NmMxMklyYjRVK0x5aEdvelM2dTdHRGo0UWhRbS9qdXpOM2VnR1hOMU4Kb3BHWG9WUnZaY25Vam9tb0JHSGZSZkhoUm15NFdXbjFmWDZuZUJjSEN0ZzZzaWJIaWd3SDZsQ01lUDBKQUVINAoxaDUydEs0R0ttS0ovUGkrZnd1YXFSRnpPaG1QUy9vL0ZBK3BDRjk5T1RBSEYxVkNsTXl4R3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJSDVHM1g2SVJ4cm93RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2tRK3NSZkZTTVRMTm4KUVZOLzM4UmNYc3VJbmQ4WlB1aEUza0hwRGdpbXJGdUsyc0lDS3BvL2I0NldNanpDR2lzZFJ0U0JLZU55cEZsVgptNVNuV3VjdXN6dkR0R1ExVGZ6dEtJTmxXelVxazJ6a2FjbUViNGRkajZMK3hpOVIxMmpJSUp3K0VvK0RJSGhiCnk0T1c3NWhLMUIxOXdQOGlEVmJzajh3Qk1iLy9qN2N5OENIUE9xWU9zTFhURkw0MEszSEozM3REU3ptK3FiZnoKNjI5RllmL3JNc2pVKzV5MS9GdUJrMGtvRjF3dGtOVy9OYUdoY05zYjBLV1hVNEVnN3lrOXJQRXVQOFRtSS8xcApIeThscFVEVE54TzNaV3l5SXhmdkw2azVqQVlRVzZaVHRwR0hiNmRyR3BBZjdPaHY2K3ptVGg2Y3Z3engvQVEzCmo5cjl1K3RCQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSelUzajFBcndncTdTU295Zm1BOXQvUGVWUmhEQWZCZ05WSFNNRUdEQVdnQlJ6VTNqMQpBcndncTdTU295Zm1BOXQvUGVWUmhEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDWWdkWExST2k2MnVsL0VaClNTU1RnOG5KRlpraWlwV1o5QXp6NjRtQkRMeVNjVk80OG1JUGthbzZSbmY2Tk00alBUMVkvY1lSNGJJRUczSkoKaGR1NXpoSWNBWjJVRHh6ZTFwTVRiOE01WVkyNEhhSS9UWHgwbkxtQVN0WUtzUW5GeDdRR2s2ZWJRaGlOQVo5TgpWc3c1U1ZmM3F2aHhWSWFRVGNDdXRpQUxzblpnNnl3OVgzOHV5YnhCN2JpbUZyRjBwd0Q1ak9HVEs0bHBnMHRsCmppOXFvcnk0Wk9FZ1dJQ0VacVB3enJsN1FiODEwTTdMcWZ6TzVUTWxQZnVNTHBseEtzN3B6U2lZUlZlL09paTMKZndpQVdVSThjSmM3cWNjSmcvZTdoVTFzdFRKaUpmdWo3Zk0xRC90Sm1FakRLazdnd1hNMi9OU1p2K0d1ancxagorUHV2cHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcXVERXpzd3JqQ29IOGUrTW9mMHAxbis4QWRWQ0syaU5LUEdETTV4V3J4WEtKLzdWCmt3UVRyM2Izd3J2aUxhb3JkOGdSanY1T05NUEFXMzh5RFFxNVVPNE9Ocm8yelVMRS9KcDRNRHZPVENhUGh3RkQKYTYrR0dCQWcxY2tSR1VLTFpGMkxGS2U4Rnl6aTBpdFBWVW5OQ2Z0RER4T2NXSHM4TFU1MmhpU2hKQ0VjUm51ZwpubVFXdFUrNjVidUI1eTdMSEk3M0kzdm1HK3dSeUJhTFYwN3N6RXpudVVrNk9vcFc5dkppek42cEhJOTdOTVJGCm5hc3NYdUZ4cGtuaFdWbGhZUE1yTFRqb2NqN0puVlNHanR5Z0NOQ1RkR2xPMDZLSVBrU1FEdjNwVUh1RXljQnYKamNHT0duQjJPNXdiRXNNd1Y3MDVHWXhzTVV6ZHVDTTZzNUxZQlFJREFRQUJBb0lCQUNydGJJUEhKdWwvWlorUgozbktUZHY4Nzk2OCtNL0ZUd3FLV2lhOWRoeWxWQUFRc01OdE9HdVBwcnpSc250VjUrcEdNNFZ4YTVxcTZ3b2c1CjNBa0t1S05zS29YMUllOU81czNPd0lMZGcyWCtDZkNRa0s5czJQTVNtaTBhNWdEQ2h1SWYzZURDZ3E0UHlLdWoKMWJwSFlBc3g1QmJWaG1GMEZCb05yQmptK3RSb1U5clZVaXA1cVlyT3JKUUVsQi9Fa1FwZXhwNzhZcjRzRC9kMQpPaXA2a2s2VWpKZ3VuZEkybnYrSzN2UmtYcjkyS3JCN0FINmIzc3dIVEJBM2xrZUY4TWg5V1Y4QkZaT2duczhRCjU0MnF3YWs2Z0U0eEdFdEw4MDZ2clVTUHJHOW5iVkE2YVZhQUgxQTd6ajA2Q21vcXgwQWpVS3RKMGM5Y0w3S3EKQjZwN2FjRUNnWUVBeWRZYUJFOGZCYUlSU1R6ZEw5dUlKeUZaSWtTZ0VvTzhPRjI2aWRCSUJKRW9mNmtaaDZ0NgpPcGJ3NSs3VUk0SU9zaHArRUFOSDEzclBQTUNTTDMrYkthQ3MzME92SVpVelJnRm10T2RUNXJVNkxROXA3cjFqCmtiNE9yM29naFlxUXFRUnpqQXh4WHh0QVJSRks4dS9nNkxudlgzZkt0WUJadUxXTmVEc2N2V2NDZ1lFQTJMdmUKakNSTGVQOTJUa3BQNDRSczZPbE05QURsUU9WVU0ydkZkelVhWE1UYzFOVk1kcGEweWE2M25UWVBNekl2aGhOMwo4NGFLcmhUOHIyNStIOVBVdW1OQ0NjckdhTC9YT3plc1NSZnk5elpLWDBzYUpLN3ZIK0h2eUdJcEFVUzg0bDV1Cmt5SWhVbEdjcjZnUzEzYmtmeXl3K241RUgwbDhmUmtTdk8xWHI3TUNnWUVBblJnUWZlUWJVQ1laY0RoNEsrU2gKcjFzc1poaWx3bU5ZWDBMTWlyRmJMSHJTMjdJQkZmQ29uT3VZcTl6ZXJwaHUyYjcyK1gya01CbjlMTnJ4clJpVAo2eTJNLytWTmJVVVVlRnRrMWs3cXBibk9ndjNwUkpHUjZ3RFRxMDdSK3o2alkzbjhlVGZDRWZWQzY3OE81OUUrCjY4UzBoRWpYdExjbW5qWm8ydmlmWU9jQ2dZQXRtQ0F5UlRSbmFQNmZhN3l3dFZ3Z0IyeDc3SEJPSGJCLy9NMFcKemVJVTRBbEE4UHBiL0VwZUgxWmJTVk1iUnhSK1ZUd256QWNDcGtHZU9sVm9KcTBhNU9Td29LcnF3R2pyK1VOUwpRU3FJM1MvNktoZCszaHBLRDhMYzJlR2NkYlJ5dnNEdVRRRExpNFcxNGxyTVh5T2txV2MxMnpoRGlMY2FyaHFtCkNod25Sd0tCZ1FDRU0xYU15Q2g5UFlFbU1lYUlnZi8wSTFvWEpJQXhQSUNvdmV2ZnIwQStsSEFkb2lmTmdpc3QKS2d0OXh3UDJXMXIxZ1NpNlF6NDRBYXFqa2czMC9PZXRsb0k5bHVVV09QeGRjNllMY0pUQ2hZZHJnQksyeEVCTApoQUlIVzF0U3J0enNPc0prUFFYdjBTMGtvdmRzQkZiRHJ3MWM3a3dwTW9TaHB1UG1VMTNkYVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJSTF6UXpCYzJwQjh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNxNE1UT3pDdU0KS2dmeDc0eWgvU25XZjd3QjFVSXJhSTBvOFlNem5GYXZGY29uL3RXVEJCT3ZkdmZDdStJdHFpdDN5QkdPL2s0MAp3OEJiZnpJTkNybFE3ZzQydWpiTlFzVDhtbmd3Tzg1TUpvK0hBVU5ycjRZWUVDRFZ5UkVaUW90a1hZc1VwN3dYCkxPTFNLMDlWU2MwSiswTVBFNXhZZXp3dFRuYUdKS0VrSVJ4R2U2Q2VaQmExVDdybHU0SG5Mc3NjanZjamUrWWIKN0JISUZvdFhUdXpNVE9lNVNUbzZpbGIyOG1MTTNxa2NqM3MweEVXZHF5eGU0WEdtU2VGWldXRmc4eXN0T09oeQpQc21kVklhTzNLQUkwSk4wYVU3VG9vZytSSkFPL2VsUWU0VEp3RytOd1k0YWNIWTduQnNTd3pCWHZUa1pqR3d4ClROMjRJenF6a3RnRkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFmQmdOVkhTTUVHREFXZ0JSegpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZ0gvZzRSdko2WWJJCjlSUlpKR0d0Qk1qakJFRzRwNHhDeGt2MFFlNlUyNmR4QjBrczRqL2NWMkNNSGhLM0VNRUQ1Y0RVdyt1RTJwUFkKbUswV0Jyb1dGT0JsYlhDbGtOTHE2TEVlNEdyUVBTRGJTZFFJWXhTT0M4TUljd0NvZSsrenBGYTNHd21OK0huKwpRMzZjK1BCMnhnNnpHdzhXampQcGNFalh5TWR4czNQQzB3azRvZldqNTJjSkU0QnZjbjVzQkpEWGlHNWtGWEFNCjBmbG1tc05scGJiUC81NnV6c0U0d2IxUGwySXBJSXFLRFllZzM1Q1dYSmZPaEw5dTRRZGRQWFJKcmdvc2ZIT04KNE9mM3ZnT1cyaVFyQmh0MmFIZmNqWEdHc2NmNHhaa3BVemtuYTA3TGlYdjFDTzdiQ3pEMEh4ZDJkczNWNUh5QQpCY1IvZ0ZQellRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/service-serving-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVpnM1dJNnd6alQ2SElCT1EwcFZPcEVGZ054VlBMTzd1bi9QM2crUi9GTkI5aGZ6CnNsM1pVN2JRU0o2Rkk0RnFSdUMycmNUZmZyR0xqUjJLZ1E3ZGJVZnFFNjNkR0dMdUxGR2VOZndPcVU1Y2Y3R3kKVUxhbmVlVFI5MlNpK1R0TDdqREEwd2Z4c1VJMGJoN0hpRm1XVjBDRzhVRVhWRXhUY3Vpenc1bjF4ZWU3blRQawphb0xnYTR6MVlTNWNsTWx4SStHZ0dWSVZNa3EyMkk2MWxZb1VEY1NQMmhGL2loNzBNdUFkbmFJZm1idnhMMTJVClh0NHovVm1zai9SVnY3ZVd5aVJUSE9XWlFEaTFlRTEwYVIxeHZRNW9nMXRBQVUwQ1RZbGJHTDFqZW1LcjdSWEkKS0VaSU5XVDdYd0ZabEQ0S29GVGxjb1l1TjBMRkdaUEJhU0hwT1FJREFRQUJBb0lCQUhFd1lsLzhmQXhrVnptRwplTFY0ZXdHbm9LQ3NiVWNpUGZ6dktQRHdPMkxJdnBGYzB3ME1qZXZOYTUzTUR0ZnZtOXJLUjZJYWIzL0RSM3hiClp3RlR4bjBWTGlrTU5TLzlkekNsR0k2M042SFA1dlJpeUx3TjdDRHlreUFtVG85QkFDQnM4WVRuSEd4TjMyaFAKcXFSYUJua2RXL0xRbXAxc2c1V0JzZGl1Zk5Za0NUTmFxdXgwRDJFNlBvWjRWaWRETWlreER6NzRJSFVKcVFCUgpRc0hmNEF6OGRGNDlnQnpGN0ljbk9pMlQxN3pjelNHS2pNanZ6T2xYZkxIaXRBVmhmSjBoTnA4cThCS2IwVi9DCmFLdHFDYzIwQTRQMjQzYVRjSi9BVDNMR1Q5ZWFwbnEwUE1tdUdFTHFPWHJ6a2w2M0dDQkhDbVBBaXpVMWNHTUgKQ2Nsby84RUNnWUVBMllUQnpMall2azl3bG4yaFdYdzdjeElmOXlRUzIvQnorTHA0bWU1ZkFLeit0SnZ0cG1ESQpsZ3JBRGg1cTFPWk5hc01oeEI4dVdSTjg5dndrcGdJd0FOT2VXanYwbjNkR1hhNUNrZDJySVhUUzl1SC9nczBtCmw1bjMyUWVCaE9Ua09iZXBVTjhoT0pPVHpRUFBnbm40YmRJQk9oWkhOQkwwQVgwQVM4anFuMVVDZ1lFQXg1a0YKSDhhbGw2d3lTT3pVQ2FGRWN6RlJ0S25SOTdNSzEvK2poQ3BCUEJXMnk1Q2hNMlhYMHNqTCs4MnprczJJTEFUYQpMUHVtcE0zS09kMkRTUGNjcmQrdjFTYXllUDNiTm9CTWh1MHgvd3dhR1hEaUpUWGpqem81THN5dEMvR0NIQVpPCkF0bnM0dlUzV0R0VGVXWHRqQUFnaGlUUW1adVZVTk1Pa3RFYStsVUNnWUVBdXltdk0vOXRpRHVFamdrbGQ0RWQKQ2tOek84MVBhTzQ2YTYvUHErdmUxUThGenRSSXBadXJuT2M5SUNqdUZhamd2bGVPeTFsbElRSlN5WlpsMW00VgpiZkNvMWMyM0RDdXVZVmRiTW5YQkZYV1hQUlZ6TE5KblBaVWZIU0NIUXBsTkE1alQyS0ZWelgrMmNuYXY2LzRWClZER2FHcWdtdGxrRW1lODcvUG14WUUwQ2dZQWZBUUh1d2FpUE9zeEV6NlRRS2lDNzAvbGhHcy9tcmdVTk1FUnkKRHk0NjZ4U040bFZuNm5YdjVBanJnRFJZcFZ4MW1mdFo2VzBsUkdJWlF2TlZyaXppUlZER3gxQUp3MFQ5M2tnRQozV3RhdHNLSEdTWEhxZXRESUVRcHBObHNkWU5FWHlaWEF3cnM1akpHbmxDRkZ2UWpQeEhPUklHeW1weERCY1hKCndIbDBVUUtCZ0NBN3h0Z1o3VElhckxFN25ZaEtiT21vNW9jS2JXWWVxMm1CcnFDMjBiYzR1VUFyaDJGYjM3SEgKczJnaW9yYUlFb2ptMFpZZlFpQUcwWXpWRlEvNzZTUzNhYUJQZm1CZW5CUTVWOHFOZENCR0kvT3N5NnZ1MG9kSQpvSms1U1dpdE1NaFpzVVNxbWphL0lIZDhPYlpuOFJsZmwvbHFhTjBvZWtaVXBrYWVHU1EzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/service-serving-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lJZjl1WlNyUkxGRk13RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0xURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhHREFXQmdOVkJBTVREM05sCmNuWnBZMlV0YzJWeWRtbHVaekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLbVkKTjFpT3NNNDAraHlBVGtOS1ZUcVJCWURjVlR5enU3cC96OTRQa2Z4VFFmWVg4N0pkMlZPMjBFaWVoU09CYWtiZwp0cTNFMzM2eGk0MGRpb0VPM1cxSDZoT3QzUmhpN2l4Um5qWDhEcWxPWEgreHNsQzJwM25rMGZka292azdTKzR3CndOTUg4YkZDTkc0ZXg0aFpsbGRBaHZGQkYxUk1VM0xvczhPWjljWG51NTB6NUdxQzRHdU05V0V1WEpUSmNTUGgKb0JsU0ZUSkt0dGlPdFpXS0ZBM0VqOW9SZjRvZTlETGdIWjJpSDVtNzhTOWRsRjdlTS8xWnJJLzBWYiszbHNvawpVeHpsbVVBNHRYaE5kR2tkY2IwT2FJTmJRQUZOQWsySld4aTlZM3BpcSswVnlDaEdTRFZrKzE4QldaUStDcUJVCjVYS0dMamRDeFJtVHdXa2g2VGtDQXdFQUFhTmpNR0V3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5NVZHRU1COEdBMVVkSXdRWQpNQmFBRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5NVZHRU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVRWK3VICkJ5NnBSVnZjL1FKMkRzYmowWTNKT09yRkloNkxZU1NJb3hGMWg0UFBXQVYzMDQ0QkkvQkdvSUhicWhiRk1xdlIKTDFtcjdUZlgycXdyelFpMUxoOU40R0tOSXVpYW1PSlFGMkJkQmNLWjUxc0NMZGxLVG9qekduK0oxR2ZER1pTKwp6dkVOM2lrWVJMMWgwb3pqRDVlMk56bC9RTWNIcVZZNU5TdncwdkRWUVpuODhaLzN2M3c4T3BYNVlRRGpwZGtnClFpZnR4azhDUUk0WDEwR3FTRnJ4STRsSzFZSVYyTFI1VUhITVFSYXFaK3h0THhRRlZvbXgwekJaVmZVcHM1a1kKSWhucGZEYzZWY0FTSTFRK1puWDZ5Qno1ZGhwR3Y2UFVnczV6cUkyMUlDNVNlamRVTXYwMUR5TTREaGZBN3YrWAo5QVFUbDBKR3IzOC90VE1pCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-client-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOG82bEI5eU1LM1Irb09WRFJuZ0V4NXY0K3hWcTl0aEthOWF0TlpuQ0g4dWJqbnR0Ckk5RGVrRnJlaGFIQW1BSXR2ZEw2R3d4d3FuV1lYK0hWcFpCYzRETjJJVnBaWnNQNlkwWHdkZGkxVEtWWlZyTEsKZE96emJPUzJvTkRjZkg0ek5Kb3ZlaFQvZXpjUnNqMzh3TmdkbkJUNmZYQzhXRXJ5QW9zcTdHVXpkSXhXMTZDZApPd0NYQ1djTTc4YUlHdWxWNmlvSmdRMkRGbmRRbWM3eDhLUHluUllsc1VrcjB5cDRNSnMxR1pyV0hiYXpSajdUCm9YWEJWVTJ1TDBKbFVpZEtObGRUTHVHWXVlaWR1QVFVSG9VRDJ2WWxhU3BrSktKRDU5dGxsMENxS0hCNENISUMKNTFKTEIzenVMMzR6Mm5GdDZqVkd1ZkdGR1VjeDJYU2psck1xbXdJREFRQUJBb0lCQUhDNFNZazF2UTRVdlNRWQpad05Ba3pnUUM4empUeW9YcWI0anJhclRJWnVWQzExVGpveXViRCs1ZXQrdkk4bUFlYkZWY2xWUG1xd2NxZ3NrCjhCeFkwbEIrbWM4MkpZWFVYVy8wK0tKTGF6V0xRZEZBbFVWeE9FN0ttdlJ4RzRYZlAveWFDcVk1UytEKzNvSnUKdkI4Q1VBQlEzM2VjQkdzanFRUDFtS1R6QXM2TjRkSHd0NWdreStQSzZIZHVBdGptaEVQbVFZOTVVU3NaNzlTeApTMmxFeWl6WC9WS0xyWmFQVlB3STdlWEx3bUg3M0VSQjRmQzVla3NkN3ZyM3kvRGttckNoWXJ3THBxS1Z4dmJECmMwYVBRZ1U3NzJZYjVnM1dJOVV2K1BBWmV0UC9zWk5Mb3ovQjIzWjErV0NzWDJsUkJ0UXhyYjlFVEE4L0FaWFUKVXJkeFFBRUNnWUVBK2o5MW5QNGpTVHl3L29DQ1A5YkdsMmpzRmZhWEwzVldwZlJPSTlPdFhiQ09ZWmsxaXgvMAp1dUVyVlVJUEo3dVZDeXFJLzhadmhaMmhSbFlpdzlPM3ZiTTlsSVBNQUJKMUxnU3ljRHNqY0s0TFZUWGFkOXYyClNXRFBkSEt3ZmVQb0lkengrc0Y5MGE2aE1UOTdLUmFteUMxSkMrQzViUHVGbkFPOVk5SGd6QUVDZ1lFQStDSHUKUkNYRFB4RngrQmI4eUQzZTJkcGpGM2Z5SGxXbk1zTFA4M3JFaGRqeHFHOXJQd3JKeUQ0c05jcU5zbS9kTjJmSApoeXpEMW1pWGlzN0hOcUx4NSt1eTVrd0RucFloeWRaVlFSYk5TN2xYVHBwZTBQZk8vNzZnTzJGVStSMmszbUhiCmJlMXZwYm5RR3lpVlhZL3hQcHV6SDNqWEtyYVR5T1pvK010UHBwc0NnWUVBME9Yd2xHRkJxMzFTY3VGcjJVYTgKK04vSlZIeElzSUZQRjdIZEdPTTNNYUtVK0x3Z2lrYmUwTEh1cm5rNmxYeHRhcWpUUEZDMS8rQWFKTkQ2ckdZcwpWOXNzYUxHc3RkS3lwdnVjeVR0VTFsY3pkcXBCK1JSUmYrZWt4aHlIWUUvRUU2Q1JEelkraGE4MU9CczZBSTY4Ckl4WktoL1BNVmtHUXd6QU1CU3ZLY0FFQ2dZQUtPdXZsNTJDcll2Njk2Y1MyUk1iQldKMnBSQXE1Y1hLWlJ5cm4Kc1BJVlNxSjcvVXdBcDJNMlhFbmFWZVdOcThzRkU4UklNSEpLanJsZ3diRzQ4UExrU3ZWdlJVY0k3TXVyMUtoagpMSnQrT2IvOXY2T1ZIZ0pzek9FeVVZcjlVbG1QeVowUVpTK3JONFA2K3F0ZDFpZHVHMkZCTk93NkdKanpPWHl1CmRVTnRiUUtCZ1FDVjU3M3IrOVYxNm5sdzlCRWJaQ3JvWWF5MnJCamlnc1poWDNzN3pMZjVwbGhqY0Y2dVVLR04KRmFYb28xZ2ZDc0g1eEk4TXdtVHpjclBMTkIxaFUrVmNVSktDQlZSVENENE9nNm5SMnRCYWdFNVM4K2RyUTAvTQo5bVlRWkwrVGRJNEhvTFlEOFA4UURzT3Y1YVRRbXNrT09nTi9ra0t2K0FFNzhPY0FScktTVEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-client-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJV1BPMTE0RDZNaXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0hqRU5NQXNHQTFVRUN4TUVaWFJqWkRFTk1Bc0dBMVVFQXhNRVpYUmpaRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEtPcFFmY2pDdDBmcURsUTBaNEJNZWIKK1BzVmF2YllTbXZXclRXWndoL0xtNDU3YlNQUTNwQmEzb1dod0pnQ0xiM1MraHNNY0twMW1GL2gxYVdRWE9BegpkaUZhV1diRCttTkY4SFhZdFV5bFdWYXl5blRzODJ6a3RxRFEzSHgrTXpTYUwzb1UvM3MzRWJJOS9NRFlIWndVCituMXd2RmhLOGdLTEt1eGxNM1NNVnRlZ25Uc0Fsd2xuRE8vR2lCcnBWZW9xQ1lFTmd4WjNVSm5POGZDajhwMFcKSmJGSks5TXFlRENiTlJtYTFoMjJzMFkrMDZGMXdWVk5yaTlDWlZJblNqWlhVeTdobUxub25iZ0VGQjZGQTlyMgpKV2txWkNTaVErZmJaWmRBcWlod2VBaHlBdWRTU3dkODdpOStNOXB4YmVvMVJybnhoUmxITWRsMG81YXpLcHNDCkF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KQkJZRUZITlRlUFVDdkNDcnRKS2pKK1lEMjM4OTVWR0VNQjhHQTFVZEl3UVlNQmFBRkhOVGVQVUN2Q0NydEpLagpKK1lEMjM4OTVWR0VNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFUaFFLbU1sdFUxTWhwdStHZzNSS3o3QmxiCjJTU1BPTGRYUGtVWHV6QXV6ZzMzSk54c1dSZnlhRU5HTk8zN3BHaUdsY0hFM3U3dVdNUWhEaE04eGYrUDcralkKSjZOays5YURlaFdJREdlaFI5bTAvQUdjT2o2UWdKNCswbTF4ZTV3YmZPWFNQcjVBSFVjZ2RSR3B2MlNlZFVLOQpVT1VIL3FJNjFlRFZaREpMQU1KaWFPdEZLY0Fib0hpZ0w3UDVMZFkwRjNLM01GTWJjQnl5WlZyQmQrV1pRTG5tCnc2RUkwUVptdnh5YjdoRG1hVzBCUDd4SjhZRHZHa3c0K00rZ2tXZEpDNnRhWlVqbVpVZlNMb0MwK0ZJMXFYQmUKUzd0TjZzOEkvWkVBSjdraDFpOGcrWHhYemZadmRZbzJnSXhmZ0piV3FQS2NTbjdxY0YwRDVGVy9ubVVpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-client.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcHI4TU5YYXlhK29kelFyalFEbzNFaHNUODVMUEs2T01lSzdNaXBWNm91VWg5WXY5CmdxMk1sSUlWMXBEVUtwWVdYSnB3YlFteFZNSFJXejZCVHZ3SmwzMFlXNGF0N2hvWURBR1V2M3ptcFlQUzRYRzYKOHJHQ1BhVjNwYWhCL3ZvL0h0eVNteDFxMmtyUWVoOXBLU21reFROQXY5R2pveVorUFFyN3Q1VVpZcVlMdGJlSgphWlVPK1RqUkhyaFp4QllnTEMrZmZCU25kdjNzNXlKdEZvaE1TTTFrb1BoT0Q5MXFFL0lSUC9KbmZFYXZmTU9pCjJSMk9XbTN6YXJYSGNMNC9hOWVGV3grc2Z1ZlRldUVaY2ZNQnNpSHZ2L3VyODZVLzZETWlBOTJ6QTFOV3YxNTkKcHRBWjhrdFVFZ0pCc2J6bEtMTm1SZFNUY3BEUmJpZnRzWjVBdFFJREFRQUJBb0lCQUVINTk4K3pybmNxaEM0YwpMN3k3REEwNjc1TUJ0TDAwa2lFeU1MWm8zTVJWV3pGMytZL2FNWFNWWUNTczIzWWFPckRiWHI2V0JqZGVGUU5BCllST3FmL1VUeHk1M3hKd2djUUZYSXM3OWtabE41b1BUWjBBZDRrV1lFaFpXMC80YWNCMDY4enN5MFpPYjVJOWQKbkZOd0tjVHBPYVpzUVk0TmJnZWpMK1A4dDdXakQrdjk4TzhFSEpZNnF3c283bFpITXlIaHZ5eEd5VHpJaFVETgp2SGtrdElWNWU5a0lHQXZRQ0xYZHJaQUFhMTR5eUV0QjA3RHhiVnZpZFJXUVdKcEFjeDFXczJyVmJhQ1lsaE45CnZPOHZ2SUJCamZOa1pmUTFPZGUrM0w4cDBMUjJ6cGl1dU1wTGxBOHVtN3ZZZmxnSngwUXUxY1ArVERHZHhOaHcKNTJvMVdvVUNnWUVBeEhXcjBUcEIvZktmWUhVSlIxMklxLzZidUM3bEFqMzJodTJqWGtIako5NW1ZTy9od2xhcwo1aXR0djRITzlQSnBqRzBhVUdFeGRYWVdYaFRuUERsRzVZZGloZy8xajhqV2xZSnNMcmExRUFxQS9BZUI3MTVSCnRmK0FaZUNxbUF1TTRJd2swbm13OGVjc3FXbVZPNmxzRnFkbGpMMzVSeFJLZitNOGtjN0lwSGNDZ1lFQTJVZ1EKUUduMHVHaDl1Y2Q0RVc1WXJwb1E5TUhlTEhWaGlGWkpZNXNSV0xlejc4WXREZEo3VUJ2b2xDVzRLVERTMWRISwpTVlF6OGZ0Z1NvTXRCOHpENnVGQUZYWXVDL0tjeFhLMU9LS0k0MW1PdnRDd1lIQkxHT3VRWjJTWk1sZkUyaGYyCjdVZ0h0TUduTENpeDgxR3lGZml3Z1RITy90bjB0WWNjY2hrR3F6TUNnWUFQUHdxTWZEYnUzRXRlRXZjYllMamcKa0N2SmlXb2dXR3F2WWZYUnRNOUtJc3BUTDRxWHFGNVdwbnduNW8wSEdXRHprdXY5M08wWHJvaGgyTUZ4UFFpeAplMlk3L1RVVGFZU3RxYWQzb0pwQW1uQVVId2tJYUl0eTBsZEdrTDdzZWNqL0RDRTNiRlk5RDdHNW5BWUcwVWtnCklQR1NrSk90M25kQm9ZTHIxZDVnVlFLQmdBcktxSHY2aHp3TmZJa1luaDhIZ3dJUkJ0eVJNRzYyMmNSQ3ZOeGsKbkVUeXdzNGE0cXY0RTBYVVRRWG1wYkh1Q2RxeTA4QTJuV25jV1ZqNkVPZDlSUkhLWkR0c3BqYlRzdk9ma2Q2aApPL2xHdm04OXdEVFovdkRhNms0b1VlK05LbXJHbSs0SEVOTHFkMW9iSDFOOWNFSGxHeWNmaVM5aE5lVTZNN0I3CkM3aS9Bb0dBYjc3Y1gzOVJmK0t0TUNnZXFJa2c0dDg1SGFaTDNXSExNNTBMY3RmS3FLeVZ5d3U1VkxHN1I1MSsKT2tsNUs5SWJBbEhRbXVFalNrcG5FS1ZQWlNMdjl4NVNFR0JMc2h4Y2w4Rkl2SE9INmI2TVpmU3JRQTNGU1JwaAowZVE5c0lXVFUrL1Jjakd3UjhzK1Q4WEFkSzVVOW5FOTM4Z0Q0OTlYZTA4MEZGZENiVHM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-client.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lJTGphemxaVlk1ZzB3RFFZSktvWklodmNOQVFFTEJRQXdIakVOTUFzR0ExVUUKQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQWVGdzB4T0RFeU1qZ3hPVFExTkRSYUZ3MHlPREV5TWpVeApPVFExTkRaYU1CNHhEVEFMQmdOVkJBc1RCR1YwWTJReERUQUxCZ05WQkFNVEJHVjBZMlF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNtdnd3MWRySnI2aDNOQ3VOQU9qY1NHeFB6a3M4cm80eDQKcnN5S2xYcWk1U0gxaS8yQ3JZeVVnaFhXa05RcWxoWmNtbkJ0Q2JGVXdkRmJQb0ZPL0FtWGZSaGJocTN1R2hnTQpBWlMvZk9hbGc5TGhjYnJ5c1lJOXBYZWxxRUgrK2o4ZTNKS2JIV3JhU3RCNkgya3BLYVRGTTBDLzBhT2pKbjQ5CkN2dTNsUmxpcGd1MXQ0bHBsUTc1T05FZXVGbkVGaUFzTDU5OEZLZDIvZXpuSW0wV2lFeEl6V1NnK0U0UDNXb1QKOGhFLzhtZDhScTk4dzZMWkhZNWFiZk5xdGNkd3ZqOXIxNFZiSDZ4KzU5TjY0Umx4OHdHeUllKy8rNnZ6cFQvbwpNeUlEM2JNRFUxYS9YbjJtMEJueVMxUVNBa0d4dk9Vb3MyWkYxSk55a05GdUorMnhua0MxQWdNQkFBR2pWREJTCk1BNEdBMVVkRHdFQi93UUVBd0lGSURBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1CMEdBMVVkRGdRV0JCUmxwU0pETEVLZ3l5R2FwZ2o1VFRhUVp6aHNWREFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQWdtSHJmdmUwTU80N043MGNiWUJCVFc5VHJ4VFlHazVPKzdQZldZZnFySlcxWVhCbXVITCttZDl3CkJneThXNHcyOW1BNjQyTVMvUzVabmVwbHJINFlBWEd1SEErNjV3TGlyeS9jdkNJSzgvQ1p2Rnl4cFlWMm5zZDgKVmhtVlNNWm96YlF0cHRFSmFsNFV6b2dNWHNKdXdCU3o4K284TzE3REd1ZFdpTkIrMHNyYzIzbVZQcmNNbzkvVgpmY0VkUzJyV1dROHhWdjJDZmRYVHNYY2tKNGJmbXd1SHJEbzJrK3ZjbXhxTWd5dVUzL1F0dm40SVI2T0U1TXVUCnBoL0pTbFAxaVRsN3ljOCtyNHA5alVvYWszak9Ld1ZXcW9OdzE1Q1hzdUlReHMrWnkrODY1ejFSNHRMQ1N4WEEKYlRYdytuWjl1T0hIYlNwZjhCOU52c2hCdTEvVnFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/apiserver.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbW1QTU11dlp4TEVzT1lhd3I4WHB3SnRsdlJNTU04a2p0QVJaZk5qVkhUZCtid2hJCkJyQ0ovWE1SSTA2MDlzZHhNODkrWG9OdituV2pUemtRWHdaaVE2R1ZuOTRnSXpmdGdSMGhkblFJRkdLaU4wbW8KTEZPdG52eG8zaTIzSHlOa09TdWFneG1JR1Zja2FqM1BCWWVkbTdFTUJvQ05jVE9seDk1czFUdEdtdTlRcStDUwp0Tm5PUDBQSklVN3B6MTFuUzRSQWNkL0tibzFweFN0U1JHK3dQL09NUlBkdi9odk9rbk5mNGdha0FZZTBWWHU5CmJ4d3BDYk9NVUhya2U2VENNdnRteWlHZGdIUUw1VWhpQXlaV3VTK0lMWStSUTJFUCtWSVpKc0V2OXBxNkVOaVkKdGlaVUpsVTNrZFBYTkc4eFg3QzdpSnJyWXpaMXFGSmluWHloM3dJREFRQUJBb0lCQUJJOGFYazJUSUdrSDhJbgp1NlQzYnBYV2hSemhMQmJOMGs3SUdMM2Jhc2pKcmtCMUxQVEZVM2RCYVN2UGR5YVRCamNGY2pxOXNiTld3OVJ1CnZCVk5UcndJVVFFU0hwK3FVbjVtcjNZclhHenovWThrUHg0RlFFUEFNcTdUbllhckNvS0tPUFQxUmhNZ0xPZnoKcHdsVExIV2dZdmc5cFBkVEQyamRSK09qM2NJZEJXU1l6WHlDTFBMWlR0bGpWVUlRc1Z2SDM0WEFlNUNIcEM1cwpUci9CamI0dGVDWklhOGlILzM1YWRyVm8wOWo5VFpWRUdWcXNwTDRPUHkvVk1PSFRXMDZqd09vMGFBRFZZS0ZGCmNldERrWXpxb3NVeUQrUnRTeldpUThyaG4xRHc2UStOZ1BzcmNPVFl4MWRhT001TGw3OHlXOEZJR3k2bmVMMmQKVzFMNmV0RUNnWUVBeWgvRk5oa1EvU0pRTGk4WFN1MWpkcnlOY0xIUnFMVUY1blRHQ1h0RVhnRUR2UUplSFZEdQpFMGZTclQ2NjZsdkNOY2huTW1mSFd5S1ZteEgzKy8xblhTUTVkTEtMdWU0bHZPaldRa0lzRHN1L1hrQ29BUGdNCmdLb2VzL1B2cU1aMVZOSk4vc2hEUHR5K29Gc1dURC9qOUFUcmRrZU1FYnNkcVZwcVFnNVNUN2NDZ1lFQXc0clAKaHlrQjRiYTR2OXp5WWVNaXF6R1FuUGRRN0l2emY0cTNVN0p3amdOdmhJZFZmaXA5bUxBZmZSbkZMMnNRNk5xOQpuT1R3RnlHV0ZINndZOGV1anVSa1h0UnhBaDd4WFZtejNMcXRtS01PV2VJcGdPN3N1dDJuU3p1elpPaUI3VmtMCm9CZFgvR0F2czU0QVg1VWZNa2hwc3crRjByZy9MaGRuTDhzeDd4a0NnWUVBeWErb0J0SStYSWlIdjMzbjNURkIKaGJLaDVDamJqMStLMHFvRkRtTDlGbHdtMGN4eUF3akZkMkc4dkhpUzVOWEkxZ2Z4eVo4Nmt4clFjOXNiTzB4aApmdFJ0ckorWXcxLzZNaVdYM3FmTzlMaWtiVFZSTHg1VXczSjlqbzFEd0lLL2czTVN0c0E0TVpydGNHOVRzYVF6CkgwUmxmREhxZDZyaDd5STBVMU9kR01NQ2dZQXdYQlFYQ1QwOTVVS3JzS2tCTEh0V2UxdVlkbEc5THA5NTI0U2IKWG5ZWHFTSGJWTnovNXVKSThNWFkycGE1czNEckphM2ZMMzl4T1EwMDVHQWJUVGNPZjgyUzVsZE1mdnFTYTZ6ZgoyZ3MweEo2My9BYm5yQzgveDdHb0dZdTBXUXhJOXN5NU93eTNqZEkrU2NVdDNtTm92Qi9uK043UHptRlJ0TmdBCktmQ2ZnUUtCZ1FDYVhnejJpZVFubW1WMlVpeHdhc0NNUDRqcXgybENoTmlGaWQzT2lrdk92RkF4QndQT2NqTDQKdWZrcVRDQ0hEVUZGQzRtaHBBajBNQUhwS2ZXVHExTzhSS3NRYVNNL1ZQbUcxRUdYKzU4R0JhUkZ1bGRVZWl1cgpOaG1CeGVpUkxmS0UvUDJvdU50VDJnZmE2ai9kS2RrckkzN3ZweGlYdmFRdmM3SmpCaURYa0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/apiserver.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5ekNDQXQrZ0F3SUJBZ0lJWHNvbm9sZ2owM293RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEyV2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psTFcxaGMzUmxjakVlTUJ3R0ExVUVBeE1WCmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUFtbVBNTXV2WnhMRXNPWWF3cjhYcHdKdGx2Uk1NTThranRBUlpmTmpWSFRkK2J3aElCckNKL1hNUgpJMDYwOXNkeE04OStYb052K25XalR6a1FYd1ppUTZHVm45NGdJemZ0Z1IwaGRuUUlGR0tpTjBtb0xGT3RudnhvCjNpMjNIeU5rT1N1YWd4bUlHVmNrYWozUEJZZWRtN0VNQm9DTmNUT2x4OTVzMVR0R211OVFxK0NTdE5uT1AwUEoKSVU3cHoxMW5TNFJBY2QvS2JvMXB4U3RTUkcrd1AvT01SUGR2L2h2T2tuTmY0Z2FrQVllMFZYdTlieHdwQ2JPTQpVSHJrZTZUQ012dG15aUdkZ0hRTDVVaGlBeVpXdVMrSUxZK1JRMkVQK1ZJWkpzRXY5cHE2RU5pWXRpWlVKbFUzCmtkUFhORzh4WDdDN2lKcnJZeloxcUZKaW5YeWgzd0lEQVFBQm80SUJHRENDQVJRd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNDTnFSRHY5VVJkb051eG1CZVp3Yk9wMGNrL2pBZkJnTlZIU01FR0RBV2dCUnpVM2oxCkFyd2dxN1NTb3lmbUE5dC9QZVZSaERDQmxBWURWUjBSQklHTU1JR0pnaEpsYm5ZeExXRndhUzV5WVdabVlTNTQKZVhxQ0NtdDFZbVZ5Ym1WMFpYT0NFbXQxWW1WeWJtVjBaWE11WkdWbVlYVnNkSUlXYTNWaVpYSnVaWFJsY3k1awpaV1poZFd4MExuTjJZNElrYTNWaVpYSnVaWFJsY3k1a1pXWmhkV3gwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzCmdnbHNiMk5oYkdodmMzU0hCS3dlQUFHSEJIOEFBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgwdkJkMTEKR3crMnhMWmE1cm8zQWNCREg0T1dVdDJSeGQ4N3BFbDliRy9kcjVsUEtpRzZ0SWZtc1d0UzhzaWIyeSszOWIvUQpubXdXYUVkRTVoRnpSNUliUkk4WjNsOCsxemxYTWtTUy9nQ05xS25xSGFTcGFYYmxBNk44cklzTFFpYmxmenpSCkNieFhTbHdQc3N6YnVkaTRVamxiMS9URzUzZDh2M2pxakRFZWdXYzZPOGpMcE9GWFBNSS90bmx3eHZBT3FMb3QKWnJXRTRaWktXTElDZW54alVLSjBndjlWSXNkdEhVUmlKbzRjOHZNRTdram5CaDRYZHdZeDV1RWxKdzJPUmRxbApsK25xSW1SMkMzV1hsam1Ma3dBdlR0TmZhc1VuM3YzUkVTbi9oSFhoRURFcmVuRGhUeG1tS1JORFBDR3FHV1NTCkJGVE44QVdQOHY1Q3VWND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJSDVHM1g2SVJ4cm93RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2tRK3NSZkZTTVRMTm4KUVZOLzM4UmNYc3VJbmQ4WlB1aEUza0hwRGdpbXJGdUsyc0lDS3BvL2I0NldNanpDR2lzZFJ0U0JLZU55cEZsVgptNVNuV3VjdXN6dkR0R1ExVGZ6dEtJTmxXelVxazJ6a2FjbUViNGRkajZMK3hpOVIxMmpJSUp3K0VvK0RJSGhiCnk0T1c3NWhLMUIxOXdQOGlEVmJzajh3Qk1iLy9qN2N5OENIUE9xWU9zTFhURkw0MEszSEozM3REU3ptK3FiZnoKNjI5RllmL3JNc2pVKzV5MS9GdUJrMGtvRjF3dGtOVy9OYUdoY05zYjBLV1hVNEVnN3lrOXJQRXVQOFRtSS8xcApIeThscFVEVE54TzNaV3l5SXhmdkw2azVqQVlRVzZaVHRwR0hiNmRyR3BBZjdPaHY2K3ptVGg2Y3Z3engvQVEzCmo5cjl1K3RCQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSelUzajFBcndncTdTU295Zm1BOXQvUGVWUmhEQWZCZ05WSFNNRUdEQVdnQlJ6VTNqMQpBcndncTdTU295Zm1BOXQvUGVWUmhEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDWWdkWExST2k2MnVsL0VaClNTU1RnOG5KRlpraWlwV1o5QXp6NjRtQkRMeVNjVk80OG1JUGthbzZSbmY2Tk00alBUMVkvY1lSNGJJRUczSkoKaGR1NXpoSWNBWjJVRHh6ZTFwTVRiOE01WVkyNEhhSS9UWHgwbkxtQVN0WUtzUW5GeDdRR2s2ZWJRaGlOQVo5TgpWc3c1U1ZmM3F2aHhWSWFRVGNDdXRpQUxzblpnNnl3OVgzOHV5YnhCN2JpbUZyRjBwd0Q1ak9HVEs0bHBnMHRsCmppOXFvcnk0Wk9FZ1dJQ0VacVB3enJsN1FiODEwTTdMcWZ6TzVUTWxQZnVNTHBseEtzN3B6U2lZUlZlL09paTMKZndpQVdVSThjSmM3cWNjSmcvZTdoVTFzdFRKaUpmdWo3Zk0xRC90Sm1FakRLazdnd1hNMi9OU1p2K0d1ancxagorUHV2cHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/apiserver-proxy.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUFSSktLRUk2eDZrS2dVWGFaMEwzbHFQcm1mRHFyR3hoSXYvb2JtVTluVEtUclRkCm0zYXJOVCszY0pzMUpaRkkrUEJYckxDc2tsS2NKR1c1TCtZL0xMeU1zdmc0Uko5YUcyRU9rSGRidjFwZlZKTy8KWHZaeU1vUFRxenB1d0ZNOEFkeGhUQjVCV3BZa00waU1jN2MwNlJ1bDZ0MlJyamFMQ0ZRVzdNdjRQNWxkbTB1awpxR3Fic2ZjTi95MnNBWkhiN3V0N3lqemI0VmoyOGFKRW9ZcHNJWnVCUVc0ZXJXdFFnT1BuQ3hUQ2tnQ3V3NElQClAzSTFOZkdwcHUzRmYrZmVEMFE4cnQwbkFFdmdpeStEV3dwNHE0TU42ZElVSm9pR0srVERxdllEZVp6MXFNa08KZEFJN1pKOXhsbnNnNnJIMnZIMlF6MEFuMU1jWit6Vk5PSzZOTHdJREFRQUJBb0lCQURxSDFvakhKdjcyeG45dApZZjZMOEc4dS9TRENTS1hvdmRQVnpBYWRjaFAwOVVhMjhxcU52V2dscng2S3JMRERwU0VENUFRcTV6VWlhNExUCkthLzBwc1FHb1AyMldYRHJXTWp1Uy83R2p0aWVMNHRtZVBmbkVsL3A1OFVSb2xzeGdEdmpLNjNFcE1kSGJHeDkKYkd4b1RsbHd0OHJVNzg2Vk0zWktkVEx5TlVFV3NXRjJIT25FY1ZJSFJNN2dSTE5XM1FiVlB3L0xmN28xYXBSegpZWEdMV0J2N2l4dTZjKzhxRURzL0RNYmFram1zMlZaVUJvR09KSXNZTGFNdTcwd3lLckVVZDFwK1BZUE4yeEtqCkQrSDVEZnNBTTMyUWVpV3NwekhxRllMM1pRQ2NtLzBEWUhxN2hyVTN0dkRaT0x2WWtTVXZYaEN3d3lNeHV4aWIKdkpPTmhtRUNnWUVBMHF5SFpvTlU4amNIYnNuQTdGQ0RZK1Q2d2VwZkRSUXl1WFJLdi82THE1UEZGQlBUWjhDWQpLMmtwYjd3YmFjTk9tM0FEK1Z1aTVkSnpDbUJjUXU4MFpkMHg1K2RTaERYbm4rYUJCQldmck91R0d1U3EzZ0RqCnh3aWUvdnFvNjRMYVk2Qjg1Y3VuU3pUS2J6VDBpTnEvOWY2S2U2SHVJYVl2N0pQZFJteklENmtDZ1lFQTh3ekgKOHR3MXJ5a1RDYnFUaTZuMSs0MjIzK0NpRjZsK1J2Z0xBVlBHR3U3cDJQYjEvem4wQkd5cGRhZVFjR0MzRzVZcQpBVFNCeDZ1RG9ha0ZMczBFYmpHMWhwVnZxK3VqV21aSjBKcVllYnc0cWh6dzNCaGRSRGRPR3dONlN1QWdQandaClFRRUxIdk5VbCtlZnVNQ09tSVRxMStFZGlpV3BmT0I4SWRMWEhSY0NnWUVBczY2aTdUUW1SMC9YN3czMGxaazEKOXdWZE9mY0Rpc3duVnpWd2E4QldyOGdnMXJieUlCT0x0YnJEdEtEallKbExlaGRYekYzejJjQmNqZ1VScTZVSgpNN2dzMEhYalV4QUd0Y0tMVjBoNkg2bmhmeDU0L1ZBVTliVE1wdnh6Qml0Y3lJd2crbjF2K2h6VWEzVG0rN0pXCjl5QmFUSWdYNm1zcmhNTzRmbEJaY2NFQ2dZRUFqcGhuRHZObmc3YkRkcWZDUE9TZ2JzKzhCU2xUc0RJKzVnQk0KNUtCejBBVnZxVjFyQWl6TUgzUnBENkFadS9UaU9Rc201Y0lhaWp6MFkzbzRramF5Ykx3NVZoYUNpQWtkczhIagplTUhheDBGSXRYVjVVb2Z3NEQ3YVVqcitHc1BYNXV0M25ZMnhLcDEwZWhMb3dJb29udzhNZ1UrUDl5Y1ZnekJwClk2YkJrazBDZ1lCODRpSVhCZFMxNU52c256TVdkdmpWTEMyWW5RY0JKV0loNmdxcGVIcGhaa1JQZ1JKdVVvNUQKMmRjNFNneWFxTzZtS3lIejdKQlB0UitCV3lJLzFnWlpLQ2dabE5VUC9lY0Y4RVlOd2llQmhySHlMTC9uY0Y3Sgp2MGF1Z3JiRXU0anluQUhuSXZ2R25zZS96Z3JkSnBBcDBMNG9NRUkweU54STBjRnlpV1BZa1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/apiserver-proxy.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJS2dMM3lrTzd1ejR3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1qSTRNVGswTlRRMApXaGNOTWpneE1qSTFNVGswTlRRMldqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5QVJKS0tFSTZ4NmtLZ1VYYVowTDNscVBybWZEcXJHeGhJdi9vYm1VOW5USwpUclRkbTNhck5UKzNjSnMxSlpGSStQQlhyTENza2xLY0pHVzVMK1kvTEx5TXN2ZzRSSjlhRzJFT2tIZGJ2MXBmClZKTy9Ydlp5TW9QVHF6cHV3Rk04QWR4aFRCNUJXcFlrTTBpTWM3YzA2UnVsNnQyUnJqYUxDRlFXN012NFA1bGQKbTB1a3FHcWJzZmNOL3kyc0FaSGI3dXQ3eWp6YjRWajI4YUpFb1lwc0ladUJRVzRlcld0UWdPUG5DeFRDa2dDdQp3NElQUDNJMU5mR3BwdTNGZitmZUQwUThydDBuQUV2Z2l5K0RXd3A0cTRNTjZkSVVKb2lHSytURHF2WURlWnoxCnFNa09kQUk3Wko5eGxuc2c2ckgydkgyUXowQW4xTWNaK3pWTk9LNk5Md0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVXlHMU9VRHMraTVIdlI3MUtEZ2tMbDErRUl2QXdId1lEVlIwakJCZ3dGb0FVYzFONDlRSzhJS3UwCmtxTW41Z1BiZnozbFVZUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR2dyQ0RrSEtkdmE0ZjBmdEJ3NkExQUsKZ2s0eGhoOEIxYy9xQW9yd29MQUtCcXcrZzROWS94Q3JRSDVncHljT0VPMmx6dFlBeko5YWVzVHZFWEhsbHJVawpBeVBsMmtvNzdVV01LeFpUSGpXd3d0MStEMDBsZHBCKzR3TlBLenZkRStoZ2RQTWxpZFFIL3Q2YTBuSWNPb04rCjNiMTVaZlAzMjZaSkxTWXRRM3RNM2lwcm1FaDN6OEF1dWVORWRjVVA3bFF1b3FsaTJoREFvSVV5b1NKZHZFTXUKNVpwVWxGeXNkQzJLY3hNOHg0STRiYjhwbVNKTmhORTlDWWxzZ0RnS2pNZTR6Ny9uMU45ZW1uV1pIeXNydE9NVAo1b2M1ajY2dXlwNVJmREV4dVVFTkFLMm54QzlMa1pQdElESE1aUlByY29ZVVhCNndZeVZiT1BOUGpxcTVWMms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/admin.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvCjZPNVV6bW1TdmRiL21rQ0J0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUKMFFuSlVyMEd5TlFkTDlJazR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NQowQ0tKbW5ZTjhGVkRyWVlSY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLCkZ2U1RtajZnVzJXNzhwdEo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHcKY09hb3JRanNwS3BEMGlWUGxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJBb0lCQUh2YUFndnFjZDM1dk5xOAp6Z0I2YWxydGxiRWIwM2JEZzJzbEZ5UHBGd1lmL3ZDSDJBenNJRDlMUEZNTmVKKy85VWorc2U4SDRHeUpZQWRyCnllK2RoNEVENkc0dWIrbFYxN0VJM2xRcXN2WUtGUExRV2hCd0xWdHpiZUF6bjk2RmxtVFJNU2lDTWVHVzNpNEkKN09ERlJUQ2hFeS95SGtybDFiWTdLcitSdmNuTFIrK2t4UnVCNUwyamJueGw3WGhlSnJqM1dKRG1GYnBtZVJVdwpnc2lENnZPZmhZanRIOFNQY2FTaGpFbHpleG1lV2dEYUlWNjMvVGF1WmtudzVSM2lCUjZEcmlyK3pEV3gzMkFYCjJ4bVhONHFkR0FDWnpzK0Noemc4c1BLWDk5bnQ5Zld0cm92UTJ3TWVtY1FWN2VkbWcwTjVxajNYNU5UU2dpN00KTVhNQkcvRUNnWUVBenB6VVNNZkZwYkQvYUUwL1B3YUgvSTV2YlFudVhsdlVWakFqRnFQb2UxWXY2cmFmMk1jMAo1UzBVWGxtbzVaRzdXWllvMW1la0dVdW91U3NsU3J4ZS9oZWlPcDhEUE9tRVZSNHQwRGVqR092SGFhdEpWMC9rCnh5SUNRMzAvRy8zWXBuUEE2STcyaGhOanVRSUVSRnI4cy9oSjIyK1Q1QzdnUFpHTSs2T0lEKzhDZ1lFQStMYzAKWlhCWmNkU1liYXdTeWtxV2RqR1pBaGcrR2RBZi82akNNTmF4dTk3dW5mN2kwWEhPTHBqS3VnVksydncwaGswRwp2OTk0MGJ2VjZucDdRQjNOcVhuZjM2N0hLMnZGdTN6cC9GeDdheTJ4ZmQxM1RJYlpYSFVZVTErVTJtZjdtN2tTCm15aEVOOWplZXBuMjJFRnJKSEtDZDc0Yjc4UGw3eXFrd2F4OHYxc0NnWUVBemdoVUpMT2FJODFxRkUrYnR6VEQKSEpYSkJabjJxdisxc2JEVS9MbThsbWx1NVFieVJaRDQ3V1JUd0haMlYxOUl6V0JSSHVWQkhieDE1eGpnV2pPWQpJcGZjdmNwZHh6c3lMRk1vNms3aEJIUHlhaXhWdVl6QkhkYUxIVlBqUC8yV012NlJLeGVOUEV4UGtHa3phaHExCmpwNFV3STcya29Bd094Vk8yb3pMbk44Q2dZRUFxSEpjR0QrcE5JRUo0MjFoSklTenRzVU1uZkNSVHFZNHBjeEUKQ1JPL09FQmFWOE5qRnZyKzYyd3NFU1M0ZCt2TUh4RlgrdWQ5U243dStHbVB3L0xyY1ZiTG14RWliM1FFYldEQwprRnFLZENKMFRZeUsyZGVTcXgzYkpjeGNZamQrbnc4UFhPbyttWnhWd2E4NUVXbnRDTGhOU0pBSEY3SVRycEd4CkdFS2NFblVDZ1lBNG5Ub2hzbEpKTStkTUN6TFZYRHFEYmtpeVFNWUhVN2hhQ1h1Zm9PWHR2NG10RHNMY2VDUlgKREsyclBQMmpMT2lXOGcydVM2M3lQMkRrVFNqQUhqU21zeVJrOHpqVllYaFFCcXNUWTJTS1o5b1Zvbmd0cmFITQpEcUJRZlZ2K0tSYnh2RDdKRXMzVnNzTFliVkpQdUw0Q0JTMnIxMXlHNmF0K25wcytVZER6bWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/admin.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRVRFeitlMmZxT1F3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEyV2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvNk81VXptbVN2ZGIvbWtDQgp0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUwUW5KVXIwR3lOUWRMOUlrCjR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NTBDS0ptbllOOEZWRHJZWVIKY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLRnZTVG1qNmdXMlc3OHB0Sgo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHdjT2FvclFqc3BLcEQwaVZQCmxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGSUkycEVPLzFSRjJnMjdHWUY1bkJzNm5SeVQrTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcnRKS2pKK1lECjIzODk1VkdFTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYytEUmdvOVZMUW5yWVV4bm02Z0UrajZBcXJyYjYKVFBUNzQ5bjNVZVVrMG42d3l6U2VEVTNSOFhrQ2tjenJyZjZqSzJKSHl4YWRVS1Mrc1JmTFhRMUFDdjdZdUNZago2UldPMHFCcEpDeFMvZ2laTTNFL0N1KzRYMmhoYU1JdWVSMWtaeWhORDhyOXA0N3h0M3MvVnBYaEs5MTR3U1FWCmJ6N0wwWnJLYzNjNlFTYTFscVRzYXE4NU9pVXFUaWcwTGNMZmNqY0JTb1ZFV0FCa1AwSXgxMzhYdnJmVCsxUUwKeXV0RC9IS1BYWTMzVWxkMkVLdzZMbzhzR2dzQXBQejU1UUdoMGpLajZheWRQUE1HbmNjS2V0SjdJR0pPL3Mxagp0Y3RpbllFcC85d0YvZ2VFbVlPTHNEKzc3S3hQcUtySFFZQi8xeUs2dGxXcVErWW9sclNQQjM0cwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdHl5TmwxOFh5VjgxaGZUV01lZTF5cnRSU0FqQktxWUlScG5qZk9TS2hpS3VVcXE3CmhkV25PWG1iejIydUgxYnRZdGJNVGxnZmFUZUQwTDcwd1FZY3BGU3FPcTFFR3ZLT1NsU0hoa2tabFVldU5jVWQKY21GZ1RpN0FzeXg3TTl5MUNHK05HZHlZMFpQRmZQVklxSjJkY2EwZHdXQUlsZTJieVdOZ1h1SnYzVWFRcWRpWgpJOXRpOVpNV0RQekI4RUhybjZtTzRwV2wyald6ODczeG41YS9JYTdncXFBdmVrL2c0cW5SR1FuRzl3SnluTFZhCkszbkxWcFFWaU1QWWh6TGVlZUdzZldkZmFHTUtiRXNEcUFUbTlUa2hqQ21jRXFpK0dKNUVOUEdZY016ZlVBc0oKNFZabDQ0aTZZNjBoZzZwK3RMYS9Ob3ZmTlN0eUdJRVAxZmlmb3dJREFRQUJBb0lCQUhYRy9PZTJxaG05MFRGbgp3dzNsbWR0WDVDUjRGSlF5bTZHaHMwY0x3QklOWEo4a3pseDRpd1NHcit1STcydVJQaVBPVHlHVXdlV3FYMlFxClZEK0VpWWdVTkR4MFNoVTFuczRtV2RtN1NPcldZeXFKcXF4djlqZHZFbEppcUhrcFVYR3lJRHpmdlpjTDkvQ24KMm1jb3FTSjltR05OTjFnSHBxS3Y5amdzU3Bjd2dKSUIyVmdOdlU3dDhUb29LdHRYSkV2RnZkcGtVMktlRmNGbwpNSk1UZUZTQXdnWWNHOGlsVWc4WW81SWFWOXNHaW45UmEvOWdZYklIQkEvODZYR1lZaXdHTHpFSjllMG5tZ0tOCjRNV3NHMS9lRWl0RSt5UVdpa29yam5xTmUvY0hBQU5pLy9kcDJydVJaQ2pZajVvWUNod2FUWG02aXhKaEpCdmMKMU00alpIa0NnWUVBMFRkQXU3SERuMnVpOXlRWEhBcjA5cjc3QmJpZEIvNWYwLzBwR0Z5bThKV3YrWllVOUU0RApiMUt2eVBwaitPMjZHMWVvdi9TcEdCeWQzaTRrVmVMZXN3TDJkT3l0YUlMQlZTLy95Tk91QjU2Qmw0MXRHS0daClVFME5xdFByU1JBOE5ZbWV4QlFwQXE0dzhjMHJ3QUZMV2RsVVBWQm1uTTI3WTBXbUdwSTkxazhDZ1lFQTRDS0QKck50NzFNbkRCSndpcDRoc2l4cWphSTdTeHFkUnM3Y01URXh1a1d6VWFvS3QzQ3Z1OTZOWENDaGhiR052WlE0WQpGUjJDajdKUlowWk5TdjJaQzROUFZ3b0x2NEppbGhsNlc5T0RqSFN6ZXdyR3dPMTVqeVN4cko1SHluQWtWbFk5ClRiMDVuempYWjg5Q3ozV0g3KytGZDE3Z1pKVk52aHAxQ1o5ZG9HMENnWUFQTXQxZ0JVejUwdDcyNTBkS2dUMUUKZzZGR3pCK1VTaFY2R0FVWlFQbmJ0blFmUkpqbkdwZkRTWlY5bXpzU0JXc2t1MXlGL1djZldrelpyQzUxa3RLcwozSVU4LzBpbHRBSUpoMEFrdmNRQng3RVFhblRIZWszaCtJY0twdlNMelVNaWZJbnRJcTNNQlEySE0ybC9QRmpXCkFTVE9nMzNBM0cxRmkvVENMMmVRbndLQmdETEVIb2I4ZjZQR3YwRkFEQ2xlSVJld3hPcGR6eWZucGYzS3JDSnIKL1c4Njh6SGN2M3hyQndsWUdkSmpNdzNWeDlsZnc5eWtmbm9GcmFKeXJmY2FVWnZsOWdhRTQveFFqL3ZuY1d0egpFUXl6TWlQZ1lQdzV6WnE2ZVBQY05lNklUL0t1UGR4cHk2OWd0SWx5ekhNbzc4MU10ekkrYnh6WkpHNjJsMlBDCmtQWlJBb0dBRWx3UkdLUVZ6VjFqdEJ5ZzJUVERpQnRpZStISysrY2U5MUExUW0wK3l0OGtaM3QwU2N2clJlR1gKOHhWdGd1TnorNjdDQkJwUVJjaWg2YjVnUkFaNm1MekJMeDYrZUxZVUZra2tQUkQ5VVdCaVYvWGZjMnpTL0NYWApUZFNBL0ZrcWlXSkM3c2hkc2lRakJMOGk4UjBnYjUveDc0Rmx0VEZkM3lDSzMrZHFaVFE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0RENDQXB5Z0F3SUJBZ0lJRmtRZDBLUVVQOEF3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNVGd4TWpJNE1qQXhOVFEyV2pDQmx6RkJNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwCmN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeFVqQlFCZ05WQkFNVFNYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1WlMxamIyNW1hV2N0YjNCbApjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDM0xJMlhYeGZKWHpXRjlOWXg1N1hLdTFGSUNNRXFwZ2hHbWVOODVJcUdJcTVTcXJ1RjFhYzUKZVp2UGJhNGZWdTFpMXN4T1dCOXBONFBRdnZUQkJoeWtWS282clVRYThvNUtWSWVHU1JtVlI2NDF4UjF5WVdCTwpMc0N6TEhzejNMVUliNDBaM0pqUms4Vjg5VWlvbloxeHJSM0JZQWlWN1p2SlkyQmU0bS9kUnBDcDJKa2oyMkwxCmt4WU0vTUh3UWV1ZnFZN2lsYVhhTmJQenZmR2ZscjhocnVDcW9DOTZUK0RpcWRFWkNjYjNBbktjdFZvcmVjdFcKbEJXSXc5aUhNdDU1NGF4OVoxOW9Zd3BzU3dPb0JPYjFPU0dNS1p3U3FMNFlua1EwOFpod3pOOVFDd25oVm1YagppTHBqclNHRHFuNjB0cjgyaTk4MUszSVlnUS9WK0orakFnTUJBQUdqZFRCek1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU0MKTnFSRHY5VVJkb051eG1CZVp3Yk9wMGNrL2pBZkJnTlZIU01FR0RBV2dCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0LwpQZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVpTQWMrZzZOTWFDWVdwYlltd1JrZWt6eVk4emREWHJnCkREVGxCcEZpbmVUOHgxLzdwdU1yaUphODQyQ2NHei9vdkh1cEN4aHB6cndsS2VTNDZ6azFsM3ozQXBpTDlCT1YKbFlUSXpSUld2OWZRZnZ1OTdmczducVJlN29MWUxiLzh0cmN1WEdrRE9nZ1ZoTy9OVUF5bmJoL1IyeUNGSGw3YgpmMW5nY1B2S3JzajRlbHdCclJnUUZQNnltMWN2R0Rnd3k2a1lOUzVZMnA1M0E1SGFBRXBDdVVXejhoRFFMVXNKCjBqTzl3eU0zOG5TVjhmeUpyc0x4Qmp3dGZpQVN0M2tYdVNERUlYWWllcWRrcW5QaFNBaXJ0SHBqL3V4Z0FhM0QKZWhUa0YxcDRVK0dUd1lFR2lId3BlekEvSENabUc3RGVxdXZ2SmdJNHlMV3QySmpneEZWT2xRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/machine-config-server.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEU5WHRmVzROUU9sS2dOcGFVTmZhSGVyMU5NZGNIZXlOSEt3akdoUUliMlhpcFQyCkp1YjRLb2MzbjVGaURDTXdTMWxSaGR6cisxMVR0Vjc5NHZKSFpmcHRmakgreFdGNWhGVVE1WXdabmlweXhkdW0KWTRvN3lzMVZVZmVGYnp5YmlMakNJUCs0RlJiQ2QzNkZqWjVYa0g0aWxkM0ZJUjJtTzI4NVhxR3VhZXhLNzhNYgpUdXNLK2hwQU9HTGFiOTdzOGRxcThIUytPU0lnK1puc0M2UXdodGhya3g3ckJtaGJrSmxOUGh3MnpCVXJjR1JQCitsOXRJOGl6ZVVuYnlFOTUvUlF2S1ZQc1hzVTdOUWpTdVg4T0lzZWNYa21qWGRnUkxrdGp2eDgwRncydFkydVYKRWhneDBtTGViWHhQK1IrcVhnTDliVzg2RjZ6elFKbGs3R0lwclFJREFRQUJBb0lCQVFDcnZwNkYyc3VsMWVLUgp0eHBwdFQrckxjZHZFcVFXMlNGWE1WK3o5eTdqMWZMV2t5d25MTHJBdWp1M3BvR1pETkFibTdEdTVEQ3dZUjN5Cjk0QTNKSy9DVUMycTBpS0tuSlNyYWFDMnNyTlc1TncwcmM0TUY4dm55V3h6b1pGam1DcWFtc2w4QlQwUGRqSDgKU1B5ZXdZRHFNUEFoSFR4eGxIYnlXSVJnZmlNUkZ0V3BTcVJkSFdFRHZzNkJJUUZzd3RMR1dZalpnZGFPTGErbgpEZFlVKytJdVYwNndwTGRSZG5uV1VvTVE5VkpyZmdQakVCcEpVaFEyVEtMM2xVcUJMSTRZNjQvUDlHMzA4YzR1Cm9Ic3NkSW1RYnZRM0VMcmhPOTBISlpWV3JUTmFnRjVqNk1tNHlhN3dBTHFCUWgyUXZLdml5OU9CeENnS01PNlQKSkUwWnFENEJBb0dCQU1Wa1pBV0cvR1FtMTh4MXpFNGxuVTZqV0w2NFAxSm00NWhhR0Nibm80R1BScjRieGtLSAppc25uL2ZEOXQ5WldMZkU0SGFSdUpoaVRkOUJSVzV0d2VmREs4Y3N1UGhSZmlCOElvZnR4UFBjNHBhQUMxWmxTClB1b3JJck1hOWZZM0gvKzBOWkpoWDlhODExY1NFa3BrWGJ5TXU5VzJqSkI5eEozdGM3anhmaFB4QW9HQkFQNlkKc1gvNXQ1UzE1aTNrdk9ZcmNvVW5zbmdDM2lpaUhJbmpSdzkxdURaNTNjWGMyR1AxV3kzTlJXbmhlL2plL01UWApiRjJqUGs1ckY3c1lpTlhEZndid1hpVkhITnFpVlg0SzFPSk1KeUZicnBkK3I2VmhMKzVpUklmd0granZoV2p4CkFuRkZKM3JMbTQ0MDBSTy90OE9aaFg0cWNGRXE3R2JoWjNjeU1qMTlBb0dBTWk1OGN4OUhDTnNMSDVLTzl3cisKKzkveERzTmViYjkwZXVYa24vZGhqTzEweVozY0FFdmZEOGRudXAxMTRBcVdzVzFYczliQTNweVc2Q0hXelNTQwpDNkk4YURBQVhrT1BJbnlhV1ljSFBiNXI5TXJqckkvSktOVUFoRklGVjZ2WitiTEJyODRMaEZjTDA3bm5abnd2CmpHQ20zQVVGcFRJa0N4WXp4aisya3JFQ2dZQVFjYnBkUXJyWnp4bnI4dTlFaXAvZCs5OXFJdjFJY0pnWlMrWEcKR050cUlWcnlzYjRFVHMreDJLVllIbWxNZk5La3dDbE9yd0dTUFJhT1RocGdmRDBUTEtsWURRelBEbGNwU2ZmUQpHZzBZK1h3QWF2MWJXRGlwVkEyTEhqWmhiRDhZdFNCc1FvUTNTVGxsNlFGc0hpRDNjRTRRQlJ1MkVtaXNpSGlQCldWMm5YUUtCZ0dlTnJHL0t4TFY4eHRKOTRqMUVGaUJzQ0NhT20xUjBOVVhRUDlBUlh3VTErdlFncVFJUXJyQW4KR0l5MmRuTUdkWWlzWFZNTzZVcWxxWEpBa0FJZ3hqMjhHNnlPaU1sZVpnRnhTTk45eXJpUnFXUHAzRVdseUY3UwpvbzBvSDFhcUZsekF1OHFUdDNhV3kyMHRxeXlTa2J0eEU5U3VsTi9TWFJUK1hqZVh2UEc2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/machine-config-server.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lJWUhxcWNxT3MrV0V3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTjFvd0hURWJNQmtHQTFVRUF4TVNaVzUyTVMxaGNHa3VjbUZtWm1FdWVIbDZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4RTlYdGZXNE5RT2xLZ05wYVVOZmFIZXIKMU5NZGNIZXlOSEt3akdoUUliMlhpcFQySnViNEtvYzNuNUZpRENNd1MxbFJoZHpyKzExVHRWNzk0dkpIWmZwdApmakgreFdGNWhGVVE1WXdabmlweXhkdW1ZNG83eXMxVlVmZUZienliaUxqQ0lQKzRGUmJDZDM2RmpaNVhrSDRpCmxkM0ZJUjJtTzI4NVhxR3VhZXhLNzhNYlR1c0sraHBBT0dMYWI5N3M4ZHFxOEhTK09TSWcrWm5zQzZRd2h0aHIKa3g3ckJtaGJrSmxOUGh3MnpCVXJjR1JQK2w5dEk4aXplVW5ieUU5NS9SUXZLVlBzWHNVN05RalN1WDhPSXNlYwpYa21qWGRnUkxrdGp2eDgwRncydFkydVZFaGd4MG1MZWJYeFArUitxWGdMOWJXODZGNnp6UUpsazdHSXByUUlECkFRQUJvNEdGTUlHQ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWUQKVlIwT0JCWUVGSE5UZVBVQ3ZDQ3J0SktqSitZRDIzODk1VkdFTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcgp0SktqSitZRDIzODk1VkdFTUIwR0ExVWRFUVFXTUJTQ0VtVnVkakV0WVhCcExuSmhabVpoTG5oNWVqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBam5ydTdxSXJtTHlMZzl6TTJMT21jOUJEMEJJZzVsSjYzenJZanUrNERCQ3gKK1dJM3ZsWHdMS2htYzk1eDFVbW8zd3ZhdEJCeDRMcFBhem1mU0ljY0FiZ0NTNkdybkhpZ1Ruc1U4NjhPNExuMworYU43TXMxTXl1eGtlSFF3c3F3S1h2dnVWenk0ZXpST2NZeGFHb1F4bDE2dCtYYlk5Z05NNkhxbFBPZ1FzOFhlCnprR0huNEZtcVlsYTdocllCT2xLakM3d2Vna2RzRmRQKzFlM2dVaUpaVnNTSGhFUmhicEUvaHRSMkJXaklIQlkKMjUyNFo0SHNrbW14aHBnY1pwZUhVQ2QwM0ZHN1JmRWxGZDBUVGVBVERIaVhlMnNKai91WTc2eFVjNkNuK2FkQQorMXZ5bS93WHpUQUhDQ2xWVEVYTzVWZjltUFk2RXlBM1F0ckZjTXhiMnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/service-account.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeC9NWDVIMm5sSUZYVlI1U0FwaHgzaDFQTzk3Rm5ScnNRY2dKR2VwcEYzMDBtVXMxCjROOEdTL0drVkxuOXNzZUREbkhkNGlvb0lZalZnTVBDbFR1K0puck1XSTR2czgxdWpuQzdydTI0TG9Rcy9SS1MKQnF3WldGcDVOeXQzdUtxOG91SmFyaTlSejB3UFRxLzYzQkNqTG9SRXVidE05S2NlQ21maUVsc2YvTUJ1R3pYUgpKeVdPNlZnbTJJcmZWcjJWY1A1TXJOZDdVc3FSeXRueEc2OVFiOFA0MUZ4R1RUMFJnWXMwT1NoN1p3SDRRZEJICitFcmFZODQ2b2oxekVyTUtxUTJoa2NhMm5HYlNQTUhROXplazVCTTRYMldHOGIvRWY5OHlyK0pvVDFyMmYwZEsKdDhvSHdRT1M4RngxNGo3Y092WHBjUFgyYUFrYzlEVUxadjRJMHdJREFRQUJBb0lCQVFDc1I5VEtWMHBSTnJDYwo4cWNPL1hML1FwbkdxRWYwK2dHZkhGQmJPQktjM3BDM2xJb3oyM1o5Y1JONnZWYk8rQUVBTFRSVmJxVnRYNDAyCmlYWGJSOEtyUFJ0ZElnWVFFbTJ6NVlhUlR0cG5taE41YXNyUFhQSHBvdXJXa21seGdBdFEvVi9NdlpEcjRFbEEKTDNraXJHTXQ3V0daOXJ4MEFKcHR0TnlobkVxUFoyYk5jYmgrb2NVM1pFS09halJabVZxVGdqR0g3T2dKSmNOcgpJYmhvMk1rb0V6bmRxR0g1RG8xTysyTlI2Q1BlWjhkRUI4YkFmakhLZnpSYjhkbzVQeXZOU3JOZ3dPdXVuYXVZCm1CTnl1ZS9HWHhWaFMwNkxqVm83QWRUWng1cUFQenZBcUh5aXFsY2ZjN1NHbzVhUThoMHo2bUpTS2VWakdTdXIKeWd0L2dCN0JBb0dCQVBqeHJnYXZOb0dlT05aa29EZUhBNjZyb1BBVWFKL2NVZTBtcFQvd2l4djBKT2hya3QwQwpsQXBLbUVwT01ISFFzRnRsOGgrdkxRTVd3VUdWREJKelMwZzVXeUt5bk91cjNIVmdvTWpicU11UGZFdnhVa2VhCjc1ZGhTNWFYak96Ylc3QXNIVTlkUDQ1U2NCcjRzWnZwK1E2TVRpV0loVkxFejluNjQ1eXlERE9aQW9HQkFNMmQKNmNMUWRGdGJFdDJLNkVSMGlqVXlnci9vR245UVU3T0dpSDM3ZGhiK0t0NmxLZEJ1cDNuZXVSZHlaYlJ2aksrdQoyRkxkQ0Z3Y3lvalNzejZXeEdKU3VjT3MyNVAreFFqc3VTaXpQbmVNczZyV1JWNzRZNWxUQ2RoYlRTT2w3a2h5CmNjQkNIbXhDSnhTd3ZvRGZ6bjB4a1ZkZlhPU2s0V09YeU9kUFpTTkxBb0dBR1RBaTRveEI0SldJdkxDTHdYS0kKdmRpaHZRamptU0Vxck9zWEYwUVlYeWl4djA1N0dwK1RLUU5wSzBPRUJWQVBPQUExb2wwUUdkcm9qT0V1eW9NZAozOTNseWJuMnhLV3I5YmhrTEU2RllxdE84VVFtaGhZNEhjSDdhdTVFbFFhUTNWOXBTOGxzajlMcGd1RWMzMkNxCkVYM0N2bXQweWU0ZDliazc1SFBqWmlrQ2dZQjU3ZTJqLzljd0lXYWpoMjdLd1V6LzFNOGlHL0l5a3lDL2NjVFkKNkZnVHRHOFpqbG1vWnlYYktBOGNiMU1PVjZQV3ZsazdjaVUxOGtETU9CM2d2S2tDSVVwVlZkanovdjA2bUo0SQpHNXFzYS94VER6TWQ2Uyt1eVVZcVRhSUZ4S3p6dXlIblA0NG81bVdrYUZiZnQxZ01kMnRYbzQ1RGE5N1lIemNjCnE4RXUxd0tCZ0NINmEzS3Y5MWVqaTlseTc0MzU1bGdGOWtGdS90eXMwN1A0VU16QmF5UHYrNXI3SHJDb05pTWIKbVZGZmpZRHhYNGFnV2thQkc3bW9oVDh5ZlNuTFhLb1RveHJvUTQ3L0tySzVZRGdGT2p2cE4rWHVhYnNCRnQ4cgpKa1piTHhZbTJLYzJJUXNOKzBhY0RNcnFVQjUvVk13YWw3VGJNZU9nUXZKQklNc1pTZEwzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/service-account.pub",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeC9NWDVIMm5sSUZYVlI1U0FwaHgKM2gxUE85N0ZuUnJzUWNnSkdlcHBGMzAwbVVzMTROOEdTL0drVkxuOXNzZUREbkhkNGlvb0lZalZnTVBDbFR1KwpKbnJNV0k0dnM4MXVqbkM3cnUyNExvUXMvUktTQnF3WldGcDVOeXQzdUtxOG91SmFyaTlSejB3UFRxLzYzQkNqCkxvUkV1YnRNOUtjZUNtZmlFbHNmL01CdUd6WFJKeVdPNlZnbTJJcmZWcjJWY1A1TXJOZDdVc3FSeXRueEc2OVEKYjhQNDFGeEdUVDBSZ1lzME9TaDdad0g0UWRCSCtFcmFZODQ2b2oxekVyTUtxUTJoa2NhMm5HYlNQTUhROXplawo1Qk00WDJXRzhiL0VmOTh5citKb1QxcjJmMGRLdDhvSHdRT1M4RngxNGo3Y092WHBjUFgyYUFrYzlEVUxadjRJCjB3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    }
                ]
            },
            "systemd": {
                "units": [
                    {
                        "contents": "[Unit]\nDescription=Bootstrap a Kubernetes cluster\nWants=kubelet.service\nAfter=kubelet.service\nConditionPathExists=!/opt/openshift/.bootkube.done\n\n[Service]\nWorkingDirectory=/opt/openshift\nExecStart=/usr/local/bin/bootkube.sh\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "bootkube.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service\n\n[Service]\nType=notify\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nEnvironment=KUBELET_RUNTIME_REQUEST_TIMEOUT=10m\nEnvironmentFile=-/etc/kubernetes/kubelet-env\n\nExecStart=/usr/bin/hyperkube \\\n  kubelet \\\n    --container-runtime=remote \\\n    --container-runtime-endpoint=/var/run/crio/crio.sock \\\n    --runtime-request-timeout=${KUBELET_RUNTIME_REQUEST_TIMEOUT} \\\n    --pod-manifest-path=/etc/kubernetes/manifests \\\n    --allow-privileged \\\n    --minimum-container-ttl-duration=6m0s \\\n    --cluster-domain=cluster.local \\\n    --cgroup-driver=systemd \\\n    --serialize-image-pulls=false \\\n    --v=2 \\\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "kubelet.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Bootstrap an OpenShift cluster\nWants=bootkube.service\nAfter=bootkube.service\nConditionPathExists=!/opt/openshift/.openshift.done\n\n[Service]\nWorkingDirectory=/opt/openshift/openshift\nExecStart=/usr/local/bin/openshift.sh /opt/openshift/auth/kubeconfig\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "openshift.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Report the completion of the cluster bootstrap process\n# Workaround for https://github.com/systemd/systemd/issues/1312\nWants=bootkube.service openshift.service\nAfter=bootkube.service openshift.service\n\n[Service]\n# Workaround for https://github.com/systemd/systemd/issues/1312 and https://github.com/opencontainers/runc/pull/1807\nExecStartPre=/usr/bin/test -f /opt/openshift/.bootkube.done\nExecStartPre=/usr/bin/test -f /opt/openshift/.openshift.done\nExecStart=/usr/local/bin/report-progress.sh /opt/openshift/auth/kubeconfig bootstrap-complete \"cluster bootstrapping has completed\"\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "progress.service"
                    }
                ]
            }
        },
        "File": {
            "Filename": "bootstrap.ign",
            "Data": ""
        }
    },
    "*cluster.Cluster": {
        "FileList": [
            {
                "Filename": "terraform.tfstate",
                "Data": ""
            },
            {
                "Filename": "metadata.json",
                "Data": "eyJjbHVzdGVyTmFtZSI6ImVudjEiLCJhd3MiOnsicmVnaW9uIjoidXMtZWFzdC0xIiwiaWRlbnRpZmllciI6W3sib3BlbnNoaWZ0Q2x1c3RlcklEIjoiYjM3OWNjYzUtNmQ4NS00OWI2LTljZTctMjYwMzVmY2U3NzA5In0seyJrdWJlcm5ldGVzLmlvL2NsdXN0ZXIvZW52MSI6Im93bmVkIn1dfX0="
            },
            {
                "Filename": "auth/kubeadmin-password",
                "Data": "aUFzdVQtQVJzM3UtRVVhaTktZFBGb2c="
            }
        ]
    },
    "*cluster.TerraformVariables": {
        "File": {
            "Filename": "terraform.tfvars",
            "Data": ""
        }
    },
    "*installconfig.InstallConfig": {
        "config": {
            "metadata": {
                "name": "env1",
                "creationTimestamp": null
            },
            "clusterID": "b379ccc5-6d85-49b6-9ce7-26035fce7709",
            "sshKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDtty9+Qton+j31GmZGakLqlk4tPuo/MFnWI9bYKXUhxc2w0AA99mw0KbO4VTP0Y5LeEbXE0aCls13TseH2CtoFUhnDSxxWM9aW9C4vXDMfd1buTPaDJMLaKOtynzu34Hkm7P7wnArw3Yr9mWoeTgTRWg38XiyKeh9z51L/TQden7NW2znaQCav8QWZGLm0LyiJWjMif5AqPBYee/EA3cugjU7ZFpCRvpxCarjCT+3jAAV702IynYsqBf+4mD7UBG5GU7zbmYJtmXIzcgBge9vyfSKhhXvioKkT9Y4NB+qBg9dJ0LJKaU+zIzHqwF7T07i3nQwnBG885amDyRHPDAdj rspazzol\n",
            "baseDomain": "raffa.xyz",
            "networking": {
                "type": "OpenshiftSDN",
                "serviceCIDR": "172.30.0.0/16",
                "clusterNetworks": [
                    {
                        "cidr": "10.128.0.0/14",
                        "hostSubnetLength": 9
                    }
                ]
            },
            "machines": [
                {
                    "name": "master",
                    "replicas": 1,
                    "platform": {}
                },
                {
                    "name": "worker",
                    "replicas": 2,
                    "platform": {}
                }
            ],
            "platform": {
                "aws": {
                    "region": "us-east-1",
                    "vpcCIDRBlock": "10.0.0.0/16"
                }
            },
            "pullSecret": "{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3Jobmdwc3JzcGF6em9sMWViZ2NzYWxjcW96cnVpbGlsMHRja3Jkbm54Ok5CWjBSSzJLNEhDTjNUN0MzWUlHMVFGTUtYVzNVVk5WSExQWUdCMUxCN1JKMkxTS1ZCTkFYSjZCNDhWMDdEOTI=\",\"email\":\"rspazzol@redhat.com\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3Jobmdwc3JzcGF6em9sMWViZ2NzYWxjcW96cnVpbGlsMHRja3Jkbm54Ok5CWjBSSzJLNEhDTjNUN0MzWUlHMVFGTUtYVzNVVk5WSExQWUdCMUxCN1JKMkxTS1ZCTkFYSjZCNDhWMDdEOTI=\",\"email\":\"rspazzol@redhat.com\"}}}"
        },
        "file": {
            "Filename": "install-config.yaml",
            "Data": "YmFzZURvbWFpbjogcmFmZmEueHl6CmNsdXN0ZXJJRDogYjM3OWNjYzUtNmQ4NS00OWI2LTljZTctMjYwMzVmY2U3NzA5Cm1hY2hpbmVzOgotIG5hbWU6IG1hc3RlcgogIHBsYXRmb3JtOiB7fQogIHJlcGxpY2FzOiAxCi0gbmFtZTogd29ya2VyCiAgcGxhdGZvcm06IHt9CiAgcmVwbGljYXM6IDIKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBlbnYxCm5ldHdvcmtpbmc6CiAgY2x1c3Rlck5ldHdvcmtzOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFN1Ym5ldExlbmd0aDogOQogIHNlcnZpY2VDSURSOiAxNzIuMzAuMC4wLzE2CiAgdHlwZTogT3BlbnNoaWZ0U0ROCnBsYXRmb3JtOgogIGF3czoKICAgIHJlZ2lvbjogdXMtZWFzdC0xCiAgICB2cGNDSURSQmxvY2s6IDEwLjAuMC4wLzE2CnB1bGxTZWNyZXQ6ICd7ImF1dGhzIjp7ImNsb3VkLm9wZW5zaGlmdC5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLM0pvYm1kd2MzSnpjR0Y2ZW05c01XVmlaMk56WVd4amNXOTZjblZwYkdsc01IUmphM0prYm01NE9rNUNXakJTU3pKTE5FaERUak5VTjBNeldVbEhNVkZHVFV0WVZ6TlZWazVXU0V4UVdVZENNVXhDTjFKS01reFRTMVpDVGtGWVNqWkNORGhXTURkRU9UST0iLCJlbWFpbCI6InJzcGF6em9sQHJlZGhhdC5jb20ifSwicXVheS5pbyI6eyJhdXRoIjoiYjNCbGJuTm9hV1owTFhKbGJHVmhjMlV0WkdWMkszSm9ibWR3YzNKemNHRjZlbTlzTVdWaVoyTnpZV3hqY1c5NmNuVnBiR2xzTUhSamEzSmtibTU0T2s1Q1dqQlNTekpMTkVoRFRqTlVOME16V1VsSE1WRkdUVXRZVnpOVlZrNVdTRXhRV1VkQ01VeENOMUpLTWt4VFMxWkNUa0ZZU2paQ05EaFdNRGRFT1RJPSIsImVtYWlsIjoicnNwYXp6b2xAcmVkaGF0LmNvbSJ9fX0nCnNzaEtleTogfAogIHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQkFRRHR0eTkrUXRvbitqMzFHbVpHYWtMcWxrNHRQdW8vTUZuV0k5YllLWFVoeGMydzBBQTk5bXcwS2JPNFZUUDBZNUxlRWJYRTBhQ2xzMTNUc2VIMkN0b0ZVaG5EU3h4V005YVc5QzR2WERNZmQxYnVUUGFESk1MYUtPdHluenUzNEhrbTdQN3duQXJ3M1lyOW1Xb2VUZ1RSV2czOFhpeUtlaDl6NTFML1RRZGVuN05XMnpuYVFDYXY4UVdaR0xtMEx5aUpXak1pZjVBcVBCWWVlL0VBM2N1Z2pVN1pGcENSdnB4Q2FyakNUKzNqQUFWNzAySXluWXNxQmYrNG1EN1VCRzVHVTd6Ym1ZSnRtWEl6Y2dCZ2U5dnlmU0toaFh2aW9La1Q5WTROQitxQmc5ZEowTEpLYVUrekl6SHF3RjdUMDdpM25Rd25CRzg4NWFtRHlSSFBEQWRqIHJzcGF6em9sCg=="
        }
    },
    "*installconfig.baseDomain": {
        "BaseDomain": "raffa.xyz"
    },
    "*installconfig.clusterID": {
        "ClusterID": "b379ccc5-6d85-49b6-9ce7-26035fce7709"
    },
    "*installconfig.clusterName": {
        "ClusterName": "env1"
    },
    "*installconfig.platform": {
        "aws": {
            "region": "us-east-1",
            "vpcCIDRBlock": "10.0.0.0/16"
        }
    },
    "*installconfig.pullSecret": {
        "PullSecret": "{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3Jobmdwc3JzcGF6em9sMWViZ2NzYWxjcW96cnVpbGlsMHRja3Jkbm54Ok5CWjBSSzJLNEhDTjNUN0MzWUlHMVFGTUtYVzNVVk5WSExQWUdCMUxCN1JKMkxTS1ZCTkFYSjZCNDhWMDdEOTI=\",\"email\":\"rspazzol@redhat.com\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3Jobmdwc3JzcGF6em9sMWViZ2NzYWxjcW96cnVpbGlsMHRja3Jkbm54Ok5CWjBSSzJLNEhDTjNUN0MzWUlHMVFGTUtYVzNVVk5WSExQWUdCMUxCN1JKMkxTS1ZCTkFYSjZCNDhWMDdEOTI=\",\"email\":\"rspazzol@redhat.com\"}}}"
    },
    "*installconfig.sshPublicKey": {
        "Key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDtty9+Qton+j31GmZGakLqlk4tPuo/MFnWI9bYKXUhxc2w0AA99mw0KbO4VTP0Y5LeEbXE0aCls13TseH2CtoFUhnDSxxWM9aW9C4vXDMfd1buTPaDJMLaKOtynzu34Hkm7P7wnArw3Yr9mWoeTgTRWg38XiyKeh9z51L/TQden7NW2znaQCav8QWZGLm0LyiJWjMif5AqPBYee/EA3cugjU7ZFpCRvpxCarjCT+3jAAV702IynYsqBf+4mD7UBG5GU7zbmYJtmXIzcgBge9vyfSKhhXvioKkT9Y4NB+qBg9dJ0LJKaU+zIzHqwF7T07i3nQwnBG885amDyRHPDAdj rspazzol\n"
    },
    "*kubeconfig.Admin": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "env1",
                    "cluster": {
                        "server": "https://env1-api.raffa.xyz:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1qSTRNVGswTlRRMFdoY05Namd4TWpJMQpNVGswTlRRMFdqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKNGJuaEZ3ZWZFblZUOG5IbWhUWWhrQU1TNVU5Nis4ZUF0V2cwYm1TaU80OVpmZWxVMXJjdzc1dXY3RFkvNiszcAovSjFoRVZZeXYyd0pNYUR2TjdPUHVQejNzSlArQ2YwSm9ZNjNzQXY1NlB6SXRGT3RiemtON1RqTzU1ckZGNGlYCm9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KWWp2dWt4NmZZNmJhQXhDS3BudjRKbVF4RDBIZnhkcmU0dWs2MXo0d1pNWkc0THVjdDJMNml1WGRWVDZBRm50UApvUVpiZGhSOUU4QnBDRGFxdHl1ZGhodjhad2NJVUhFeXgxY0xDMi9hNEErNlJBbS9McS9yckJjMENjbjBFM01oCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3pBbwp6RHl1aWdHTDZ4SCtGbi9ZS1FTc3pJd1paREJ6ajZkbXlyTlJPU1g5Ujl6bDRYTmFSb3ZPdjNkL291aVBUL1dSCng0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKZTFMbFk3Y1RJQXo1YVEvWGM0dktGbGpVM0hJVmYwVFAyOE85MlhmVmRleFI2c214d2lOYVd1RlE5MENTT09HVgpOSXVpZmFQUHFpaXlyOFdqaExoNTlXZnk0WEZ3R2J5Y3lxOVcwZjRyRUJSdFQrMTdsTEE2bnlpVk1jUUtZaGIxCk5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KZmJGNDFOWllQVkxpVFpjdVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "admin",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRVRFeitlMmZxT1F3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEyV2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvNk81VXptbVN2ZGIvbWtDQgp0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUwUW5KVXIwR3lOUWRMOUlrCjR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NTBDS0ptbllOOEZWRHJZWVIKY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLRnZTVG1qNmdXMlc3OHB0Sgo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHdjT2FvclFqc3BLcEQwaVZQCmxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGSUkycEVPLzFSRjJnMjdHWUY1bkJzNm5SeVQrTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcnRKS2pKK1lECjIzODk1VkdFTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYytEUmdvOVZMUW5yWVV4bm02Z0UrajZBcXJyYjYKVFBUNzQ5bjNVZVVrMG42d3l6U2VEVTNSOFhrQ2tjenJyZjZqSzJKSHl4YWRVS1Mrc1JmTFhRMUFDdjdZdUNZago2UldPMHFCcEpDeFMvZ2laTTNFL0N1KzRYMmhoYU1JdWVSMWtaeWhORDhyOXA0N3h0M3MvVnBYaEs5MTR3U1FWCmJ6N0wwWnJLYzNjNlFTYTFscVRzYXE4NU9pVXFUaWcwTGNMZmNqY0JTb1ZFV0FCa1AwSXgxMzhYdnJmVCsxUUwKeXV0RC9IS1BYWTMzVWxkMkVLdzZMbzhzR2dzQXBQejU1UUdoMGpLajZheWRQUE1HbmNjS2V0SjdJR0pPL3Mxagp0Y3RpbllFcC85d0YvZ2VFbVlPTHNEKzc3S3hQcUtySFFZQi8xeUs2dGxXcVErWW9sclNQQjM0cwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvCjZPNVV6bW1TdmRiL21rQ0J0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUKMFFuSlVyMEd5TlFkTDlJazR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NQowQ0tKbW5ZTjhGVkRyWVlSY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLCkZ2U1RtajZnVzJXNzhwdEo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHcKY09hb3JRanNwS3BEMGlWUGxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJBb0lCQUh2YUFndnFjZDM1dk5xOAp6Z0I2YWxydGxiRWIwM2JEZzJzbEZ5UHBGd1lmL3ZDSDJBenNJRDlMUEZNTmVKKy85VWorc2U4SDRHeUpZQWRyCnllK2RoNEVENkc0dWIrbFYxN0VJM2xRcXN2WUtGUExRV2hCd0xWdHpiZUF6bjk2RmxtVFJNU2lDTWVHVzNpNEkKN09ERlJUQ2hFeS95SGtybDFiWTdLcitSdmNuTFIrK2t4UnVCNUwyamJueGw3WGhlSnJqM1dKRG1GYnBtZVJVdwpnc2lENnZPZmhZanRIOFNQY2FTaGpFbHpleG1lV2dEYUlWNjMvVGF1WmtudzVSM2lCUjZEcmlyK3pEV3gzMkFYCjJ4bVhONHFkR0FDWnpzK0Noemc4c1BLWDk5bnQ5Zld0cm92UTJ3TWVtY1FWN2VkbWcwTjVxajNYNU5UU2dpN00KTVhNQkcvRUNnWUVBenB6VVNNZkZwYkQvYUUwL1B3YUgvSTV2YlFudVhsdlVWakFqRnFQb2UxWXY2cmFmMk1jMAo1UzBVWGxtbzVaRzdXWllvMW1la0dVdW91U3NsU3J4ZS9oZWlPcDhEUE9tRVZSNHQwRGVqR092SGFhdEpWMC9rCnh5SUNRMzAvRy8zWXBuUEE2STcyaGhOanVRSUVSRnI4cy9oSjIyK1Q1QzdnUFpHTSs2T0lEKzhDZ1lFQStMYzAKWlhCWmNkU1liYXdTeWtxV2RqR1pBaGcrR2RBZi82akNNTmF4dTk3dW5mN2kwWEhPTHBqS3VnVksydncwaGswRwp2OTk0MGJ2VjZucDdRQjNOcVhuZjM2N0hLMnZGdTN6cC9GeDdheTJ4ZmQxM1RJYlpYSFVZVTErVTJtZjdtN2tTCm15aEVOOWplZXBuMjJFRnJKSEtDZDc0Yjc4UGw3eXFrd2F4OHYxc0NnWUVBemdoVUpMT2FJODFxRkUrYnR6VEQKSEpYSkJabjJxdisxc2JEVS9MbThsbWx1NVFieVJaRDQ3V1JUd0haMlYxOUl6V0JSSHVWQkhieDE1eGpnV2pPWQpJcGZjdmNwZHh6c3lMRk1vNms3aEJIUHlhaXhWdVl6QkhkYUxIVlBqUC8yV012NlJLeGVOUEV4UGtHa3phaHExCmpwNFV3STcya29Bd094Vk8yb3pMbk44Q2dZRUFxSEpjR0QrcE5JRUo0MjFoSklTenRzVU1uZkNSVHFZNHBjeEUKQ1JPL09FQmFWOE5qRnZyKzYyd3NFU1M0ZCt2TUh4RlgrdWQ5U243dStHbVB3L0xyY1ZiTG14RWliM1FFYldEQwprRnFLZENKMFRZeUsyZGVTcXgzYkpjeGNZamQrbnc4UFhPbyttWnhWd2E4NUVXbnRDTGhOU0pBSEY3SVRycEd4CkdFS2NFblVDZ1lBNG5Ub2hzbEpKTStkTUN6TFZYRHFEYmtpeVFNWUhVN2hhQ1h1Zm9PWHR2NG10RHNMY2VDUlgKREsyclBQMmpMT2lXOGcydVM2M3lQMkRrVFNqQUhqU21zeVJrOHpqVllYaFFCcXNUWTJTS1o5b1Zvbmd0cmFITQpEcUJRZlZ2K0tSYnh2RDdKRXMzVnNzTFliVkpQdUw0Q0JTMnIxMXlHNmF0K25wcytVZER6bWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "admin",
                    "context": {
                        "cluster": "env1",
                        "user": "admin"
                    }
                }
            ],
            "current-context": "admin"
        },
        "File": {
            "Filename": "auth/kubeconfig",
            "Data": "Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMXFTVFJOVkdzd1RsUlJNRmRvWTA1TmFtZDRUV3BKTVFwTlZHc3dUbFJSTUZkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGVGbHFVRFZTV2pCQmFXcHhMM3BaZG5OcWVGWUtOR0p1YUVaM1pXWkZibFpVT0c1SWJXaFVXV2hyUVUxVE5WVTVOaXM0WlVGMFYyY3dZbTFUYVU4ME9WcG1aV3hWTVhKamR6YzFkWFkzUkZrdk5pc3pjQW92U2pGb1JWWlplWFl5ZDBwTllVUjJUamRQVUhWUWVqTnpTbEFyUTJZd1NtOVpOak56UVhZMU5sQjZTWFJHVDNSaWVtdE9OMVJxVHpVMWNrWkdOR2xZQ205a1NYVXhVRTAyZERKbVpFMXFPR1ZXVEhSM1Z6aEZUMXAwWkVNMVdtNXpOV1ZGVTFaeWQyNU1aVW9yV2tselUyVk9XRGRKUkhKMFlXZFViVTQxUnk4S1dXcDJkV3Q0Tm1aWk5tSmhRWGhEUzNCdWRqUktiVkY0UkRCSVpuaGtjbVUwZFdzMk1YbzBkMXBOV2tjMFRIVmpkREpNTm1sMVdHUldWRFpCUm01MFVBcHZVVnBpWkdoU09VVTRRbkJEUkdGeGRIbDFaR2hvZGpoYWQyTkpWVWhGZVhneFkweERNaTloTkVFck5sSkJiUzlNY1M5eWNrSmpNRU5qYmpCRk0wMW9Da0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTDFCbFZsSm9SRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJVM3BCYndwNlJIbDFhV2RIVERaNFNDdEdiaTlaUzFGVGMzcEpkMXBhUkVKNmFqWmtiWGx5VGxKUFUxZzVVamw2YkRSWVRtRlNiM1pQZGpOa0wyOTFhVkJVTDFkU0NuZzBjV0ZTYzFKUFdEWllXbFpvVmxaUFVqWlVWSFZ0VTNWallVNVZSelpvTURkblJFdG9UazE2YXpBMmRrdEZOR3hsWldneWNqUnVjVk4zTWtKa05EY0taVEZNYkZrM1kxUkpRWG8xWVZFdldHTTBka3RHYkdwVk0waEpWbVl3VkZBeU9FODVNbGhtVm1SbGVGSTJjMjE0ZDJsT1lWZDFSbEU1TUVOVFQwOUhWZ3BPU1hWcFptRlFVSEZwYVhseU9GZHFhRXhvTlRsWFpuazBXRVozUjJKNVkzbHhPVmN3WmpSeVJVSlNkRlFyTVRkc1RFRTJibmxwVmsxalVVdFphR0l4Q2s1RFZFdG1NakZXU2psTFptd3ZkVzB5VlcxQmNXZ3dOVXhLTmtwd2JXeHlUMHMxZGpKVlRtRmlaVFo0Y25SMk9GQnhkamhpWVM5bVFVVnhVRVJ1VkU0S1ptSkdOREZPV2xsUVZreHBWRnBqZFZoM1BUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9lbnYxLWFwaS5yYWZmYS54eXo6NjQ0MwogIG5hbWU6IGVudjEKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGVudjEKICAgIHVzZXI6IGFkbWluCiAgbmFtZTogYWRtaW4KY3VycmVudC1jb250ZXh0OiBhZG1pbgpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJXYWtORFFXbzJaMEYzU1VKQlowbEpSVlJGZWl0bE1tWnhUMUYzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS1ZFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVkVRVTlDWjA1V1FrRk5WRUl5ZERGWmJWVjBXVEpGZDBob1kwNU5WR2Q0VFdwSk5FMVVhekJPVkZFd1YyaGpUZ3BOYW1kNFRXcEpNVTFVYXpCT1ZGRXlWMnBCZDAxU1kzZEdVVmxFVmxGUlMwVjNOWHBsV0U0d1dsY3dObUpYUm5wa1IxWjVZM3BGVmsxQ1RVZEJNVlZGQ2tGNFRVMWpNMng2WkVkV2RFOXRSbXRpVjJ4MVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFS2VVeDJTME12Y3pWdVZuaFROREowTUZNM2FXNXlZa3BqVlhGeVJGaGFSRXRsTWtkM1dUQldOMk4zY0dwMWNXVXZOazgxVlhwdGJWTjJaR0l2Yld0RFFncDBlVk5RYmpSaWVYSnhWU3RGZG1SelpTczJabEl3Tnl0dWRFMXFiMUk1U1VaNGJGbFplQzluYld4emRtRlpTVVV3VVc1S1ZYSXdSM2xPVVdSTU9VbHJDalIzTVZaUFpGZzJUWGMzVVVwTVlrOXFXazFaUldRMGEwSkhUM0FyZUhvdk9IbFJXSGhYTTBSUWNrUklUMFoyTlRCRFMwcHRibGxPT0VaV1JISlpXVklLWTNsdFdIZzJOMEZ3ZFdSUmVEaE1jVVo2UzFkTE1rdGpkRGhHTlVJeVZ6WlpWSEZaZEU1c0szQkxUSGRJV0ZWTFJuWlRWRzFxTm1kWE1sYzNPSEIwU2dvMVpqVTFSemhIZHpacE5tVXhia3RQU0ZFclFtcGhiV3M0VjBOV1J6ZzVSMlZ3WVc5eU5tWnFhMXB0TVdOd1JIZGpUMkZ2Y2xGcWMzQkxjRVF3YVZaUUNteEVkbkI0ZFd0T1VFWlpTWEp3ZUVFNFVWUTJPVkZKUkVGUlFVSnZNemgzWmxSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQ1lVRjNTRkZaUkZaU01Hd0tRa0paZDBaQldVbExkMWxDUWxGVlNFRjNSVWREUTNOSFFWRlZSa0ozVFVOTlFYZEhRVEZWWkVWM1JVSXZkMUZEVFVGQmQwaFJXVVJXVWpCUFFrSlpSUXBHU1VreWNFVlBMekZTUmpKbk1qZEhXVVkxYmtKek5tNVNlVlFyVFVJNFIwRXhWV1JKZDFGWlRVSmhRVVpJVGxSbFVGVkRka05EY25SS1MycEtLMWxFQ2pJek9EazFWa2RGVFVFd1IwTlRjVWRUU1dJelJGRkZRa04zVlVGQk5FbENRVkZDWXl0RVVtZHZPVlpNVVc1eVdWVjRibTAyWjBVcmFqWkJjWEp5WWpZS1ZGQlVOelE1YmpOVlpWVnJNRzQyZDNsNlUyVkVWVE5TT0ZoclEydGplbkp5WmpacVN6SktTSGw0WVdSVlMxTXJjMUptVEZoUk1VRkRkamRaZFVOWmFnbzJVbGRQTUhGQ2NFcERlRk12WjJsYVRUTkZMME4xS3pSWU1taG9ZVTFKZFdWU01XdGFlV2hPUkRoeU9YQTBOM2gwTTNNdlZuQllhRXM1TVRSM1UxRldDbUo2TjB3d1duSkxZek5qTmxGVFlURnNjVlJ6WVhFNE5VOXBWWEZVYVdjd1RHTk1abU5xWTBKVGIxWkZWMEZDYTFBd1NYZ3hNemhZZG5KbVZDc3hVVXdLZVhWMFJDOUlTMUJZV1RNelZXeGtNa1ZMZHpaTWJ6aHpSMmR6UVhCUWVqVTFVVWRvTUdwTGFqWmhlV1JRVUUxSGJtTmpTMlYwU2pkSlIwcFBMM014YWdwMFkzUnBibGxGY0M4NWQwWXZaMlZGYlZsUFRITkVLemMzUzNoUWNVdHlTRkZaUWk4eGVVczJkR3hYY1ZFcldXOXNjbE5RUWpNMGN3b3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQmVVeDJTME12Y3pWdVZuaFROREowTUZNM2FXNXlZa3BqVlhGeVJGaGFSRXRsTWtkM1dUQldOMk4zY0dwMWNXVXZDalpQTlZWNmJXMVRkbVJpTDIxclEwSjBlVk5RYmpSaWVYSnhWU3RGZG1SelpTczJabEl3Tnl0dWRFMXFiMUk1U1VaNGJGbFplQzluYld4emRtRlpTVVVLTUZGdVNsVnlNRWQ1VGxGa1REbEphelIzTVZaUFpGZzJUWGMzVVVwTVlrOXFXazFaUldRMGEwSkhUM0FyZUhvdk9IbFJXSGhYTTBSUWNrUklUMFoyTlFvd1EwdEtiVzVaVGpoR1ZrUnlXVmxTWTNsdFdIZzJOMEZ3ZFdSUmVEaE1jVVo2UzFkTE1rdGpkRGhHTlVJeVZ6WlpWSEZaZEU1c0szQkxUSGRJV0ZWTENrWjJVMVJ0YWpablZ6SlhOemh3ZEVvMVpqVTFSemhIZHpacE5tVXhia3RQU0ZFclFtcGhiV3M0VjBOV1J6ZzVSMlZ3WVc5eU5tWnFhMXB0TVdOd1JIY0tZMDloYjNKUmFuTndTM0JFTUdsV1VHeEVkbkI0ZFd0T1VFWlpTWEp3ZUVFNFVWUTJPVkZKUkVGUlFVSkJiMGxDUVVoMllVRm5kbkZqWkRNMWRrNXhPQXA2WjBJMllXeHlkR3hpUldJd00ySkVaekp6YkVaNVVIQkdkMWxtTDNaRFNESkJlbk5KUkRsTVVFWk5UbVZLS3k4NVZXb3JjMlU0U0RSSGVVcFpRV1J5Q25sbEsyUm9ORVZFTmtjMGRXSXJiRll4TjBWSk0yeFJjWE4yV1V0R1VFeFJWMmhDZDB4V2RIcGlaVUY2YmprMlJteHRWRkpOVTJsRFRXVkhWek5wTkVrS04wOUVSbEpVUTJoRmVTOTVTR3R5YkRGaVdUZExjaXRTZG1OdVRGSXJLMnQ0VW5WQ05Vd3lhbUp1ZUd3M1dHaGxTbkpxTTFkS1JHMUdZbkJ0WlZKVmR3cG5jMmxFTm5aUFptaFphblJJT0ZOUVkyRlRhR3BGYkhwbGVHMWxWMmRFWVVsV05qTXZWR0YxV210dWR6VlNNMmxDVWpaRWNtbHlLM3BFVjNnek1rRllDako0YlZoT05IRmtSMEZEV25wekswTm9lbWM0YzFCTFdEazViblE1WmxkMGNtOTJVVEozVFdWdFkxRldOMlZrYldjd1RqVnhhak5ZTlU1VVUyZHBOMDBLVFZoTlFrY3ZSVU5uV1VWQmVuQjZWVk5OWmtad1lrUXZZVVV3TDFCM1lVZ3ZTVFYyWWxGdWRWaHNkbFZXYWtGcVJuRlFiMlV4V1hZMmNtRm1NazFqTUFvMVV6QlZXR3h0YnpWYVJ6ZFhXbGx2TVcxbGEwZFZkVzkxVTNOc1UzSjRaUzlvWldsUGNEaEVVRTl0UlZaU05IUXdSR1ZxUjA5MlNHRmhkRXBXTUM5ckNuaDVTVU5STXpBdlJ5OHpXWEJ1VUVFMlNUY3lhR2hPYW5WUlNVVlNSbkk0Y3k5b1NqSXlLMVExUXpkblVGcEhUU3MyVDBsRUt6aERaMWxGUVN0TVl6QUtXbGhDV21Oa1UxbGlZWGRUZVd0eFYyUnFSMXBCYUdjclIyUkJaaTgyYWtOTlRtRjRkVGszZFc1bU4ya3dXRWhQVEhCcVMzVm5Wa3N5ZG5jd2FHc3dSd3AyT1RrME1HSjJWalp1Y0RkUlFqTk9jVmh1WmpNMk4waExNblpHZFRONmNDOUdlRGRoZVRKNFptUXhNMVJKWWxwWVNGVlpWVEVyVlRKdFpqZHROMnRUQ20xNWFFVk9PV3BsWlhCdU1qSkZSbkpLU0V0RFpEYzBZamM0VUd3M2VYRnJkMkY0T0hZeGMwTm5XVVZCZW1kb1ZVcE1UMkZKT0RGeFJrVXJZblI2VkVRS1NFcFlTa0phYmpKeGRpc3hjMkpFVlM5TWJUaHNiV3gxTlZGaWVWSmFSRFEzVjFKVWQwaGFNbFl4T1VsNlYwSlNTSFZXUWtoaWVERTFlR3BuVjJwUFdRcEpjR1pqZG1Od1pIaDZjM2xNUmsxdk5tczNhRUpJVUhsaGFYaFdkVmw2UWtoa1lVeElWbEJxVUM4eVYwMTJObEpMZUdWT1VFVjRVR3RIYTNwaGFIRXhDbXB3TkZWM1NUY3lhMjlCZDA5NFZrOHliM3BNYms0NFEyZFpSVUZ4U0VwalIwUXJjRTVKUlVvME1qRm9Ta2xUZW5SelZVMXVaa05TVkhGWk5IQmplRVVLUTFKUEwwOUZRbUZXT0U1cVJuWnlLell5ZDNORlUxTTBaQ3QyVFVoNFJsZ3JkV1E1VTI0M2RTdEhiVkIzTDB4eVkxWmlURzE0UldsaU0xRkZZbGRFUXdwclJuRkxaRU5LTUZSWmVVc3laR1ZUY1hnellrcGplR05aYW1RcmJuYzRVRmhQYnl0dFduaFdkMkU0TlVWWGJuUkRUR2hPVTBwQlNFWTNTVlJ5Y0VkNENrZEZTMk5GYmxWRFoxbEJORzVVYjJoemJFcEtUU3RrVFVONlRGWllSSEZFWW10cGVWRk5XVWhWTjJoaFExaDFabTlQV0hSMk5HMTBSSE5NWTJWRFVsZ0tSRXN5Y2xCUU1tcE1UMmxYT0djeWRWTTJNM2xRTWtSclZGTnFRVWhxVTIxemVWSnJPSHBxVmxsWWFGRkNjWE5VV1RKVFMxbzViMVp2Ym1kMGNtRklUUXBFY1VKUlpsWjJLMHRTWW5oMlJEZEtSWE16Vm5OelRGbGlWa3BRZFV3MFEwSlRNbkl4TVhsSE5tRjBLMjV3Y3l0VlpFUjZiV2M5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K"
        }
    },
    "*kubeconfig.Kubelet": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "env1",
                    "cluster": {
                        "server": "https://env1-api.raffa.xyz:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1qSTRNVGswTlRRMFdoY05Namd4TWpJMQpNVGswTlRRMFdqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKNGJuaEZ3ZWZFblZUOG5IbWhUWWhrQU1TNVU5Nis4ZUF0V2cwYm1TaU80OVpmZWxVMXJjdzc1dXY3RFkvNiszcAovSjFoRVZZeXYyd0pNYUR2TjdPUHVQejNzSlArQ2YwSm9ZNjNzQXY1NlB6SXRGT3RiemtON1RqTzU1ckZGNGlYCm9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KWWp2dWt4NmZZNmJhQXhDS3BudjRKbVF4RDBIZnhkcmU0dWs2MXo0d1pNWkc0THVjdDJMNml1WGRWVDZBRm50UApvUVpiZGhSOUU4QnBDRGFxdHl1ZGhodjhad2NJVUhFeXgxY0xDMi9hNEErNlJBbS9McS9yckJjMENjbjBFM01oCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3pBbwp6RHl1aWdHTDZ4SCtGbi9ZS1FTc3pJd1paREJ6ajZkbXlyTlJPU1g5Ujl6bDRYTmFSb3ZPdjNkL291aVBUL1dSCng0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKZTFMbFk3Y1RJQXo1YVEvWGM0dktGbGpVM0hJVmYwVFAyOE85MlhmVmRleFI2c214d2lOYVd1RlE5MENTT09HVgpOSXVpZmFQUHFpaXlyOFdqaExoNTlXZnk0WEZ3R2J5Y3lxOVcwZjRyRUJSdFQrMTdsTEE2bnlpVk1jUUtZaGIxCk5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KZmJGNDFOWllQVkxpVFpjdVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "kubelet",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0RENDQXB5Z0F3SUJBZ0lJRmtRZDBLUVVQOEF3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNVGd4TWpJNE1qQXhOVFEyV2pDQmx6RkJNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwCmN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeFVqQlFCZ05WQkFNVFNYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1WlMxamIyNW1hV2N0YjNCbApjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDM0xJMlhYeGZKWHpXRjlOWXg1N1hLdTFGSUNNRXFwZ2hHbWVOODVJcUdJcTVTcXJ1RjFhYzUKZVp2UGJhNGZWdTFpMXN4T1dCOXBONFBRdnZUQkJoeWtWS282clVRYThvNUtWSWVHU1JtVlI2NDF4UjF5WVdCTwpMc0N6TEhzejNMVUliNDBaM0pqUms4Vjg5VWlvbloxeHJSM0JZQWlWN1p2SlkyQmU0bS9kUnBDcDJKa2oyMkwxCmt4WU0vTUh3UWV1ZnFZN2lsYVhhTmJQenZmR2ZscjhocnVDcW9DOTZUK0RpcWRFWkNjYjNBbktjdFZvcmVjdFcKbEJXSXc5aUhNdDU1NGF4OVoxOW9Zd3BzU3dPb0JPYjFPU0dNS1p3U3FMNFlua1EwOFpod3pOOVFDd25oVm1YagppTHBqclNHRHFuNjB0cjgyaTk4MUszSVlnUS9WK0orakFnTUJBQUdqZFRCek1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU0MKTnFSRHY5VVJkb051eG1CZVp3Yk9wMGNrL2pBZkJnTlZIU01FR0RBV2dCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0LwpQZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVpTQWMrZzZOTWFDWVdwYlltd1JrZWt6eVk4emREWHJnCkREVGxCcEZpbmVUOHgxLzdwdU1yaUphODQyQ2NHei9vdkh1cEN4aHB6cndsS2VTNDZ6azFsM3ozQXBpTDlCT1YKbFlUSXpSUld2OWZRZnZ1OTdmczducVJlN29MWUxiLzh0cmN1WEdrRE9nZ1ZoTy9OVUF5bmJoL1IyeUNGSGw3YgpmMW5nY1B2S3JzajRlbHdCclJnUUZQNnltMWN2R0Rnd3k2a1lOUzVZMnA1M0E1SGFBRXBDdVVXejhoRFFMVXNKCjBqTzl3eU0zOG5TVjhmeUpyc0x4Qmp3dGZpQVN0M2tYdVNERUlYWWllcWRrcW5QaFNBaXJ0SHBqL3V4Z0FhM0QKZWhUa0YxcDRVK0dUd1lFR2lId3BlekEvSENabUc3RGVxdXZ2SmdJNHlMV3QySmpneEZWT2xRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdHl5TmwxOFh5VjgxaGZUV01lZTF5cnRSU0FqQktxWUlScG5qZk9TS2hpS3VVcXE3CmhkV25PWG1iejIydUgxYnRZdGJNVGxnZmFUZUQwTDcwd1FZY3BGU3FPcTFFR3ZLT1NsU0hoa2tabFVldU5jVWQKY21GZ1RpN0FzeXg3TTl5MUNHK05HZHlZMFpQRmZQVklxSjJkY2EwZHdXQUlsZTJieVdOZ1h1SnYzVWFRcWRpWgpJOXRpOVpNV0RQekI4RUhybjZtTzRwV2wyald6ODczeG41YS9JYTdncXFBdmVrL2c0cW5SR1FuRzl3SnluTFZhCkszbkxWcFFWaU1QWWh6TGVlZUdzZldkZmFHTUtiRXNEcUFUbTlUa2hqQ21jRXFpK0dKNUVOUEdZY016ZlVBc0oKNFZabDQ0aTZZNjBoZzZwK3RMYS9Ob3ZmTlN0eUdJRVAxZmlmb3dJREFRQUJBb0lCQUhYRy9PZTJxaG05MFRGbgp3dzNsbWR0WDVDUjRGSlF5bTZHaHMwY0x3QklOWEo4a3pseDRpd1NHcit1STcydVJQaVBPVHlHVXdlV3FYMlFxClZEK0VpWWdVTkR4MFNoVTFuczRtV2RtN1NPcldZeXFKcXF4djlqZHZFbEppcUhrcFVYR3lJRHpmdlpjTDkvQ24KMm1jb3FTSjltR05OTjFnSHBxS3Y5amdzU3Bjd2dKSUIyVmdOdlU3dDhUb29LdHRYSkV2RnZkcGtVMktlRmNGbwpNSk1UZUZTQXdnWWNHOGlsVWc4WW81SWFWOXNHaW45UmEvOWdZYklIQkEvODZYR1lZaXdHTHpFSjllMG5tZ0tOCjRNV3NHMS9lRWl0RSt5UVdpa29yam5xTmUvY0hBQU5pLy9kcDJydVJaQ2pZajVvWUNod2FUWG02aXhKaEpCdmMKMU00alpIa0NnWUVBMFRkQXU3SERuMnVpOXlRWEhBcjA5cjc3QmJpZEIvNWYwLzBwR0Z5bThKV3YrWllVOUU0RApiMUt2eVBwaitPMjZHMWVvdi9TcEdCeWQzaTRrVmVMZXN3TDJkT3l0YUlMQlZTLy95Tk91QjU2Qmw0MXRHS0daClVFME5xdFByU1JBOE5ZbWV4QlFwQXE0dzhjMHJ3QUZMV2RsVVBWQm1uTTI3WTBXbUdwSTkxazhDZ1lFQTRDS0QKck50NzFNbkRCSndpcDRoc2l4cWphSTdTeHFkUnM3Y01URXh1a1d6VWFvS3QzQ3Z1OTZOWENDaGhiR052WlE0WQpGUjJDajdKUlowWk5TdjJaQzROUFZ3b0x2NEppbGhsNlc5T0RqSFN6ZXdyR3dPMTVqeVN4cko1SHluQWtWbFk5ClRiMDVuempYWjg5Q3ozV0g3KytGZDE3Z1pKVk52aHAxQ1o5ZG9HMENnWUFQTXQxZ0JVejUwdDcyNTBkS2dUMUUKZzZGR3pCK1VTaFY2R0FVWlFQbmJ0blFmUkpqbkdwZkRTWlY5bXpzU0JXc2t1MXlGL1djZldrelpyQzUxa3RLcwozSVU4LzBpbHRBSUpoMEFrdmNRQng3RVFhblRIZWszaCtJY0twdlNMelVNaWZJbnRJcTNNQlEySE0ybC9QRmpXCkFTVE9nMzNBM0cxRmkvVENMMmVRbndLQmdETEVIb2I4ZjZQR3YwRkFEQ2xlSVJld3hPcGR6eWZucGYzS3JDSnIKL1c4Njh6SGN2M3hyQndsWUdkSmpNdzNWeDlsZnc5eWtmbm9GcmFKeXJmY2FVWnZsOWdhRTQveFFqL3ZuY1d0egpFUXl6TWlQZ1lQdzV6WnE2ZVBQY05lNklUL0t1UGR4cHk2OWd0SWx5ekhNbzc4MU10ekkrYnh6WkpHNjJsMlBDCmtQWlJBb0dBRWx3UkdLUVZ6VjFqdEJ5ZzJUVERpQnRpZStISysrY2U5MUExUW0wK3l0OGtaM3QwU2N2clJlR1gKOHhWdGd1TnorNjdDQkJwUVJjaWg2YjVnUkFaNm1MekJMeDYrZUxZVUZra2tQUkQ5VVdCaVYvWGZjMnpTL0NYWApUZFNBL0ZrcWlXSkM3c2hkc2lRakJMOGk4UjBnYjUveDc0Rmx0VEZkM3lDSzMrZHFaVFE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "kubelet",
                    "context": {
                        "cluster": "env1",
                        "user": "kubelet"
                    }
                }
            ],
            "current-context": "kubelet"
        },
        "File": {
            "Filename": "auth/kubeconfig-kubelet",
            "Data": "Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMXFTVFJOVkdzd1RsUlJNRmRvWTA1TmFtZDRUV3BKTVFwTlZHc3dUbFJSTUZkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGVGbHFVRFZTV2pCQmFXcHhMM3BaZG5OcWVGWUtOR0p1YUVaM1pXWkZibFpVT0c1SWJXaFVXV2hyUVUxVE5WVTVOaXM0WlVGMFYyY3dZbTFUYVU4ME9WcG1aV3hWTVhKamR6YzFkWFkzUkZrdk5pc3pjQW92U2pGb1JWWlplWFl5ZDBwTllVUjJUamRQVUhWUWVqTnpTbEFyUTJZd1NtOVpOak56UVhZMU5sQjZTWFJHVDNSaWVtdE9OMVJxVHpVMWNrWkdOR2xZQ205a1NYVXhVRTAyZERKbVpFMXFPR1ZXVEhSM1Z6aEZUMXAwWkVNMVdtNXpOV1ZGVTFaeWQyNU1aVW9yV2tselUyVk9XRGRKUkhKMFlXZFViVTQxUnk4S1dXcDJkV3Q0Tm1aWk5tSmhRWGhEUzNCdWRqUktiVkY0UkRCSVpuaGtjbVUwZFdzMk1YbzBkMXBOV2tjMFRIVmpkREpNTm1sMVdHUldWRFpCUm01MFVBcHZVVnBpWkdoU09VVTRRbkJEUkdGeGRIbDFaR2hvZGpoYWQyTkpWVWhGZVhneFkweERNaTloTkVFck5sSkJiUzlNY1M5eWNrSmpNRU5qYmpCRk0wMW9Da0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTDFCbFZsSm9SRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJVM3BCYndwNlJIbDFhV2RIVERaNFNDdEdiaTlaUzFGVGMzcEpkMXBhUkVKNmFqWmtiWGx5VGxKUFUxZzVVamw2YkRSWVRtRlNiM1pQZGpOa0wyOTFhVkJVTDFkU0NuZzBjV0ZTYzFKUFdEWllXbFpvVmxaUFVqWlVWSFZ0VTNWallVNVZSelpvTURkblJFdG9UazE2YXpBMmRrdEZOR3hsWldneWNqUnVjVk4zTWtKa05EY0taVEZNYkZrM1kxUkpRWG8xWVZFdldHTTBka3RHYkdwVk0waEpWbVl3VkZBeU9FODVNbGhtVm1SbGVGSTJjMjE0ZDJsT1lWZDFSbEU1TUVOVFQwOUhWZ3BPU1hWcFptRlFVSEZwYVhseU9GZHFhRXhvTlRsWFpuazBXRVozUjJKNVkzbHhPVmN3WmpSeVJVSlNkRlFyTVRkc1RFRTJibmxwVmsxalVVdFphR0l4Q2s1RFZFdG1NakZXU2psTFptd3ZkVzB5VlcxQmNXZ3dOVXhLTmtwd2JXeHlUMHMxZGpKVlRtRmlaVFo0Y25SMk9GQnhkamhpWVM5bVFVVnhVRVJ1VkU0S1ptSkdOREZPV2xsUVZreHBWRnBqZFZoM1BUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9lbnYxLWFwaS5yYWZmYS54eXo6NjQ0MwogIG5hbWU6IGVudjEKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGVudjEKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0CmN1cnJlbnQtY29udGV4dDoga3ViZWxldApwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZWxldAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUjBSRU5EUVhCNVowRjNTVUpCWjBsSlJtdFJaREJMVVZWUU9FRjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLVkVWU1RVRTRSMEV4VlVVS1EzaE5TVmx0T1haa1IzUXhXVzFWZUVWRVFVOUNaMDVXUWtGTlZFSXlkREZaYlZWMFdUSkZkMGhvWTA1TlZHZDRUV3BKTkUxVWF6Qk9WRkV3VjJoalRncE5WR2Q0VFdwSk5FMXFRWGhPVkZFeVYycERRbXg2UmtKTlJEaEhRVEZWUlVOb1RUUmpNMng2WkVkV2RFOXVUbXhqYmxwd1dUSldhRmt5VG5aa1Z6VXdDbU42Y0haalIxWjFZekpvY0ZwdVVYUmlWMFpxWVVkc2RWcFRNV3BpTWpWdFlWZGpkR0l6UW14amJVWXdZak5KZUZWcVFsRkNaMDVXUWtGTlZGTllUalVLWXpOU2JHSlVjSHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRVJ3ZG1OSFZuVmpNbWh3V201UmRHSlhSbXBoUjJ4MVdsTXhhbUl5TlcxaFYyTjBZak5DYkFwamJVWXdZak5KTm1KdE9XdGFVekZwWWpJNU1HTXpVbmxaV0VKM1dsaEpkMmRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM0NtZG5SVXRCYjBsQ1FWRkRNMHhKTWxoWWVHWktXSHBYUmpsT1dYZzFOMWhMZFRGR1NVTk5SWEZ3WjJoSGJXVk9PRFZKY1VkSmNUVlRjWEoxUmpGaFl6VUtaVnAyVUdKaE5HWldkVEZwTVhONFQxZENPWEJPTkZCUmRuWlVRa0pvZVd0V1MyODJjbFZSWVRodk5VdFdTV1ZIVTFKdFZsSTJOREY0VWpGNVdWZENUd3BNYzBONlRFaHplak5NVlVsaU5EQmFNMHBxVW1zNFZqZzVWV2x2YmxveGVISlNNMEpaUVdsV04xcDJTbGt5UW1VMGJTOWtVbkJEY0RKS2Eyb3lNa3d4Q210NFdVMHZUVWgzVVdWMVpuRlpOMmxzWVZoaFRtSlFlblptUjJac2NqaG9jblZEY1c5RE9UWlVLMFJwY1dSRldrTmpZak5CYmt0amRGWnZjbVZqZEZjS2JFSlhTWGM1YVVoTmREVTFOR0Y0T1ZveE9XOVpkM0J6VTNkUGIwSlBZakZQVTBkTlMxcDNVM0ZNTkZsdWExRXdPRnBvZDNwT09WRkRkMjVvVm0xWWFncHBUSEJxY2xOSFJIRnVOakIwY2pneWFUazRNVXN6U1ZsblVTOVdLMG9yYWtGblRVSkJRVWRxWkZSQ2VrMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbEdDbTlFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFJCYWtGTlFtZE9Wa2hTVFVKQlpqaEZRV3BCUVUxQ01FZEJNVlZrUkdkUlYwSkNVME1LVG5GU1JIWTVWVkprYjA1MWVHMUNaVnAzWWs5d01HTnJMMnBCWmtKblRsWklVMDFGUjBSQlYyZENVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTHdwUVpWWlNhRVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUVU5RFFWRkZRVnBUUVdNclp6Wk9UV0ZEV1Zkd1lsbHRkMUpyWld0NmVWazRlbVJFV0hKbkNrUkVWR3hDY0VacGJtVlVPSGd4THpkd2RVMXlhVXBoT0RReVEyTkhlaTl2ZGtoMWNFTjRhSEI2Y25kc1MyVlRORFo2YXpGc00zb3pRWEJwVERsQ1QxWUtiRmxVU1hwU1VsZDJPV1pSWm5aMU9UZG1jemR1Y1ZKbE4yOU1XVXhpTHpoMGNtTjFXRWRyUkU5bloxWm9UeTlPVlVGNWJtSm9MMUl5ZVVOR1NHdzNZZ3BtTVc1blkxQjJTM0p6YWpSbGJIZENjbEpuVVVaUU5ubHRNV04yUjBSbmQzazJhMWxPVXpWWk1uQTFNMEUxU0dGQlJYQkRkVlZYZWpob1JGRk1WWE5LQ2pCcVR6bDNlVTB6T0c1VFZqaG1lVXB5YzB4NFFtcDNkR1pwUVZOME0ydFlkVk5FUlVsWVdXbGxjV1JyY1c1UWFGTkJhWEowU0hCcUwzVjRaMEZoTTBRS1pXaFVhMFl4Y0RSVkswZFVkMWxGUjJsSWQzQmxla0V2U0VOYWJVYzNSR1Z4ZFhaMlNtZEpOSGxNVjNReVNtcG5lRVpXVDJ4UlBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjJkSlFrRkJTME5CVVVWQmRIbDVUbXd4T0ZoNVZqZ3hhR1pVVjAxbFpURjVjblJTVTBGcVFrdHhXVWxTY0c1cVprOVRTMmhwUzNWVmNYRTNDbWhrVjI1UFdHMWllakl5ZFVneFluUlpkR0pOVkd4blptRlVaVVF3VERjd2QxRlpZM0JHVTNGUGNURkZSM1pMVDFOc1UwaG9hMnRhYkZWbGRVNWpWV1FLWTIxR1oxUnBOMEZ6ZVhnM1RUbDVNVU5ISzA1SFpIbFpNRnBRUm1aUVZrbHhTakprWTJFd1pIZFhRVWxzWlRKaWVWZE9aMWgxU25ZelZXRlJjV1JwV2dwSk9YUnBPVnBOVjBSUWVrSTRSVWh5YmpadFR6UndWMnd5YWxkNk9EY3plRzQxWVM5SllUZG5jWEZCZG1WckwyYzBjVzVTUjFGdVJ6bDNTbmx1VEZaaENrc3pia3hXY0ZGV2FVMVFXV2g2VEdWbFpVZHpabGRrWm1GSFRVdGlSWE5FY1VGVWJUbFVhMmhxUTIxalJYRnBLMGRLTlVWT1VFZFpZMDE2WmxWQmMwb0tORlphYkRRMGFUWlpOakJvWnpad0szUk1ZUzlPYjNabVRsTjBlVWRKUlZBeFptbG1iM2RKUkVGUlFVSkJiMGxDUVVoWVJ5OVBaVEp4YUcwNU1GUkdiZ3AzZHpOc2JXUjBXRFZEVWpSR1NsRjViVFpIYUhNd1kweDNRa2xPV0VvNGEzcHNlRFJwZDFOSGNpdDFTVGN5ZFZKUWFWQlBWSGxIVlhkbFYzRllNbEZ4Q2xaRUswVnBXV2RWVGtSNE1GTm9WVEZ1Y3pSdFYyUnROMU5QY2xkWmVYRktjWEY0ZGpscVpIWkZiRXBwY1VocmNGVllSM2xKUkhwbWRscGpURGt2UTI0S01tMWpiM0ZUU2psdFIwNU9UakZuU0hCeFMzWTVhbWR6VTNCamQyZEtTVUl5Vm1kT2RsVTNkRGhVYjI5TGRIUllTa1YyUm5aa2NHdFZNa3RsUm1OR2J3cE5TazFVWlVaVFFYZG5XV05IT0dsc1ZXYzRXVzgxU1dGV09YTkhhVzQ1VW1Fdk9XZFpZa2xJUWtFdk9EWllSMWxaYVhkSFRIcEZTamxsTUc1dFowdE9DalJOVjNOSE1TOWxSV2wwUlN0NVVWZHBhMjl5YW01eFRtVXZZMGhCUVU1cEx5OWtjREp5ZFZKYVEycFphalZ2V1VOb2QyRlVXRzAyYVhoS2FFcENkbU1LTVUwMGFscElhME5uV1VWQk1GUmtRWFUzU0VSdU1uVnBPWGxSV0VoQmNqQTVjamMzUW1KcFpFSXZOV1l3THpCd1IwWjViVGhLVjNZcldsbFZPVVUwUkFwaU1VdDJlVkJ3YWl0UE1qWkhNV1Z2ZGk5VGNFZENlV1F6YVRSclZtVk1aWE4zVERKa1QzbDBZVWxNUWxaVEx5OTVUazkxUWpVMlFtdzBNWFJIUzBkYUNsVkZNRTV4ZEZCeVUxSkJPRTVaYldWNFFsRndRWEUwZHpoak1ISjNRVVpNVjJSc1ZWQldRbTF1VFRJM1dUQlhiVWR3U1RreGF6aERaMWxGUVRSRFMwUUtjazUwTnpGTmJrUkNTbmRwY0RSb2MybDRjV3BoU1RkVGVIRmtVbk0zWTAxVVJYaDFhMWQ2VldGdlMzUXpRM1oxT1RaT1dFTkRhR2hpUjA1MldsRTBXUXBHVWpKRGFqZEtVbG93V2s1VGRqSmFRelJPVUZaM2IweDJORXBwYkdoc05sYzVUMFJxU0ZONlpYZHlSM2RQTVRWcWVWTjRja28xU0hsdVFXdFdiRms1Q2xSaU1EVnVlbXBZV2pnNVEzb3pWMGczS3l0R1pERTNaMXBLVms1MmFIQXhRMW81Wkc5SE1FTm5XVUZRVFhReFowSlZlalV3ZERjeU5UQmtTMmRVTVVVS1p6WkdSM3BDSzFWVGFGWTJSMEZWV2xGUWJtSjBibEZtVWtwcWJrZHdaa1JUV2xZNWJYcHpVMEpYYzJ0MU1YbEdMMWRqWmxkcmVscHlRelV4YTNSTGN3b3pTVlU0THpCcGJIUkJTVXBvTUVGcmRtTlJRbmczUlZGaGJsUklaV3N6YUN0SlkwdHdkbE5NZWxWTmFXWkpiblJKY1ROTlFsRXlTRTB5YkM5UVJtcFhDa0ZUVkU5bk16TkJNMGN4Um1rdlZFTk1NbVZSYm5kTFFtZEVURVZJYjJJNFpqWlFSM1l3UmtGRVEyeGxTVkpsZDNoUGNHUjZlV1p1Y0dZelMzSkRTbklLTDFjNE5qaDZTR04yTTNoeVFuZHNXVWRrU21wTmR6TldlRGxzWm5jNWVXdG1ibTlHY21GS2VYSm1ZMkZWV25ac09XZGhSVFF2ZUZGcUwzWnVZMWQwZWdwRlVYbDZUV2xRWjFsUWR6VjZXbkUyWlZCUVkwNWxOa2xVTDB0MVVHUjRjSGsyT1dkMFNXeDVla2hOYnpjNE1VMTBla2tyWW5oNldrcEhOakpzTWxCRENtdFFXbEpCYjBkQlJXeDNVa2RMVVZaNlZqRnFkRUo1WnpKVVZFUnBRblJwWlN0SVN5c3JZMlU1TVVFeFVXMHdLM2wwT0d0YU0zUXdVMk4yY2xKbFIxZ0tPSGhXZEdkMVRub3JOamREUWtKd1VWSmphV2cyWWpWblVrRmFObTFNZWtKTWVEWXJaVXhaVlVacmEydFFVa1E1VlZkQ2FWWXZXR1pqTW5wVEwwTllXQXBVWkZOQkwwWnJjV2xYU2tNM2MyaGtjMmxSYWtKTU9HazRVakJuWWpVdmVEYzBSbXgwVkVaa00zbERTek1yWkhGYVZGRTlDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo="
        }
    },
    "*machine.Master": {
        "Config": {
            "ignition": {
                "config": {
                    "append": [
                        {
                            "source": "https://env1-api.raffa.xyz:49500/config/master",
                            "verification": {}
                        }
                    ]
                },
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1qSTRNVGswTlRRMFdoY05Namd4TWpJMQpNVGswTlRRMFdqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKNGJuaEZ3ZWZFblZUOG5IbWhUWWhrQU1TNVU5Nis4ZUF0V2cwYm1TaU80OVpmZWxVMXJjdzc1dXY3RFkvNiszcAovSjFoRVZZeXYyd0pNYUR2TjdPUHVQejNzSlArQ2YwSm9ZNjNzQXY1NlB6SXRGT3RiemtON1RqTzU1ckZGNGlYCm9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KWWp2dWt4NmZZNmJhQXhDS3BudjRKbVF4RDBIZnhkcmU0dWs2MXo0d1pNWkc0THVjdDJMNml1WGRWVDZBRm50UApvUVpiZGhSOUU4QnBDRGFxdHl1ZGhodjhad2NJVUhFeXgxY0xDMi9hNEErNlJBbS9McS9yckJjMENjbjBFM01oCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3pBbwp6RHl1aWdHTDZ4SCtGbi9ZS1FTc3pJd1paREJ6ajZkbXlyTlJPU1g5Ujl6bDRYTmFSb3ZPdjNkL291aVBUL1dSCng0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKZTFMbFk3Y1RJQXo1YVEvWGM0dktGbGpVM0hJVmYwVFAyOE85MlhmVmRleFI2c214d2lOYVd1RlE5MENTT09HVgpOSXVpZmFQUHFpaXlyOFdqaExoNTlXZnk0WEZ3R2J5Y3lxOVcwZjRyRUJSdFQrMTdsTEE2bnlpVk1jUUtZaGIxCk5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KZmJGNDFOWllQVkxpVFpjdVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDtty9+Qton+j31GmZGakLqlk4tPuo/MFnWI9bYKXUhxc2w0AA99mw0KbO4VTP0Y5LeEbXE0aCls13TseH2CtoFUhnDSxxWM9aW9C4vXDMfd1buTPaDJMLaKOtynzu34Hkm7P7wnArw3Yr9mWoeTgTRWg38XiyKeh9z51L/TQden7NW2znaQCav8QWZGLm0LyiJWjMif5AqPBYee/EA3cugjU7ZFpCRvpxCarjCT+3jAAV702IynYsqBf+4mD7UBG5GU7zbmYJtmXIzcgBge9vyfSKhhXvioKkT9Y4NB+qBg9dJ0LJKaU+zIzHqwF7T07i3nQwnBG885amDyRHPDAdj rspazzol\n"
                        ]
                    }
                ]
            },
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "master.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2VudjEtYXBpLnJhZmZhLnh5ejo0OTUwMC9jb25maWcvbWFzdGVyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMXFTVFJOVkdzd1RsUlJNRmRvWTA1TmFtZDRUV3BKTVFwTlZHc3dUbFJSTUZkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGVGbHFVRFZTV2pCQmFXcHhMM3BaZG5OcWVGWUtOR0p1YUVaM1pXWkZibFpVT0c1SWJXaFVXV2hyUVUxVE5WVTVOaXM0WlVGMFYyY3dZbTFUYVU4ME9WcG1aV3hWTVhKamR6YzFkWFkzUkZrdk5pc3pjQW92U2pGb1JWWlplWFl5ZDBwTllVUjJUamRQVUhWUWVqTnpTbEFyUTJZd1NtOVpOak56UVhZMU5sQjZTWFJHVDNSaWVtdE9OMVJxVHpVMWNrWkdOR2xZQ205a1NYVXhVRTAyZERKbVpFMXFPR1ZXVEhSM1Z6aEZUMXAwWkVNMVdtNXpOV1ZGVTFaeWQyNU1aVW9yV2tselUyVk9XRGRKUkhKMFlXZFViVTQxUnk4S1dXcDJkV3Q0Tm1aWk5tSmhRWGhEUzNCdWRqUktiVkY0UkRCSVpuaGtjbVUwZFdzMk1YbzBkMXBOV2tjMFRIVmpkREpNTm1sMVdHUldWRFpCUm01MFVBcHZVVnBpWkdoU09VVTRRbkJEUkdGeGRIbDFaR2hvZGpoYWQyTkpWVWhGZVhneFkweERNaTloTkVFck5sSkJiUzlNY1M5eWNrSmpNRU5qYmpCRk0wMW9Da0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTDFCbFZsSm9SRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJVM3BCYndwNlJIbDFhV2RIVERaNFNDdEdiaTlaUzFGVGMzcEpkMXBhUkVKNmFqWmtiWGx5VGxKUFUxZzVVamw2YkRSWVRtRlNiM1pQZGpOa0wyOTFhVkJVTDFkU0NuZzBjV0ZTYzFKUFdEWllXbFpvVmxaUFVqWlVWSFZ0VTNWallVNVZSelpvTURkblJFdG9UazE2YXpBMmRrdEZOR3hsWldneWNqUnVjVk4zTWtKa05EY0taVEZNYkZrM1kxUkpRWG8xWVZFdldHTTBka3RHYkdwVk0waEpWbVl3VkZBeU9FODVNbGhtVm1SbGVGSTJjMjE0ZDJsT1lWZDFSbEU1TUVOVFQwOUhWZ3BPU1hWcFptRlFVSEZwYVhseU9GZHFhRXhvTlRsWFpuazBXRVozUjJKNVkzbHhPVmN3WmpSeVJVSlNkRlFyTVRkc1RFRTJibmxwVmsxalVVdFphR0l4Q2s1RFZFdG1NakZXU2psTFptd3ZkVzB5VlcxQmNXZ3dOVXhLTmtwd2JXeHlUMHMxZGpKVlRtRmlaVFo0Y25SMk9GQnhkamhpWVM5bVFVVnhVRVJ1VkU0S1ptSkdOREZPV2xsUVZreHBWRnBqZFZoM1BUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnsidXNlcnMiOlt7Im5hbWUiOiJjb3JlIiwic3NoQXV0aG9yaXplZEtleXMiOlsic3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFEdHR5OStRdG9uK2ozMUdtWkdha0xxbGs0dFB1by9NRm5XSTliWUtYVWh4YzJ3MEFBOTltdzBLYk80VlRQMFk1TGVFYlhFMGFDbHMxM1RzZUgyQ3RvRlVobkRTeHhXTTlhVzlDNHZYRE1mZDFidVRQYURKTUxhS090eW56dTM0SGttN1A3d25BcnczWXI5bVdvZVRnVFJXZzM4WGl5S2VoOXo1MUwvVFFkZW43Tlcyem5hUUNhdjhRV1pHTG0wTHlpSldqTWlmNUFxUEJZZWUvRUEzY3VnalU3WkZwQ1J2cHhDYXJqQ1QrM2pBQVY3MDJJeW5Zc3FCZis0bUQ3VUJHNUdVN3pibVlKdG1YSXpjZ0JnZTl2eWZTS2hoWHZpb0trVDlZNE5CK3FCZzlkSjBMSkthVSt6SXpIcXdGN1QwN2kzblF3bkJHODg1YW1EeVJIUERBZGogcnNwYXp6b2xcbiJdfV19LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319"
        }
    },
    "*machine.Worker": {
        "Config": {
            "ignition": {
                "config": {
                    "append": [
                        {
                            "source": "https://env1-api.raffa.xyz:49500/config/worker",
                            "verification": {}
                        }
                    ]
                },
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1qSTRNVGswTlRRMFdoY05Namd4TWpJMQpNVGswTlRRMFdqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKNGJuaEZ3ZWZFblZUOG5IbWhUWWhrQU1TNVU5Nis4ZUF0V2cwYm1TaU80OVpmZWxVMXJjdzc1dXY3RFkvNiszcAovSjFoRVZZeXYyd0pNYUR2TjdPUHVQejNzSlArQ2YwSm9ZNjNzQXY1NlB6SXRGT3RiemtON1RqTzU1ckZGNGlYCm9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KWWp2dWt4NmZZNmJhQXhDS3BudjRKbVF4RDBIZnhkcmU0dWs2MXo0d1pNWkc0THVjdDJMNml1WGRWVDZBRm50UApvUVpiZGhSOUU4QnBDRGFxdHl1ZGhodjhad2NJVUhFeXgxY0xDMi9hNEErNlJBbS9McS9yckJjMENjbjBFM01oCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3pBbwp6RHl1aWdHTDZ4SCtGbi9ZS1FTc3pJd1paREJ6ajZkbXlyTlJPU1g5Ujl6bDRYTmFSb3ZPdjNkL291aVBUL1dSCng0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKZTFMbFk3Y1RJQXo1YVEvWGM0dktGbGpVM0hJVmYwVFAyOE85MlhmVmRleFI2c214d2lOYVd1RlE5MENTT09HVgpOSXVpZmFQUHFpaXlyOFdqaExoNTlXZnk0WEZ3R2J5Y3lxOVcwZjRyRUJSdFQrMTdsTEE2bnlpVk1jUUtZaGIxCk5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KZmJGNDFOWllQVkxpVFpjdVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDtty9+Qton+j31GmZGakLqlk4tPuo/MFnWI9bYKXUhxc2w0AA99mw0KbO4VTP0Y5LeEbXE0aCls13TseH2CtoFUhnDSxxWM9aW9C4vXDMfd1buTPaDJMLaKOtynzu34Hkm7P7wnArw3Yr9mWoeTgTRWg38XiyKeh9z51L/TQden7NW2znaQCav8QWZGLm0LyiJWjMif5AqPBYee/EA3cugjU7ZFpCRvpxCarjCT+3jAAV702IynYsqBf+4mD7UBG5GU7zbmYJtmXIzcgBge9vyfSKhhXvioKkT9Y4NB+qBg9dJ0LJKaU+zIzHqwF7T07i3nQwnBG885amDyRHPDAdj rspazzol\n"
                        ]
                    }
                ]
            },
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "worker.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2VudjEtYXBpLnJhZmZhLnh5ejo0OTUwMC9jb25maWcvd29ya2VyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMXFTVFJOVkdzd1RsUlJNRmRvWTA1TmFtZDRUV3BKTVFwTlZHc3dUbFJSTUZkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGVGbHFVRFZTV2pCQmFXcHhMM3BaZG5OcWVGWUtOR0p1YUVaM1pXWkZibFpVT0c1SWJXaFVXV2hyUVUxVE5WVTVOaXM0WlVGMFYyY3dZbTFUYVU4ME9WcG1aV3hWTVhKamR6YzFkWFkzUkZrdk5pc3pjQW92U2pGb1JWWlplWFl5ZDBwTllVUjJUamRQVUhWUWVqTnpTbEFyUTJZd1NtOVpOak56UVhZMU5sQjZTWFJHVDNSaWVtdE9OMVJxVHpVMWNrWkdOR2xZQ205a1NYVXhVRTAyZERKbVpFMXFPR1ZXVEhSM1Z6aEZUMXAwWkVNMVdtNXpOV1ZGVTFaeWQyNU1aVW9yV2tselUyVk9XRGRKUkhKMFlXZFViVTQxUnk4S1dXcDJkV3Q0Tm1aWk5tSmhRWGhEUzNCdWRqUktiVkY0UkRCSVpuaGtjbVUwZFdzMk1YbzBkMXBOV2tjMFRIVmpkREpNTm1sMVdHUldWRFpCUm01MFVBcHZVVnBpWkdoU09VVTRRbkJEUkdGeGRIbDFaR2hvZGpoYWQyTkpWVWhGZVhneFkweERNaTloTkVFck5sSkJiUzlNY1M5eWNrSmpNRU5qYmpCRk0wMW9Da0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVbnBWTTJveFFYSjNaM0UzVTFOdmVXWnRRVGwwTDFCbFZsSm9SRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJVM3BCYndwNlJIbDFhV2RIVERaNFNDdEdiaTlaUzFGVGMzcEpkMXBhUkVKNmFqWmtiWGx5VGxKUFUxZzVVamw2YkRSWVRtRlNiM1pQZGpOa0wyOTFhVkJVTDFkU0NuZzBjV0ZTYzFKUFdEWllXbFpvVmxaUFVqWlVWSFZ0VTNWallVNVZSelpvTURkblJFdG9UazE2YXpBMmRrdEZOR3hsWldneWNqUnVjVk4zTWtKa05EY0taVEZNYkZrM1kxUkpRWG8xWVZFdldHTTBka3RHYkdwVk0waEpWbVl3VkZBeU9FODVNbGhtVm1SbGVGSTJjMjE0ZDJsT1lWZDFSbEU1TUVOVFQwOUhWZ3BPU1hWcFptRlFVSEZwYVhseU9GZHFhRXhvTlRsWFpuazBXRVozUjJKNVkzbHhPVmN3WmpSeVJVSlNkRlFyTVRkc1RFRTJibmxwVmsxalVVdFphR0l4Q2s1RFZFdG1NakZXU2psTFptd3ZkVzB5VlcxQmNXZ3dOVXhLTmtwd2JXeHlUMHMxZGpKVlRtRmlaVFo0Y25SMk9GQnhkamhpWVM5bVFVVnhVRVJ1VkU0S1ptSkdOREZPV2xsUVZreHBWRnBqZFZoM1BUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnsidXNlcnMiOlt7Im5hbWUiOiJjb3JlIiwic3NoQXV0aG9yaXplZEtleXMiOlsic3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFEdHR5OStRdG9uK2ozMUdtWkdha0xxbGs0dFB1by9NRm5XSTliWUtYVWh4YzJ3MEFBOTltdzBLYk80VlRQMFk1TGVFYlhFMGFDbHMxM1RzZUgyQ3RvRlVobkRTeHhXTTlhVzlDNHZYRE1mZDFidVRQYURKTUxhS090eW56dTM0SGttN1A3d25BcnczWXI5bVdvZVRnVFJXZzM4WGl5S2VoOXo1MUwvVFFkZW43Tlcyem5hUUNhdjhRV1pHTG0wTHlpSldqTWlmNUFxUEJZZWUvRUEzY3VnalU3WkZwQ1J2cHhDYXJqQ1QrM2pBQVY3MDJJeW5Zc3FCZis0bUQ3VUJHNUdVN3pibVlKdG1YSXpjZ0JnZTl2eWZTS2hoWHZpb0trVDlZNE5CK3FCZzlkSjBMSkthVSt6SXpIcXdGN1QwN2kzblF3bkJHODg1YW1EeVJIUERBZGogcnNwYXp6b2xcbiJdfV19LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319"
        }
    },
    "*machines.Master": {
        "MachinesRaw": "YXBpVmVyc2lvbjogdjEKaXRlbXM6Ci0gYXBpVmVyc2lvbjogY2x1c3Rlci5rOHMuaW8vdjFhbHBoYTEKICBraW5kOiBNYWNoaW5lCiAgbWV0YWRhdGE6CiAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgbGFiZWxzOgogICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlbnYxCiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtdHlwZTogbWFzdGVyCiAgICBuYW1lOiBlbnYxLW1hc3Rlci0wCiAgICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIHNwZWM6CiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgIHByb3ZpZGVyQ29uZmlnOgogICAgICB2YWx1ZToKICAgICAgICBhbWk6CiAgICAgICAgICBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6IG51bGwKICAgICAgICAgIGlkOiBhbWktMDA5ODAyN2RjM2EzNzllMTMKICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKICAgICAgICBjcmVkZW50aWFsc1NlY3JldDogbnVsbAogICAgICAgIGRldmljZUluZGV4OiAwCiAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgYXJuOiBudWxsCiAgICAgICAgICBmaWx0ZXJzOiBudWxsCiAgICAgICAgICBpZDogZW52MS1tYXN0ZXItcHJvZmlsZQogICAgICAgIGluc3RhbmNlVHlwZTogbTQubGFyZ2UKICAgICAgICBrZXlOYW1lOiBudWxsCiAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgICAtIG5hbWU6IGVudjEtZXh0CiAgICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgICAgLSBuYW1lOiBlbnYxLWludAogICAgICAgICAgdHlwZTogbmV0d29yawogICAgICAgIG1ldGFkYXRhOgogICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICBhdmFpbGFiaWxpdHlab25lOiB1cy1lYXN0LTFhCiAgICAgICAgICByZWdpb246IHVzLWVhc3QtMQogICAgICAgIHB1YmxpY0lwOiB0cnVlCiAgICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgICAgLSBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgLSBlbnYxX21hc3Rlcl9zZwogICAgICAgICAgaWQ6IG51bGwKICAgICAgICBzdWJuZXQ6CiAgICAgICAgICBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgLSBlbnYxLW1hc3Rlci11cy1lYXN0LTFhCiAgICAgICAgICBpZDogbnVsbAogICAgICAgIHRhZ3M6CiAgICAgICAgLSBuYW1lOiBvcGVuc2hpZnRDbHVzdGVySUQKICAgICAgICAgIHZhbHVlOiBiMzc5Y2NjNS02ZDg1LTQ5YjYtOWNlNy0yNjAzNWZjZTc3MDkKICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lbnYxCiAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICAgIG5hbWU6IG1hc3Rlci11c2VyLWRhdGEKICAgIHZlcnNpb25zOgogICAgICBrdWJlbGV0OiAiIgogIHN0YXR1czoge30Ka2luZDogTGlzdAptZXRhZGF0YToge30K",
        "UserDataSecretRaw": "CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDJWdWRqRXRZWEJwTG5KaFptWmhMbmg1ZWpvME9UVXdNQzlqYjI1bWFXY3ZiV0Z6ZEdWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUkZaRlRrUlJWMXBJV2pCR00xTlZTa0phTUd4RFVWVlNRbFJyU201aE0wWnZZVEpzU0U5WVkzZFJhMFpTWXpCYVFsSkZSblJVVmtwS1pEQldRbGRWVWxkVlZrWk5VbGhrYzJSdFRraFdibFZMV1hwS2IyTkdjSFZWV0doR1VrVkdVRkZ0WkU5V2EwcENWRlpTUTAwd2NESlphazVTWkVacmVWSllaRWxoUjA1UFZGWlNibVZGTVhGVFZGSk9Wa2R6ZDFSc1VsSk5SbVJ2V1RBMVRtRnRaRFJVVjNCS1RWRndUbFpIYzNkVWJGSlNUVVprY1ZGWE1VNVZhMnd6VWxWR1dsSkdXbEpWVlhoR1pESjRNbGt3WkZka1YwMTVZVWhDWVdKc1JqUlNWVkpDVkRCS2JsUnNXa05SVlRGVlVXcE9TMlJ0U1hwVldGSmFUV3RXTTBOdFpHNVNWMnhPVVZSQ1NGRXhUbmhTTVU1S1dXcE9SVlZWVmtOUlZrWldVVlZGTUZOVlNrVmtNRVl6V2pKa1JsTXdSblpUVlVwQ1ZWVk9kR1ZHYkhGVlJGWlRWMnBDUW1GWGNIaE1NM0JhWkc1T2NXVkdXVXRPUjBwMVlVVmFNMXBYV2taaWJGcFZUMGMxU1dKWGFGVlhWMmh5VVZVeFZFNVdWVFZPYVhNMFdsVkdNRll5WTNkWmJURlVZVlU0TUU5V2NHMWFWM2hXVFZoS2FtUjZZekZrV0ZrelVrWnJkazVwYzNwalFXOTJVMnBHYjFKV1dscGxXRmw1WkRCd1RsbFZVakpVYW1SUVZVaFdVV1ZxVG5wVGJFRnlVVEpaZDFOdE9WcE9hazU2VVZoWk1VNXNRalpUV0ZKSFZETlNhV1Z0ZEU5T01WSnhWSHBWTVdOcldrZE9SMnhaUTIwNWExTllWWGhWUlRBeVpFUktiVnBGTVhGUFIxWlhWRWhTTTFaNmFFWlVNWEF3V2tWTk1WZHROWHBPVjFaR1ZURmFlV1F5TlUxYVZXOXlWMnRzZWxVeVZrOVhSR1JLVWtoS01GbFhaRlZpVlRReFVuazRTMWRYY0RKa1YzUTBUbTFhV2s1dFNtaFJXR2hFVXpOQ2RXUnFVa3RpVmtZMFVrUkNTVnB1YUd0amJWVXdaRmR6TWsxWWJ6QmtNWEJPVjJ0ak1GUklWbXBrUkVwTlRtMXNNVmRIVWxkV1JGcENVbTAxTUZWQmNIWlZWbkJwV2tkb1UwOVZWVFJSYmtKRVVrZEdlR1JJYkRGYVIyaHZaR3BvWVdReVRrcFdWV2hHWlZobmVGa3dlRVJOYVRsb1RrVkZjazVzU2tKaVV6bE5ZMU01ZVdOclNtcE5SVTVxWW1wQ1JrMHdNVzlEYTBadVZGVktRbEZWWkhGVlYzQkRVVlV4UWs1RlpFSk5WbFpyVWtoa1JsRnBPVE5WVlZaQ1pEQnNSR05GVWtKVlJVcHVWR3hhU1ZWck1VTlJWMWswVWxWS1ZWRlZVa0pWVldkMlZGVkpkMUl3UlhoV1YxRkxVa2RrVWxZd1NrTlZibkJXVFRKdmVGRllTak5hTTBVelZURk9kbVZYV25SUlZHd3dUREZDYkZac1NtOVNSVVpQVVcxa2NtTlhhSEpoVldNMVpIcENRMUZXUm5wU2EwWkNWREJPUWxWVlZrSlZNM0JDWW5kd05sSkliREZoVjJSSVZFUmFORk5EZEVkaWFUbGFVekZHVkdNemNFcGtNWEJoVWtWS05tRnFXbXRpV0d4NVZHeEtVRlV4WnpWVmFtdzJZa1JTV1ZSdFJsTmlNMXBRWkdwT2Ewd3lPVEZoVmtKVlRERmtVME51WnpCalYwWlRZekZLVUZkRVdsbFhiRnB2Vm14YVVGVnFXbFZXU0ZaMFZUTldhbGxWTlZaU2VscHZUVVJrYmxKRmRHOVVhekUyWVhwQk1tUnJkRVpPUjNoc1dsZG5lV05xVW5WalZrNHpUV3RLYTA1RVkwdGFWRVpOWWtack0xa3hVa3BSV0c4eFdWWkZkbGRIVFRCa2EzUkhZa2R3Vmswd2FFcFdiVmwzVmtaQmVVOUZPRFZOYkdodFZtMVNiR1ZHU1RKak1qRTBaREpzVDFsV1pERlNiRVUxVFVWT1ZGUXdPVWhXWjNCUFUxaFdjRnB0UmxGVlNFWndZVmhzZVU5R1pIRmhSWGh2VGxSc1dGcHVhekJYUlZvelVqSktOVmt6YkhoUFZtTjNXbXBTZVZKVlNsTmtSbEZ5VFZSa2MxUkZSVEppYm14d1Ztc3hhbFZWZEZwaFIwbDRRMnMxUkZaRmRHMU5ha1pYVTJwc1RGcHRkM1prVnpCNVZsY3hRbU5YWjNkT1ZYaExUbXR3ZDJKWGVIbFVNSE14WkdwS1ZsUnRSbWxhVkZvMFkyNVNNazlHUW5oa2FtaHBXVk01YlZGVlZuaFZSVkoxVmtVMFMxcHRTa2RPUkVaUFYyeHNVVlpyZUhCV1JuQnFaRlpvTTFCVU1FdE1VekIwVEZNeFJsUnJVV2RSTUZaVFZrVnNSMU5WVGtKV1JWVjBURk13ZEV4UmJ6MGlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5ZlN3aWRHbHRaVzkxZEhNaU9udDlMQ0oyWlhKemFXOXVJam9pTWk0eUxqQWlmU3dpYm1WMGQyOXlhMlFpT250OUxDSndZWE56ZDJRaU9uc2lkWE5sY25NaU9sdDdJbTVoYldVaU9pSmpiM0psSWl3aWMzTm9RWFYwYUc5eWFYcGxaRXRsZVhNaU9sc2ljM05vTFhKellTQkJRVUZCUWpOT2VtRkRNWGxqTWtWQlFVRkJSRUZSUVVKQlFVRkNRVkZFZEhSNU9TdFJkRzl1SzJvek1VZHRXa2RoYTB4eGJHczBkRkIxYnk5TlJtNVhTVGxpV1V0WVZXaDRZekozTUVGQk9UbHRkekJMWWs4MFZsUlFNRmsxVEdWRllsaEZNR0ZEYkhNeE0xUnpaVWd5UTNSdlJsVm9ia1JUZUhoWFRUbGhWemxETkhaWVJFMW1aREZpZFZSUVlVUktUVXhoUzA5MGVXNTZkVE0wU0d0dE4xQTNkMjVCY25jeldYSTViVmR2WlZSblZGSlhaek00V0dsNVMyVm9PWG8xTVV3dlZGRmtaVzQzVGxjeWVtNWhVVU5oZGpoUlYxcEhURzB3VEhscFNsZHFUV2xtTlVGeFVFSlpaV1V2UlVFelkzVm5hbFUzV2tad1ExSjJjSGhEWVhKcVExUXJNMnBCUVZZM01ESkplVzVaYzNGQ1ppczBiVVEzVlVKSE5VZFZOM3BpYlZsS2RHMVlTWHBqWjBKblpUbDJlV1pUUzJob1dIWnBiMHRyVkRsWk5FNUNLM0ZDWnpsa1NqQk1Ta3RoVlN0NlNYcEljWGRHTjFRd04ya3pibEYzYmtKSE9EZzFZVzFFZVZKSVVFUkJaR29nY25Od1lYcDZiMnhjYmlKZGZWMTlMQ0p6ZEc5eVlXZGxJanA3ZlN3aWMzbHpkR1Z0WkNJNmUzMTkK"
    },
    "*machines.Worker": {
        "MachineSetRaw": "",
        "UserDataSecretRaw": "CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogd29ya2VyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDJWdWRqRXRZWEJwTG5KaFptWmhMbmg1ZWpvME9UVXdNQzlqYjI1bWFXY3ZkMjl5YTJWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUkZaRlRrUlJWMXBJV2pCR00xTlZTa0phTUd4RFVWVlNRbFJyU201aE0wWnZZVEpzU0U5WVkzZFJhMFpTWXpCYVFsSkZSblJVVmtwS1pEQldRbGRWVWxkVlZrWk5VbGhrYzJSdFRraFdibFZMV1hwS2IyTkdjSFZWV0doR1VrVkdVRkZ0WkU5V2EwcENWRlpTUTAwd2NESlphazVTWkVacmVWSllaRWxoUjA1UFZGWlNibVZGTVhGVFZGSk9Wa2R6ZDFSc1VsSk5SbVJ2V1RBMVRtRnRaRFJVVjNCS1RWRndUbFpIYzNkVWJGSlNUVVprY1ZGWE1VNVZhMnd6VWxWR1dsSkdXbEpWVlhoR1pESjRNbGt3WkZka1YwMTVZVWhDWVdKc1JqUlNWVkpDVkRCS2JsUnNXa05SVlRGVlVXcE9TMlJ0U1hwVldGSmFUV3RXTTBOdFpHNVNWMnhPVVZSQ1NGRXhUbmhTTVU1S1dXcE9SVlZWVmtOUlZrWldVVlZGTUZOVlNrVmtNRVl6V2pKa1JsTXdSblpUVlVwQ1ZWVk9kR1ZHYkhGVlJGWlRWMnBDUW1GWGNIaE1NM0JhWkc1T2NXVkdXVXRPUjBwMVlVVmFNMXBYV2taaWJGcFZUMGMxU1dKWGFGVlhWMmh5VVZVeFZFNVdWVFZPYVhNMFdsVkdNRll5WTNkWmJURlVZVlU0TUU5V2NHMWFWM2hXVFZoS2FtUjZZekZrV0ZrelVrWnJkazVwYzNwalFXOTJVMnBHYjFKV1dscGxXRmw1WkRCd1RsbFZVakpVYW1SUVZVaFdVV1ZxVG5wVGJFRnlVVEpaZDFOdE9WcE9hazU2VVZoWk1VNXNRalpUV0ZKSFZETlNhV1Z0ZEU5T01WSnhWSHBWTVdOcldrZE9SMnhaUTIwNWExTllWWGhWUlRBeVpFUktiVnBGTVhGUFIxWlhWRWhTTTFaNmFFWlVNWEF3V2tWTk1WZHROWHBPVjFaR1ZURmFlV1F5TlUxYVZXOXlWMnRzZWxVeVZrOVhSR1JLVWtoS01GbFhaRlZpVlRReFVuazRTMWRYY0RKa1YzUTBUbTFhV2s1dFNtaFJXR2hFVXpOQ2RXUnFVa3RpVmtZMFVrUkNTVnB1YUd0amJWVXdaRmR6TWsxWWJ6QmtNWEJPVjJ0ak1GUklWbXBrUkVwTlRtMXNNVmRIVWxkV1JGcENVbTAxTUZWQmNIWlZWbkJwV2tkb1UwOVZWVFJSYmtKRVVrZEdlR1JJYkRGYVIyaHZaR3BvWVdReVRrcFdWV2hHWlZobmVGa3dlRVJOYVRsb1RrVkZjazVzU2tKaVV6bE5ZMU01ZVdOclNtcE5SVTVxWW1wQ1JrMHdNVzlEYTBadVZGVktRbEZWWkhGVlYzQkRVVlV4UWs1RlpFSk5WbFpyVWtoa1JsRnBPVE5WVlZaQ1pEQnNSR05GVWtKVlJVcHVWR3hhU1ZWck1VTlJWMWswVWxWS1ZWRlZVa0pWVldkMlZGVkpkMUl3UlhoV1YxRkxVa2RrVWxZd1NrTlZibkJXVFRKdmVGRllTak5hTTBVelZURk9kbVZYV25SUlZHd3dUREZDYkZac1NtOVNSVVpQVVcxa2NtTlhhSEpoVldNMVpIcENRMUZXUm5wU2EwWkNWREJPUWxWVlZrSlZNM0JDWW5kd05sSkliREZoVjJSSVZFUmFORk5EZEVkaWFUbGFVekZHVkdNemNFcGtNWEJoVWtWS05tRnFXbXRpV0d4NVZHeEtVRlV4WnpWVmFtdzJZa1JTV1ZSdFJsTmlNMXBRWkdwT2Ewd3lPVEZoVmtKVlRERmtVME51WnpCalYwWlRZekZLVUZkRVdsbFhiRnB2Vm14YVVGVnFXbFZXU0ZaMFZUTldhbGxWTlZaU2VscHZUVVJrYmxKRmRHOVVhekUyWVhwQk1tUnJkRVpPUjNoc1dsZG5lV05xVW5WalZrNHpUV3RLYTA1RVkwdGFWRVpOWWtack0xa3hVa3BSV0c4eFdWWkZkbGRIVFRCa2EzUkhZa2R3Vmswd2FFcFdiVmwzVmtaQmVVOUZPRFZOYkdodFZtMVNiR1ZHU1RKak1qRTBaREpzVDFsV1pERlNiRVUxVFVWT1ZGUXdPVWhXWjNCUFUxaFdjRnB0UmxGVlNFWndZVmhzZVU5R1pIRmhSWGh2VGxSc1dGcHVhekJYUlZvelVqSktOVmt6YkhoUFZtTjNXbXBTZVZKVlNsTmtSbEZ5VFZSa2MxUkZSVEppYm14d1Ztc3hhbFZWZEZwaFIwbDRRMnMxUkZaRmRHMU5ha1pYVTJwc1RGcHRkM1prVnpCNVZsY3hRbU5YWjNkT1ZYaExUbXR3ZDJKWGVIbFVNSE14WkdwS1ZsUnRSbWxhVkZvMFkyNVNNazlHUW5oa2FtaHBXVk01YlZGVlZuaFZSVkoxVmtVMFMxcHRTa2RPUkVaUFYyeHNVVlpyZUhCV1JuQnFaRlpvTTFCVU1FdE1VekIwVEZNeFJsUnJVV2RSTUZaVFZrVnNSMU5WVGtKV1JWVjBURk13ZEV4UmJ6MGlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5ZlN3aWRHbHRaVzkxZEhNaU9udDlMQ0oyWlhKemFXOXVJam9pTWk0eUxqQWlmU3dpYm1WMGQyOXlhMlFpT250OUxDSndZWE56ZDJRaU9uc2lkWE5sY25NaU9sdDdJbTVoYldVaU9pSmpiM0psSWl3aWMzTm9RWFYwYUc5eWFYcGxaRXRsZVhNaU9sc2ljM05vTFhKellTQkJRVUZCUWpOT2VtRkRNWGxqTWtWQlFVRkJSRUZSUVVKQlFVRkNRVkZFZEhSNU9TdFJkRzl1SzJvek1VZHRXa2RoYTB4eGJHczBkRkIxYnk5TlJtNVhTVGxpV1V0WVZXaDRZekozTUVGQk9UbHRkekJMWWs4MFZsUlFNRmsxVEdWRllsaEZNR0ZEYkhNeE0xUnpaVWd5UTNSdlJsVm9ia1JUZUhoWFRUbGhWemxETkhaWVJFMW1aREZpZFZSUVlVUktUVXhoUzA5MGVXNTZkVE0wU0d0dE4xQTNkMjVCY25jeldYSTViVmR2WlZSblZGSlhaek00V0dsNVMyVm9PWG8xTVV3dlZGRmtaVzQzVGxjeWVtNWhVVU5oZGpoUlYxcEhURzB3VEhscFNsZHFUV2xtTlVGeFVFSlpaV1V2UlVFelkzVm5hbFUzV2tad1ExSjJjSGhEWVhKcVExUXJNMnBCUVZZM01ESkplVzVaYzNGQ1ppczBiVVEzVlVKSE5VZFZOM3BpYlZsS2RHMVlTWHBqWjBKblpUbDJlV1pUUzJob1dIWnBiMHRyVkRsWk5FNUNLM0ZDWnpsa1NqQk1Ta3RoVlN0NlNYcEljWGRHTjFRd04ya3pibEYzYmtKSE9EZzFZVzFFZVZKSVVFUkJaR29nY25Od1lYcDZiMnhjYmlKZGZWMTlMQ0p6ZEc5eVlXZGxJanA3ZlN3aWMzbHpkR1Z0WkNJNmUzMTkK"
    },
    "*manifests.ClusterK8sIO": {
        "Raw": "YXBpVmVyc2lvbjogY2x1c3Rlci5rOHMuaW8vdjFhbHBoYTEKa2luZDogQ2x1c3RlcgptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGVudjEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogICAgcG9kczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4xMjguMC4wLzE0CiAgICBzZXJ2aWNlRG9tYWluOiAiIgogICAgc2VydmljZXM6CiAgICAgIGNpZHJCbG9ja3M6CiAgICAgIC0gMTcyLjMwLjAuMC8xNgogIHByb3ZpZGVyQ29uZmlnOiB7fQpzdGF0dXM6IHt9Cg=="
    },
    "*manifests.DNS": {
        "FileList": [
            {
                "Filename": "manifests/cluster-dns-01-crd.yaml",
                "Data": "YXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogZG5zZXMuY29uZmlnLm9wZW5zaGlmdC5pbwpzcGVjOgogIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgbmFtZXM6CiAgICBraW5kOiBETlMKICAgIGxpc3RLaW5kOiBETlNMaXN0CiAgICBwbHVyYWw6IGRuc2VzCiAgICBzaW5ndWxhcjogZG5zCiAgc2NvcGU6IENsdXN0ZXIKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUK"
            },
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogcmFmZmEueHl6CnN0YXR1czoge30K"
            }
        ]
    },
    "*manifests.Ingress": {
        "FileList": [
            {
                "Filename": "manifests/cluster-ingress-01-crd.yaml",
                "Data": "YXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogaW5ncmVzc2VzLmNvbmZpZy5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogIG5hbWVzOgogICAga2luZDogSW5ncmVzcwogICAgbGlzdEtpbmQ6IEluZ3Jlc3NMaXN0CiAgICBwbHVyYWw6IGluZ3Jlc3NlcwogICAgc2luZ3VsYXI6IGluZ3Jlc3MKICBzY29wZTogQ2x1c3RlcgogIHZlcnNpb25zOgogIC0gbmFtZTogdjEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQo="
            },
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5lbnYxLnJhZmZhLnh5egpzdGF0dXM6IHt9Cg=="
            }
        ]
    },
    "*manifests.Manifests": {
        "KubeSysConfig": {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "name": "cluster-config-v1",
                "namespace": "kube-system"
            },
            "data": {
                "install-config": "baseDomain: raffa.xyz\nclusterID: b379ccc5-6d85-49b6-9ce7-26035fce7709\nmachines:\n- name: master\n  platform: {}\n  replicas: 1\n- name: worker\n  platform: {}\n  replicas: 2\nmetadata:\n  creationTimestamp: null\n  name: env1\nnetworking:\n  clusterNetworks:\n  - cidr: 10.128.0.0/14\n    hostSubnetLength: 9\n  serviceCIDR: 172.30.0.0/16\n  type: OpenshiftSDN\nplatform:\n  aws:\n    region: us-east-1\n    vpcCIDRBlock: 10.0.0.0/16\npullSecret: '{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3Jobmdwc3JzcGF6em9sMWViZ2NzYWxjcW96cnVpbGlsMHRja3Jkbm54Ok5CWjBSSzJLNEhDTjNUN0MzWUlHMVFGTUtYVzNVVk5WSExQWUdCMUxCN1JKMkxTS1ZCTkFYSjZCNDhWMDdEOTI=\",\"email\":\"rspazzol@redhat.com\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3Jobmdwc3JzcGF6em9sMWViZ2NzYWxjcW96cnVpbGlsMHRja3Jkbm54Ok5CWjBSSzJLNEhDTjNUN0MzWUlHMVFGTUtYVzNVVk5WSExQWUdCMUxCN1JKMkxTS1ZCTkFYSjZCNDhWMDdEOTI=\",\"email\":\"rspazzol@redhat.com\"}}}'\nsshKey: |\n  ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDtty9+Qton+j31GmZGakLqlk4tPuo/MFnWI9bYKXUhxc2w0AA99mw0KbO4VTP0Y5LeEbXE0aCls13TseH2CtoFUhnDSxxWM9aW9C4vXDMfd1buTPaDJMLaKOtynzu34Hkm7P7wnArw3Yr9mWoeTgTRWg38XiyKeh9z51L/TQden7NW2znaQCav8QWZGLm0LyiJWjMif5AqPBYee/EA3cugjU7ZFpCRvpxCarjCT+3jAAV702IynYsqBf+4mD7UBG5GU7zbmYJtmXIzcgBge9vyfSKhhXvioKkT9Y4NB+qBg9dJ0LJKaU+zIzHqwF7T07i3nQwnBG885amDyRHPDAdj rspazzol\n"
            }
        },
        "FileList": [
            {
                "Filename": "manifests/cluster-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYmFzZURvbWFpbjogcmFmZmEueHl6CiAgICBjbHVzdGVySUQ6IGIzNzljY2M1LTZkODUtNDliNi05Y2U3LTI2MDM1ZmNlNzcwOQogICAgbWFjaGluZXM6CiAgICAtIG5hbWU6IG1hc3RlcgogICAgICBwbGF0Zm9ybToge30KICAgICAgcmVwbGljYXM6IDEKICAgIC0gbmFtZTogd29ya2VyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIG5hbWU6IGVudjEKICAgIG5ldHdvcmtpbmc6CiAgICAgIGNsdXN0ZXJOZXR3b3JrczoKICAgICAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICAgICAgaG9zdFN1Ym5ldExlbmd0aDogOQogICAgICBzZXJ2aWNlQ0lEUjogMTcyLjMwLjAuMC8xNgogICAgICB0eXBlOiBPcGVuc2hpZnRTRE4KICAgIHBsYXRmb3JtOgogICAgICBhd3M6CiAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTEKICAgICAgICB2cGNDSURSQmxvY2s6IDEwLjAuMC4wLzE2CiAgICBwdWxsU2VjcmV0OiAneyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzNKb2JtZHdjM0p6Y0dGNmVtOXNNV1ZpWjJOellXeGpjVzk2Y25WcGJHbHNNSFJqYTNKa2JtNTRPazVDV2pCU1N6SkxORWhEVGpOVU4wTXpXVWxITVZGR1RVdFlWek5WVms1V1NFeFFXVWRDTVV4Q04xSktNa3hUUzFaQ1RrRllTalpDTkRoV01EZEVPVEk9IiwiZW1haWwiOiJyc3BhenpvbEByZWRoYXQuY29tIn0sInF1YXkuaW8iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLM0pvYm1kd2MzSnpjR0Y2ZW05c01XVmlaMk56WVd4amNXOTZjblZwYkdsc01IUmphM0prYm01NE9rNUNXakJTU3pKTE5FaERUak5VTjBNeldVbEhNVkZHVFV0WVZ6TlZWazVXU0V4UVdVZENNVXhDTjFKS01reFRTMVpDVGtGWVNqWkNORGhXTURkRU9UST0iLCJlbWFpbCI6InJzcGF6em9sQHJlZGhhdC5jb20ifX19JwogICAgc3NoS2V5OiB8CiAgICAgIHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQkFRRHR0eTkrUXRvbitqMzFHbVpHYWtMcWxrNHRQdW8vTUZuV0k5YllLWFVoeGMydzBBQTk5bXcwS2JPNFZUUDBZNUxlRWJYRTBhQ2xzMTNUc2VIMkN0b0ZVaG5EU3h4V005YVc5QzR2WERNZmQxYnVUUGFESk1MYUtPdHluenUzNEhrbTdQN3duQXJ3M1lyOW1Xb2VUZ1RSV2czOFhpeUtlaDl6NTFML1RRZGVuN05XMnpuYVFDYXY4UVdaR0xtMEx5aUpXak1pZjVBcVBCWWVlL0VBM2N1Z2pVN1pGcENSdnB4Q2FyakNUKzNqQUFWNzAySXluWXNxQmYrNG1EN1VCRzVHVTd6Ym1ZSnRtWEl6Y2dCZ2U5dnlmU0toaFh2aW9La1Q5WTROQitxQmc5ZEowTEpLYVUrekl6SHF3RjdUMDdpM25Rd25CRzg4NWFtRHlSSFBEQWRqIHJzcGF6em9sCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0K"
            },
            {
                "Filename": "manifests/kube-system-configmap-etcd-serving-ca.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2VydmluZy1jYQogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KZGF0YToKICBjYS1idW5kbGUuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURLVENDQWhHZ0F3SUJBZ0lJV1BPMTE0RDZNaXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1USXlPREU1TkRVME5Gb1gKICAgIERUSTRNVEl5TlRFNU5EVTBOVm93SGpFTk1Bc0dBMVVFQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQ0MKICAgIEFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEtPcFFmY2pDdDBmcURsUTBaNEJNZWIKICAgICtQc1ZhdmJZU212V3JUV1p3aC9MbTQ1N2JTUFEzcEJhM29XaHdKZ0NMYjNTK2hzTWNLcDFtRi9oMWFXUVhPQXoKICAgIGRpRmFXV2JEK21ORjhIWFl0VXlsV1ZheXluVHM4MnprdHFEUTNIeCtNelNhTDNvVS8zczNFYkk5L01EWUhad1UKICAgICtuMXd2RmhLOGdLTEt1eGxNM1NNVnRlZ25Uc0Fsd2xuRE8vR2lCcnBWZW9xQ1lFTmd4WjNVSm5POGZDajhwMFcKICAgIEpiRkpLOU1xZURDYk5SbWExaDIyczBZKzA2RjF3VlZOcmk5Q1pWSW5TalpYVXk3aG1Mbm9uYmdFRkI2RkE5cjIKICAgIEpXa3FaQ1NpUStmYlpaZEFxaWh3ZUFoeUF1ZFNTd2Q4N2k5K005cHhiZW8xUnJueGhSbEhNZGwwbzVhektwc0MKICAgIEF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KICAgIEJCWUVGSE5UZVBVQ3ZDQ3J0SktqSitZRDIzODk1VkdFTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcnRKS2oKICAgIEorWUQyMzg5NVZHRU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVRoUUttTWx0VTFNaHB1K0dnM1JLejdCbGIKICAgIDJTU1BPTGRYUGtVWHV6QXV6ZzMzSk54c1dSZnlhRU5HTk8zN3BHaUdsY0hFM3U3dVdNUWhEaE04eGYrUDcralkKICAgIEo2TmsrOWFEZWhXSURHZWhSOW0wL0FHY09qNlFnSjQrMG0xeGU1d2JmT1hTUHI1QUhVY2dkUkdwdjJTZWRVSzkKICAgIFVPVUgvcUk2MWVEVlpESkxBTUppYU90RktjQWJvSGlnTDdQNUxkWTBGM0szTUZNYmNCeXlaVnJCZCtXWlFMbm0KICAgIHc2RUkwUVptdnh5YjdoRG1hVzBCUDd4SjhZRHZHa3c0K00rZ2tXZEpDNnRhWlVqbVpVZlNMb0MwK0ZJMXFYQmUKICAgIFM3dE42czhJL1pFQUo3a2gxaThnK1h4WHpmWnZkWW8yZ0l4ZmdKYldxUEtjU243cWNGMEQ1Rlcvbm1VaQogICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgCg=="
            },
            {
                "Filename": "manifests/04-openshift-machine-config-operator.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            },
            {
                "Filename": "manifests/05-openshift-cluster-api-namespace.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogICMgVGhpcyBpcyB0aGUgbmFtZXNwYWNlIHVzZWQgdG8gaG9sZCBjbHVzdGVyLWFwaSBjb21wb25lbnRzLgogIG5hbWU6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            },
            {
                "Filename": "manifests/09-openshift-service-signer-namespace.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogICMgVGhpcyBpcyB0aGUgbmFtZXNwYWNlIHVzZWQgdG8gaG9sZCB0aGUgc2VydmljZS1zZXJ2aW5nLWNlcnQtc2lnbmVyLgogIG5hbWU6IG9wZW5zaGlmdC1zZXJ2aWNlLWNlcnQtc2lnbmVyCiAgbGFiZWxzOgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            },
            {
                "Filename": "manifests/etcd-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIGxhYmVsczoKICAgICMgdGhpcyBsYWJlbCBpcyB1c2VkIHRvIGluZGljYXRlIHRoYXQgaXQgc2hvdWxkIGJlIHNjcmFwZWQgYnkgcHJvbWV0aGV1cwogICAgazhzLWFwcDogZXRjZApzcGVjOgogIHNlbGVjdG9yOgogICAgazhzLWFwcDogZXRjZAogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAo="
            },
            {
                "Filename": "manifests/host-etcd-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBob3N0LWV0Y2QKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NyYXBlZCBieSBwcm9tZXRoZXVzCiAgICBrOHMtYXBwOiBldGNkCnNwZWM6CiAgY2x1c3RlcklQOiBOb25lCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg=="
            },
            {
                "Filename": "manifests/openshift-service-signer-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHNlcnZpY2Utc2VydmluZy1jZXJ0LXNpZ25lci1zaWduaW5nLWtleQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LXNlcnZpY2UtY2VydC1zaWduZXIKdHlwZToga3ViZXJuZXRlcy5pby90bHMKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUFJFTkRRV2xEWjBGM1NVSkJaMGxKWmpsMVdsTnlVa3hHUmsxM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMFRWUkplVTlFUlRWT1JGVXdUa1p2V0FwRVZFazBUVlJKZVU1VVJUVk9SRlV3VGxadmQweFVSVkpOUVRoSFFURlZSVU40VFVsWmJUbDJaRWQwTVZsdFZYaEhSRUZYUW1kT1ZrSkJUVlJFTTA1c0NtTnVXbkJaTWxWMFl6SldlV1J0YkhWYWVrTkRRVk5KZDBSUldVcExiMXBKYUhaalRrRlJSVUpDVVVGRVoyZEZVRUZFUTBOQlVXOURaMmRGUWtGTGJWa0tUakZwVDNOTk5EQXJhSGxCVkd0T1MxWlVjVkpDV1VSalZsUjVlblUzY0M5Nk9UUlFhMlo0VkZGbVdWZzROMHBrTWxaUE1qQkZhV1ZvVTA5Q1lXdGlad3AwY1RORk16TTJlR2swTUdScGIwVlBNMWN4U0Rab1QzUXpVbWhwTjJsNFVtNXFXRGhFY1d4UFdFZ3JlSE5zUXpKd00yNXJNR1prYTI5MmF6ZFRLelIzQ25kT1RVZzRZa1pEVGtjMFpYZzBhRnBzYkdSQmFIWkdRa1l4VWsxVk0weHZjemhQV2psaldHNTFOVEI2TlVkeFF6UkhkVTA1VjBWMVdFcFVTbU5UVUdnS2IwSnNVMFpVU2t0MGRHbFBkRnBYUzBaQk0wVnFPVzlTWmpSdlpUbEVUR2RJV2pKcFNEVnROemhUT1dSc1JqZGxUUzh4V25KSkx6QldZaXN6YkhOdmF3cFZlSHBzYlZWQk5IUllhRTVrUjJ0a1kySXdUMkZKVG1KUlFVWk9RV3N5U2xkNGFUbFpNM0JwY1Nzd1ZubERhRWRUUkZackt6RTRRbGRhVVN0RGNVSlZDalZZUzBkTWFtUkRlRkp0VkhkWGEyZzJWR3REUVhkRlFVRmhUbXBOUjBWM1JHZFpSRlpTTUZCQlVVZ3ZRa0ZSUkVGblMydE5RVGhIUVRGVlpFVjNSVUlLTDNkUlJrMUJUVUpCWmpoM1NGRlpSRlpTTUU5Q1FsbEZSa2hPVkdWUVZVTjJRME55ZEVwTGFrb3JXVVF5TXpnNU5WWkhSVTFDT0VkQk1WVmtTWGRSV1FwTlFtRkJSa2hPVkdWUVZVTjJRME55ZEVwTGFrb3JXVVF5TXpnNU5WWkhSVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkRkMVZCUVRSSlFrRlJRVlJXSzNWSUNrSjVObkJTVm5aakwxRktNa1J6WW1vd1dUTktUMDl5Umtsb05reFpVMU5KYjNoR01XZzBVRkJYUVZZek1EUTBRa2t2UWtkdlNVaGljV2hpUmsxeGRsSUtUREZ0Y2pkVVpsZ3ljWGR5ZWxGcE1VeG9PVTQwUjB0T1NYVnBZVzFQU2xGR01rSmtRbU5MV2pVeGMwTk1aR3hMVkc5cWVrZHVLMG94UjJaRVIxcFRLd3A2ZGtWT00ybHJXVkpNTVdnd2IzcHFSRFZsTWs1NmJDOVJUV05JY1ZaWk5VNVRkbmN3ZGtSV1VWcHVPRGhhTHpOMk0zYzRUM0JZTlZsUlJHcHdaR3RuQ2xGcFpuUjRhemhEVVVrMFdERXdSM0ZUUm5KNFNUUnNTekZaU1ZZeVRGSTFWVWhJVFZGU1lYRmFLM2gwVEhoUlJsWnZiWGd3ZWtKYVZtWlZjSE0xYTFrS1NXaHVjR1pFWXpaV1kwRlRTVEZSSzFwdVdEWjVRbm8xWkdod1IzWTJVRlZuY3pWNmNVa3lNVWxETlZObGFtUlZUWFl3TVVSNVRUUkVhR1pCTjNZcldBbzVRVkZVYkRCS1IzSXpPQzkwVkUxcENpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJjVnBuTTFkSk5uZDZhbFEyU0VsQ1QxRXdjRlpQY0VWR1owNTRWbEJNVHpkMWJpOVFNMmNyVWk5R1RrSTVhR1o2Q25Oc00xcFZOMkpSVTBvMlJrazBSbkZTZFVNeWNtTlVabVp5UjB4cVVqSkxaMUUzWkdKVlpuRkZOak5rUjBkTWRVeEdSMlZPWm5kUGNWVTFZMlkzUjNrS1ZVeGhibVZsVkZJNU1sTnBLMVIwVERkcVJFRXdkMlo0YzFWSk1HSm9OMGhwUm0xWFZqQkRSemhWUlZoV1JYaFVZM1ZwZW5jMWJqRjRaV1UzYmxSUWF3cGhiMHhuWVRSNk1WbFROV05zVFd4NFNTdEhaMGRXU1ZaTmEzRXlNa2syTVd4WmIxVkVZMU5RTW1oR0wybG9OekJOZFVGa2JtRkpabTFpZG5oTU1USlZDbGgwTkhvdlZtMXphaTlTVm5ZM1pWZDVhVkpVU0U5WFdsRkVhVEZsUlRFd1lWSXhlSFpSTlc5bk1YUkJRVlV3UTFSWmJHSkhUREZxWlcxTGNqZFNXRWtLUzBWYVNVNVhWRGRZZDBaYWJFUTBTMjlHVkd4amIxbDFUakJNUmtkYVVFSmhVMGh3VDFGSlJFRlJRVUpCYjBsQ1FVaEZkMWxzTHpobVFYaHJWbnB0UndwbFRGWTBaWGRIYm05TFEzTmlWV05wVUdaNmRrdFFSSGRQTWt4SmRuQkdZekIzTUUxcVpYWk9ZVFV6VFVSMFpuWnRPWEpMVWpaSllXSXpMMFJTTTNoaUNscDNSbFI0YmpCV1RHbHJUVTVUTHpsa2VrTnNSMGsyTTA0MlNGQTFkbEpwZVV4M1RqZERSSGxyZVVGdFZHODVRa0ZEUW5NNFdWUnVTRWQ0VGpNeWFGQUtjWEZTWVVKdWEyUlhMMHhSYlhBeGMyYzFWMEp6WkdsMVprNVphME5VVG1GeGRYZ3dSREpGTmxCdldqUldhV1JFVFdscmVFUjZOelJKU0ZWS2NWRkNVZ3BSYzBobU5FRjZPR1JHTkRsblFucEdOMGxqYms5cE1sUXhOM3BqZWxOSFMycE5hblo2VDJ4WVpreElhWFJCVm1obVNqQm9UbkE0Y1RoQ1MySXdWaTlEQ21GTGRIRkRZekl3UVRSUU1qUXpZVlJqU2k5QlZETk1SMVE1WldGd2JuRXdVRTF0ZFVkRlRIRlBXSEo2YTJ3Mk0wZERRa2hEYlZCQmFYcFZNV05IVFVnS1EyTnNieTg0UlVObldVVkJNbGxVUW5wTWFsbDJhemwzYkc0eWFGZFlkemRqZUVsbU9YbFJVekl2UW5vclRIQTBiV1UxWmtGTGVpdDBTblowY0cxRVNRcHNaM0pCUkdnMWNURlBXazVoYzAxb2VFSTRkVmRTVGpnNWRuZHJjR2RKZDBGT1QyVlhhbll3YmpOa1IxaGhOVU5yWkRKeVNWaFVVemwxU0M5bmN6QnRDbXcxYmpNeVVXVkNhRTlVYTA5aVpYQlZUamhvVDBwUFZIcFJVRkJuYm00MFltUkpRazlvV2toT1Frd3dRVmd3UVZNNGFuRnVNVlZEWjFsRlFYZzFhMFlLU0RoaGJHdzJkM2xUVDNwVlEyRkdSV042UmxKMFMyNVNPVGROU3pFdksycG9RM0JDVUVKWE1uazFRMmhOTWxoWU1ITnFUQ3M0TW5wcmN6SkpURUZVWVFwTVVIVnRjRTB6UzA5a01rUlRVR05qY21RcmRqRlRZWGxsVUROaVRtOUNUV2gxTUhndmQzZGhSMWhFYVVwVVdHcHFlbTgxVEhONWRFTXZSME5JUVZwUENrRjBibk0wZGxVelYwUjBWR1ZYV0hScVFVRm5hR2xVVVcxYWRWWlZUazFQYTNSRllTdHNWVU5uV1VWQmRYbHRkazB2T1hScFJIVkZhbWRyYkdRMFJXUUtRMnRPZWs4NE1WQmhUelEyWVRZdlVIRXJkbVV4VVRoR2VuUlNTWEJhZFhKdVQyTTVTVU5xZFVaaGFtZDJiR1ZQZVRGc2JFbFJTbE41V2xwc01XMDBWZ3BpWmtOdk1XTXlNMFJEZFhWWlZtUmlUVzVZUWtaWVYxaFFVbFo2VEU1S2JsQmFWV1pJVTBOSVVYQnNUa0UxYWxReVMwWldlbGdyTW1OdVlYWTJMelJXQ2xaRVIyRkhjV2R0ZEd4clJXMWxPRGN2VUcxNFdVVXdRMmRaUVdaQlVVaDFkMkZwVUU5emVFVjZObFJSUzJsRE56QXZiR2hIY3k5dGNtZFZUazFGVW5rS1JIazBOalo0VTA0MGJGWnVObTVZZGpWQmFuSm5SRkpaY0ZaNE1XMW1kRm8yVnpCc1VrZEpXbEYyVGxaeWFYcHBVbFpFUjNneFFVcDNNRlE1TTJ0blJRb3pWM1JoZEhOTFNFZFRXRWh4WlhSRVNVVlJjSEJPYkhOa1dVNUZXSGxhV0VGM2NuTTFha3BIYm14RFJrWjJVV3BRZUVoUFVrbEhlVzF3ZUVSQ1kxaEtDbmRJYkRCVlVVdENaME5CTjNoMFoxbzNWRWxoY2t4Rk4yNVphRXRpVDIxdk5XOWpTMkpYV1dWeE1tMUNjbkZETWpCaVl6UjFWVUZ5YURKR1lqTTNTRWdLY3pKbmFXOXlZVWxGYjJwdE1GcFpabEZwUVVjd1dYcFdSbEV2TnpaVFV6TmhZVUpRWm0xQ1pXNUNVVFZXT0hGT1pFTkNSMGt2VDNONU5uWjFNRzlrU1FwdlNtczFVMWRwZEUxTmFGcHpWVk54YldwaEwwbElaRGhQWWxwdU9GSnNabXd2YkhGaFRqQnZaV3RhVlhCcllXVkhVMUV6Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
            },
            {
                "Filename": "manifests/kube-system-configmap-root-ca.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKICAgIGMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3SGhjTk1UZ3hNakk0TVRrME5UUTBXaGNOTWpneE1qSTEKICAgIE1UazBOVFEwV2pBbU1SSXdFQVlEVlFRTEV3bHZjR1Z1YzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXcKICAgIGdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKICAgIDRibmhGd2VmRW5WVDhuSG1oVFloa0FNUzVVOTYrOGVBdFdnMGJtU2lPNDlaZmVsVTFyY3c3NXV2N0RZLzYrM3AKICAgIC9KMWhFVll5djJ3Sk1hRHZON09QdVB6M3NKUCtDZjBKb1k2M3NBdjU2UHpJdEZPdGJ6a043VGpPNTVyRkY0aVgKICAgIG9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KICAgIFlqdnVreDZmWTZiYUF4Q0twbnY0Sm1ReEQwSGZ4ZHJlNHVrNjF6NHdaTVpHNEx1Y3QyTDZpdVhkVlQ2QUZudFAKICAgIG9RWmJkaFI5RThCcENEYXF0eXVkaGh2OFp3Y0lVSEV5eDFjTEMyL2E0QSs2UkFtL0xxL3JyQmMwQ2NuMEUzTWgKICAgIEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKICAgIERnUVdCQlJ6VTNqMUFyd2dxN1NTb3lmbUE5dC9QZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVN6QW8KICAgIHpEeXVpZ0dMNnhIK0ZuL1lLUVNzekl3WlpEQnpqNmRteXJOUk9TWDlSOXpsNFhOYVJvdk92M2Qvb3VpUFQvV1IKICAgIHg0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKICAgIGUxTGxZN2NUSUF6NWFRL1hjNHZLRmxqVTNISVZmMFRQMjhPOTJYZlZkZXhSNnNteHdpTmFXdUZROTBDU09PR1YKICAgIE5JdWlmYVBQcWlpeXI4V2poTGg1OVdmeTRYRndHYnljeXE5VzBmNHJFQlJ0VCsxN2xMQTZueWlWTWNRS1loYjEKICAgIE5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KICAgIGZiRjQxTlpZUFZMaVRaY3VYdz09CiAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAK"
            },
            {
                "Filename": "manifests/machine-config-server-tls-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSVGVrTkRRV3BQWjBGM1NVSkJaMGxKV1VoeGNXTnhUM01yVjBWM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMFRWUkplVTlFUlRWT1JGVXdUa1p2V0FwRVZFazBUVlJKZVU1VVJUVk9SRlV3VGpGdmQwaFVSV0pOUW10SFFURlZSVUY0VFZOYVZ6VXlUVk14YUdOSGEzVmpiVVp0V20xRmRXVkliRFpOU1VsQ0NrbHFRVTVDWjJ0eGFHdHBSemwzTUVKQlVVVkdRVUZQUTBGUk9FRk5TVWxDUTJkTFEwRlJSVUY0UlRsWWRHWlhORTVSVDJ4TFowNXdZVlZPWm1GSVpYSUtNVTVOWkdOSVpYbE9TRXQzYWtkb1VVbGlNbGhwY0ZReVNuVmlORXR2WXpOdU5VWnBSRU5OZDFNeGJGSm9aSHB5S3pFeFZIUldOemswZGtwSVdtWndkQXBtYWtncmVGZEdOV2hHVlZFMVdYZGFibWx3ZVhoa2RXMVpORzgzZVhNeFZsVm1aVVppZW5saWFVeHFRMGxRS3pSR1VtSkRaRE0yUm1wYU5WaHJTRFJwQ214a00wWkpVakp0VHpJNE5WaHhSM1ZoWlhoTE56aE5ZbFIxYzBzcmFIQkJUMGRNWVdJNU4zTTRaSEZ4T0VoVEswOVRTV2NyV201elF6WlJkMmgwYUhJS2EzZzNja0p0YUdKclNteE9VR2gzTW5wQ1ZYSmpSMUpRSzJ3NWRFazRhWHBsVlc1aWVVVTVOUzlTVVhaTFZsQnpXSE5WTjA1UmFsTjFXRGhQU1hObFl3cFlhMjFxV0dSblVreHJkR3AyZURnd1JuY3lkRmt5ZFZaRmFHZDRNRzFNWldKWWVGQXJVaXR4V0dkTU9XSlhPRFpHTm5wNlVVcHNhemRIU1hCeVVVbEVDa0ZSUVVKdk5FZEdUVWxIUTAxQ1RVZEJNVlZrU2xGUlRVMUJiMGREUTNOSFFWRlZSa0ozVFVKTlFYZEhRVEZWWkVWM1JVSXZkMUZEVFVGQmQwaFJXVVFLVmxJd1QwSkNXVVZHU0U1VVpWQlZRM1pEUTNKMFNrdHFTaXRaUkRJek9EazFWa2RGVFVJNFIwRXhWV1JKZDFGWlRVSmhRVVpJVGxSbFVGVkRka05EY2dwMFNrdHFTaXRaUkRJek9EazFWa2RGVFVJd1IwRXhWV1JGVVZGWFRVSlRRMFZ0Vm5Wa2FrVjBXVmhDY0V4dVNtaGFiVnBvVEc1b05XVnFRVTVDWjJ0eENtaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJhbTV5ZFRkeFNYSnRUSGxNWnpsNlRUSk1UMjFqT1VKRU1FSkpaelZzU2pZemVuSlphblVyTkVSQ1EzZ0tLMWRKTTNac1dIZE1TMmh0WXprMWVERlZiVzh6ZDNaaGRFSkNlRFJNY0ZCaGVtMW1VMGxqWTBGaVowTlROa2R5YmtocFoxUnVjMVU0TmpoUE5FeHVNd29yWVU0M1RYTXhUWGwxZUd0bFNGRjNjM0YzUzFoMmRuVldlbmswWlhwU1QyTlplR0ZIYjFGNGJERTJkQ3RZWWxrNVowNU5Oa2h4YkZCUFoxRnpPRmhsQ25wclIwaHVORVp0Y1Zsc1lUZG9jbGxDVDJ4TGFrTTNkMlZuYTJSelJtUlFLekZsTTJkVmFVcGFWbk5UU0doRlVtaGljRVV2YUhSU01rSlhha2xJUWxrS01qVXlORm8wU0hOcmJXMTRhSEJuWTFwd1pVaFZRMlF3TTBaSE4xSm1SV3hHWkRCVVZHVkJWRVJJYVZobE1uTkthaTkxV1RjMmVGVmpOa051SzJGa1FRb3JNWFo1YlM5M1dIcFVRVWhEUTJ4V1ZFVllUelZXWmpsdFVGazJSWGxCTTFGMGNrWmpUWGhpTW5jOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICB0bHMua2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZiM2RKUWtGQlMwTkJVVVZCZUVVNVdIUm1WelJPVVU5c1MyZE9jR0ZWVG1aaFNHVnlNVTVOWkdOSVpYbE9TRXQzYWtkb1VVbGlNbGhwY0ZReUNrcDFZalJMYjJNemJqVkdhVVJEVFhkVE1XeFNhR1I2Y2lzeE1WUjBWamM1TkhaS1NGcG1jSFJtYWtncmVGZEdOV2hHVlZFMVdYZGFibWx3ZVhoa2RXMEtXVFJ2TjNsek1WWlZabVZHWW5wNVltbE1ha05KVUNzMFJsSmlRMlF6TmtacVdqVllhMGcwYVd4a00wWkpVakp0VHpJNE5WaHhSM1ZoWlhoTE56aE5ZZ3BVZFhOTEsyaHdRVTlIVEdGaU9UZHpPR1J4Y1RoSVV5dFBVMGxuSzFwdWMwTTJVWGRvZEdoeWEzZzNja0p0YUdKclNteE9VR2gzTW5wQ1ZYSmpSMUpRQ2l0c09YUkpPR2w2WlZWdVlubEZPVFV2VWxGMlMxWlFjMWh6VlRkT1VXcFRkVmc0VDBselpXTllhMjFxV0dSblVreHJkR3AyZURnd1JuY3lkRmt5ZFZZS1JXaG5lREJ0VEdWaVdIaFFLMUlyY1ZoblREbGlWemcyUmpaNmVsRktiR3MzUjBsd2NsRkpSRUZSUVVKQmIwbENRVkZEY25ad05rWXljM1ZzTVdWTFVncDBlSEJ3ZEZRcmNreGpaSFpGY1ZGWE1sTkdXRTFXSzNvNWVUZHFNV1pNVjJ0NWQyNU1USEpCZFdwMU0zQnZSMXBFVGtGaWJUZEVkVFZFUTNkWlVqTjVDamswUVROS1N5OURWVU15Y1RCcFMwdHVTbE55WVdGRE1uTnlUbGMxVG5jd2NtTTBUVVk0ZG01NVYzaDZiMXBHYW0xRGNXRnRjMnc0UWxRd1VHUnFTRGdLVTFCNVpYZFpSSEZOVUVGb1NGUjRlR3hJWW5sWFNWSm5abWxOVWtaMFYzQlRjVkprU0ZkRlJIWnpOa0pKVVVaemQzUk1SMWRaYWxwblpHRlBUR0VyYmdwRVpGbFZLeXRKZFZZd05uZHdUR1JTWkc1dVYxVnZUVkU1VmtweVptZFFha1ZDY0VwVmFGRXlWRXRNTTJ4VmNVSk1TVFJaTmpRdlVEbEhNekE0WXpSMUNtOUljM05rU1cxUlluWlJNMFZNY21oUE9UQklTbHBXVjNKVVRtRm5SalZxTmsxdE5IbGhOM2RCVEhGQ1VXZ3lVWFpMZG1sNU9VOUNlRU5uUzAxUE5sUUtTa1V3V25GRU5FSkJiMGRDUVUxV2ExcEJWMGN2UjFGdE1UaDRNWHBGTkd4dVZUWnFWMHcyTkZBeFNtMDBOV2hoUjBOaWJtODBSMUJTY2pSaWVHdExTQXBwYzI1dUwyWkVPWFE1V2xkTVprVTBTR0ZTZFVwb2FWUmtPVUpTVnpWMGQyVm1SRXM0WTNOMVVHaFNabWxDT0VsdlpuUjRVRkJqTkhCaFFVTXhXbXhUQ2xCMWIzSkpjazFoT1daWk0wZ3ZLekJPV2twb1dEbGhPREV4WTFORmEzQnJXR0o1VFhVNVZ6SnFTa0k1ZUVvemRHTTNhbmhtYUZCNFFXOUhRa0ZRTmxrS2MxZ3ZOWFExVXpFMWFUTnJkazlaY21OdlZXNXpibWRETTJscGFVaEpibXBTZHpreGRVUmFOVE5qV0dNeVIxQXhWM2t6VGxKWGJtaGxMMnBsTDAxVVdBcGlSakpxVUdzMWNrWTNjMWxwVGxoRVpuZGlkMWhwVmtoSVRuRnBWbGcwU3pGUFNrMUtlVVppY25Ca0szSTJWbWhNS3pWcFVrbG1kMGdyYW5ab1YycDRDa0Z1UmtaS00zSk1iVFEwTURCU1R5OTBPRTlhYUZnMGNXTkdSWEUzUjJKb1dqTmplVTFxTVRsQmIwZEJUV2sxT0dONE9VaERUbk5NU0RWTFR6bDNjaXNLS3prdmVFUnpUbVZpWWprd1pYVllhMjR2WkdocVR6RXdlVm96WTBGRmRtWkVPR1J1ZFhBeE1UUkJjVmR6VnpGWWN6bGlRVE53ZVZjMlEwaFhlbE5UUXdwRE5razRZVVJCUVZoclQxQkpibmxoVjFsalNGQmlOWEk1VFhKcWNra3ZTa3RPVlVGb1JrbEdWaloyV2l0aVRFSnlPRFJNYUVaalREQTNibTVhYm5kMkNtcEhRMjB6UVZWR2NGUkphME40V1hwNGFpc3lhM0pGUTJkWlFWRmpZbkJrVVhKeVducDRibkk0ZFRsRmFYQXZaQ3M1T1hGSmRqRkpZMHBuV2xNcldFY0tSMDUwY1VsV2NubHpZalJGVkhNcmVESkxWbGxJYld4TlprNUxhM2REYkU5eWQwZFRVRkpoVDFSb2NHZG1SREJVVEV0c1dVUlJlbEJFYkdOd1UyWm1VUXBIWnpCWksxaDNRV0YyTVdKWFJHbHdWa0V5VEVocVdtaGlSRGhaZEZOQ2MxRnZVVE5UVkd4c05sRkdjMGhwUkROalJUUlJRbEoxTWtWdGFYTnBTR2xRQ2xkV01tNVlVVXRDWjBkbFRuSkhMMHQ0VEZZNGVIUktPVFJxTVVWR2FVSnpRME5oVDIweFVqQk9WVmhSVURsQlVsaDNWVEVyZGxGbmNWRkpVWEp5UVc0S1IwbDVNbVJ1VFVka1dXbHpXRlpOVHpaVmNXeHhXRXBCYTBGSlozaHFNamhITm5sUGFVMXNaVnBuUm5oVFRrNDVlWEpwVW5GWFVIQXpSVmRzZVVZM1V3cHZiekJ2U0RGaGNVWnNla0YxT0hGVWRETmhWM2t5TUhSeGVYbFRhMkowZUVVNVUzVnNUaTlUV0ZKVUsxaHFaVmgyVUVjMkNpMHRMUzB0UlU1RUlGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDZz09Cg=="
            },
            {
                "Filename": "manifests/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            },
            {
                "Filename": "manifests/cvo-overrides.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgdXBzdHJlYW06IGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9ncmFwaAogIGNoYW5uZWw6IGZhc3QKICBjbHVzdGVySUQ6IGIzNzljY2M1LTZkODUtNDliNi05Y2U3LTI2MDM1ZmNlNzcwOQo="
            },
            {
                "Filename": "manifests/host-etcd-service-endpoints.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogRW5kcG9pbnRzCm1ldGFkYXRhOgogIG5hbWU6IGhvc3QtZXRjZAogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBhbm5vdGF0aW9uczoKICAgIGFscGhhLmluc3RhbGxlci5vcGVuc2hpZnQuaW8vZG5zLXN1ZmZpeDogcmFmZmEueHl6CnN1YnNldHM6Ci0gYWRkcmVzc2VzOgogIC0gaXA6IDE5Mi4wLjIuMQogICAgaG9zdG5hbWU6IGVudjEtZXRjZC0wCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg=="
            },
            {
                "Filename": "manifests/kube-system-secret-etcd-client.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2xpZW50CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkZha05EUVdaeFowRjNTVUpCWjBsSlRHcGhlbXhhVmxrMVp6QjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRJYWtWT1RVRnpSMEV4VlVVS1EzaE5SVnBZVW1wYVJFVk9UVUZ6UjBFeFZVVkJlRTFGV2xoU2FscEVRV1ZHZHpCNFQwUkZlVTFxWjNoUFZGRXhUa1JTWVVaM01IbFBSRVY1VFdwVmVBcFBWRkV4VGtSYVlVMUNOSGhFVkVGTVFtZE9Wa0pCYzFSQ1IxWXdXVEpSZUVSVVFVeENaMDVXUWtGTlZFSkhWakJaTWxGM1oyZEZhVTFCTUVkRFUzRkhDbE5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOdGRuZDNNV1J5U25JMmFETk9RM1ZPUVU5cVkxTkhlRkI2YTNNNGNtODBlRFFLY25ONVMyeFljV2sxVTBneGFTOHlRM0paZVZWbmFGaFhhMDVSY1d4b1dtTnRia0owUTJKR1ZYZGtSbUpRYjBaUEwwRnRXR1pTYUdKb2NUTjFSMmhuVFFwQldsTXZaazloYkdjNVRHaGpZbko1YzFsSk9YQllaV3h4UlVncksybzRaVE5LUzJKSVYzSmhVM1JDTmtneWEzQkxZVlJHVFRCREx6QmhUMnBLYmpRNUNrTjJkVE5zVW14cGNHZDFNWFEwYkhCc1VUYzFUMDVGWlhWR2JrVkdhVUZ6VERVNU9FWkxaREl2WlhwdVNXMHdWMmxGZUVsNlYxTm5LMFUwVUROWGIxUUtPR2hGTHpodFpEaFNjVGs0ZHpaTVdraFpOV0ZpWms1eGRHTmtkM1pxT1hJeE5GWmlTRFo0S3pVNVRqWTBVbXg0T0hkSGVVbGxLeThyTm5aNmNGUXZid3BOZVVsRU0ySk5SRlV4WVM5WWJqSnRNRUp1ZVZNeFVWTkJhMGQ0ZGs5VmIzTXlXa1l4U2s1NWEwNUdkVW9yTW5odWEwTXhRV2ROUWtGQlIycFdSRUpUQ2sxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsR1NVUkJWRUpuVGxaSVUxVkZSRVJCUzBKblozSkNaMFZHUWxGalJFRnFRVTFDWjA1V1NGSk5Ra0ZtT0VVS1FXcEJRVTFDTUVkQk1WVmtSR2RSVjBKQ1VteHdVMHBFVEVWTFozbDVSMkZ3WjJvMVZGUmhVVnA2YUhOV1JFRk9RbWRyY1docmFVYzVkekJDUVZGelJncEJRVTlEUVZGRlFXZHRTSEptZG1Vd1RVODBOMDQzTUdOaVdVSkNWRmM1VkhKNFZGbEhhelZQS3pkUVpsZFpabkZ5U2xjeFdWaENiWFZJVEN0dFpEbDNDa0puZVRoWE5IY3lPVzFCTmpReVRWTXZVelZhYm1Wd2JISklORmxCV0VkMVNFRXJOalYzVEdseWVTOWpka05KU3pndlExcDJSbmw0Y0ZsV01tNXpaRGdLVm1odFZsTk5XbTk2WWxGMGNIUkZTbUZzTkZWNmIyZE5XSE5LZFhkQ1UzbzRLMjg0VHpFM1JFZDFaRmRwVGtJck1ITnlZekl6YlZaUWNtTk5iemt2VmdwbVkwVmtVekp5VjFkUk9IaFdkakpEWm1SWVZITllZMnRLTkdKbWJYZDFTSEpFYnpKckszWmpiWGh4VFdkNWRWVXpMMUYwZG00MFNWSTJUMFUxVFhWVUNuQm9MMHBUYkZBeGFWUnNOM2xqT0N0eU5IQTVhbFZ2WVdzemFrOUxkMVpYY1c5T2R6RTFRMWh6ZFVsUmVITXJXbmtyT0RZMWVqRlNOSFJNUTFONFdFRUtZbFJZZHl0dVdqbDFUMGhJWWxOd1pqaENPVTUyYzJoQ2RURXZWbkZSUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJjSEk0VFU1WVlYbGhLMjlrZWxGeWFsRkViek5GYUhOVU9EVk1VRXMyVDAxbFN6ZE5hWEJXTm05MVZXZzVXWFk1Q21keE1rMXNTVWxXTVhCRVZVdHdXVmRZU25CM1lsRnRlRlpOU0ZKWGVqWkNWSFozU213ek1GbFhOR0YwTjJodldVUkJSMVYyTTNwdGNGbFFVelJZUnpZS09ISkhRMUJoVmpOd1lXaENMM1p2TDBoMGVWTnRlREZ4TW10eVVXVm9PWEJMVTIxcmVGUk9RWFk1UjJwdmVWb3JVRkZ5TjNRMVZWcFpjVmxNZEdKbFNncGhXbFZQSzFScVVraHlhRnA0UWxsblRFTXJabVpDVTI1a2RqTnpOWGxLZEVadmFFMVRUVEZyYjFCb1QwUTVNWEZGTDBsU1VDOUtibVpGWVhabVRVOXBDakpTTWs5WGJUTjZZWEpZU0dOTU5DOWhPV1ZHVjNncmMyWjFabFJsZFVWYVkyWk5Rbk5wU0haMkwzVnlPRFpWTHpaRVRXbEJPVEo2UVRGT1YzWXhOVGtLY0hSQldqaHJkRlZGWjBwQ2MySjZiRXRNVG0xU1pGTlVZM0JFVW1KcFpuUnpXalZCZEZGSlJFRlJRVUpCYjBsQ1FVVklOVGs0SzNweWJtTnhhRU0wWXdwTU4zazNSRUV3TmpjMVRVSjBUREF3YTJsRmVVMU1XbTh6VFZKV1YzcEdNeXRaTDJGTldGTldXVU5UY3pJeldXRlBja1JpV0hJMlYwSnFaR1ZHVVU1QkNsbFNUM0ZtTDFWVWVIazFNM2hLZDJkalVVWllTWE0zT1d0YWJFNDFiMUJVV2pCQlpEUnJWMWxGYUZwWE1DODBZV05DTURZNGVuTjVNRnBQWWpWSk9XUUtia1pPZDB0alZIQlBZVnB6VVZrMFRtSm5aV3BNSzFBNGREZFhha1FyZGprNFR6aEZTRXBaTm5GM2MyODNiRnBJVFhsSWFIWjVlRWQ1VkhwSmFGVkVUZ3AyU0d0cmRFbFdOV1U1YTBsSFFYWlJRMHhZWkhKYVFVRmhNVFI1ZVVWMFFqQTNSSGhpVm5acFpGSlhVVmRLY0VGamVERlhjekp5Vm1KaFExbHNhRTQ1Q25aUE9IWjJTVUpDYW1aT2ExcG1VVEZQWkdVck0wdzRjREJNVWpKNmNHbDFkVTF3VEd4Qk9IVnROM1paWm14blNuZ3dVWFV4WTFBclZFUkhaSGhPYUhjS05USnZNVmR2VlVObldVVkJlRWhYY2pCVWNFSXZaa3RtV1VoVlNsSXhNa2x4THpaaWRVTTNiRUZxTXpKb2RUSnFXR3RJYWtvNU5XMVpUeTlvZDJ4aGN3bzFhWFIwZGpSSVR6bFFTbkJxUnpCaFZVZEZlR1JZV1ZkWWFGUnVVRVJzUnpWWlpHbG9aeTh4YWpocVYyeFpTbk5NY21FeFJVRnhRUzlCWlVJM01UVlNDblJtSzBGYVpVTnhiVUYxVFRSSmQyc3dibTEzT0dWamMzRlhiVlpQTm14elJuRmtiR3BNTXpWU2VGSkxaaXROT0d0ak4wbHdTR05EWjFsRlFUSlZaMUVLVVVkdU1IVkhhRGwxWTJRMFJWYzFXWEp3YjFFNVRVaGxURWhXYUdsR1drcFpOWE5TVjB4bGVqYzRXWFJFWkVvM1ZVSjJiMnhEVnpSTFZFUlRNV1JJU3dwVFZsRjZPR1owWjFOdlRYUkNPSHBFTm5WR1FVWllXWFZETDB0amVGaExNVTlMUzBrME1XMVBkblJEZDFsSVFreEhUM1ZSV2pKVFdrMXNaa1V5YUdZeUNqZFZaMGgwVFVkdVRFTnBlRGd4UjNsR1ptbDNaMVJJVHk5MGJqQjBXV05qWTJoclIzRjZUVU5uV1VGUVVIZHhUV1pFWW5VelJYUmxSWFpqWWxsTWFtY0thME4yU21sWGIyZFhSM0YyV1daWVVuUk5PVXRKYzNCVVREUnhXSEZHTlZkd2JuZHVOVzh3U0VkWFJIcHJkWFk1TTA4d1dISnZhR2d5VFVaNFVGRnBlQXBsTWxrM0wxUlZWR0ZaVTNSeFlXUXpiMHB3UVcxdVFWVklkMnRKWVVsMGVUQnNaRWRyVERkelpXTnFMMFJEUlROaVJsazVSRGRITlc1QldVY3dWV3RuQ2tsUVIxTnJTazkwTTI1a1FtOVpUSEl4WkRWblZsRkxRbWRCY2t0eFNIWTJhSHAzVG1aSmExbHVhRGhJWjNkSlVrSjBlVkpOUnpZeU1tTlNRM1pPZUdzS2JrVlVlWGR6TkdFMGNYWTBSVEJZVlZSUldHMXdZa2gxUTJSeGVUQTRRVEp1VjI1alYxWnFOa1ZQWkRsU1VraExXa1IwYzNCcVlsUnpkazltYTJRMmFBcFBMMnhIZG0wNE9YZEVWRm92ZGtSaE5tczBiMVZsSzA1TGJYSkhiU3MwU0VWT1RIRmtNVzlpU0RGT09XTkZTR3hIZVdObWFWTTVhRTVsVlRaTk4wSTNDa00zYVM5QmIwZEJZamMzWTFnek9WSm1LMHQwVFVOblpYRkphMmMwZERnMVNHRmFURE5YU0V4Tk5UQk1ZM1JtUzNGTGVWWjVkM1UxVmt4SE4xSTFNU3NLVDJ0c05VczVTV0pCYkVoUmJYVkZhbE5yY0c1RlMxWlFXbE5NZGpsNE5WTkZSMEpNYzJoNFkydzRSa2wyU0U5SU5tSTJUVnBtVTNKUlFUTkdVMUp3YUFvd1pWRTVjMGxYVkZVckwxSmpha2QzVWpoeksxUTRXRUZrU3pWVk9XNUZPVE00WjBRME9UbFlaVEE0TUVaR1pFTmlWSE05Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
            },
            {
                "Filename": "manifests/pull.json",
                "Data": "ewogICJhcGlWZXJzaW9uIjogInYxIiwKICAia2luZCI6ICJTZWNyZXQiLAogICJ0eXBlIjogImt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbiIsCiAgIm1ldGFkYXRhIjogewogICAgIm5hbWVzcGFjZSI6ICJrdWJlLXN5c3RlbSIsCiAgICAibmFtZSI6ICJjb3Jlb3MtcHVsbC1zZWNyZXQiCiAgfSwKICAiZGF0YSI6IHsKICAgICIuZG9ja2VyY29uZmlnanNvbiI6ICJleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6TktiMkp0Wkhkak0wcDZZMGRHTm1WdE9YTk5WMVpwV2pKT2VsbFhlR3BqVnprMlkyNVdjR0pIYkhOTlNGSnFZVE5LYTJKdE5UUlBhelZEVjJwQ1UxTjZTa3hPUldoRVZHcE9WVTR3VFhwWFZXeElUVlpHUjFSVmRGbFdlazVXVm1zMVYxTkZlRkZYVldSRFRWVjRRMDR4U2t0TmEzaFVVekZhUTFSclJsbFRhbHBEVGtSb1YwMUVaRVZQVkVrOUlpd2laVzFoYVd3aU9pSnljM0JoZW5wdmJFQnlaV1JvWVhRdVkyOXRJbjBzSW5GMVlYa3VhVzhpT25zaVlYVjBhQ0k2SW1JelFteGliazV2WVZkYU1FeFlTbXhpUjFab1l6SlZkRnBIVmpKTE0wcHZZbTFrZDJNelNucGpSMFkyWlcwNWMwMVhWbWxhTWs1NldWZDRhbU5YT1RaamJsWndZa2RzYzAxSVVtcGhNMHByWW0wMU5FOXJOVU5YYWtKVFUzcEtURTVGYUVSVWFrNVZUakJOZWxkVmJFaE5Wa1pIVkZWMFdWWjZUbFpXYXpWWFUwVjRVVmRWWkVOTlZYaERUakZLUzAxcmVGUlRNVnBEVkd0R1dWTnFXa05PUkdoWFRVUmtSVTlVU1QwaUxDSmxiV0ZwYkNJNkluSnpjR0Y2ZW05c1FISmxaR2hoZEM1amIyMGlmWDE5IgogIH0KfQo="
            },
            {
                "Filename": "manifests/cluster-ingress-01-crd.yaml",
                "Data": "YXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogaW5ncmVzc2VzLmNvbmZpZy5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogY29uZmlnLm9wZW5zaGlmdC5pbwogIG5hbWVzOgogICAga2luZDogSW5ncmVzcwogICAgbGlzdEtpbmQ6IEluZ3Jlc3NMaXN0CiAgICBwbHVyYWw6IGluZ3Jlc3NlcwogICAgc2luZ3VsYXI6IGluZ3Jlc3MKICBzY29wZTogQ2x1c3RlcgogIHZlcnNpb25zOgogIC0gbmFtZTogdjEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQo="
            },
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5lbnYxLnJhZmZhLnh5egpzdGF0dXM6IHt9Cg=="
            },
            {
                "Filename": "manifests/cluster-dns-01-crd.yaml",
                "Data": "YXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogZG5zZXMuY29uZmlnLm9wZW5zaGlmdC5pbwpzcGVjOgogIGdyb3VwOiBjb25maWcub3BlbnNoaWZ0LmlvCiAgbmFtZXM6CiAgICBraW5kOiBETlMKICAgIGxpc3RLaW5kOiBETlNMaXN0CiAgICBwbHVyYWw6IGRuc2VzCiAgICBzaW5ndWxhcjogZG5zCiAgc2NvcGU6IENsdXN0ZXIKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUK"
            },
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogcmFmZmEueHl6CnN0YXR1czoge30K"
            },
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": "CmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxYmV0YTEKa2luZDogQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uCm1ldGFkYXRhOgogIG5hbWU6IG5ldHdvcmtjb25maWdzLm5ldHdvcmtvcGVyYXRvci5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogbmV0d29ya29wZXJhdG9yLm9wZW5zaGlmdC5pbwogIG5hbWVzOgogICAga2luZDogTmV0d29ya0NvbmZpZwogICAgbGlzdEtpbmQ6IE5ldHdvcmtDb25maWdMaXN0CiAgICBwbHVyYWw6IG5ldHdvcmtjb25maWdzCiAgICBzaW5ndWxhcjogbmV0d29ya2NvbmZpZwogIHNjb3BlOiBDbHVzdGVyCiAgdmVyc2lvbnM6CiAgICAtIG5hbWU6IHYxCiAgICAgIHNlcnZlZDogdHJ1ZQogICAgICBzdG9yYWdlOiB0cnVlCg=="
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogbmV0d29ya29wZXJhdG9yLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrQ29uZmlnCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogZGVmYXVsdApzcGVjOgogIGFkZGl0aW9uYWxOZXR3b3JrczogbnVsbAogIGNsdXN0ZXJOZXR3b3JrczoKICAtIGNpZHI6IDEwLjEyOC4wLjAvMTQKICAgIGhvc3RTdWJuZXRMZW5ndGg6IDkKICBkZWZhdWx0TmV0d29yazoKICAgIG9wZW5zaGlmdFNETkNvbmZpZzoKICAgICAgbW9kZTogTmV0d29ya3BvbGljeQogICAgb3RoZXJDb25maWc6IG51bGwKICAgIHR5cGU6IE9wZW5zaGlmdFNETgogIHNlcnZpY2VOZXR3b3JrOiAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            }
        ]
    },
    "*manifests.Networking": {
        "FileList": [
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": "CmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxYmV0YTEKa2luZDogQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uCm1ldGFkYXRhOgogIG5hbWU6IG5ldHdvcmtjb25maWdzLm5ldHdvcmtvcGVyYXRvci5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogbmV0d29ya29wZXJhdG9yLm9wZW5zaGlmdC5pbwogIG5hbWVzOgogICAga2luZDogTmV0d29ya0NvbmZpZwogICAgbGlzdEtpbmQ6IE5ldHdvcmtDb25maWdMaXN0CiAgICBwbHVyYWw6IG5ldHdvcmtjb25maWdzCiAgICBzaW5ndWxhcjogbmV0d29ya2NvbmZpZwogIHNjb3BlOiBDbHVzdGVyCiAgdmVyc2lvbnM6CiAgICAtIG5hbWU6IHYxCiAgICAgIHNlcnZlZDogdHJ1ZQogICAgICBzdG9yYWdlOiB0cnVlCg=="
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogbmV0d29ya29wZXJhdG9yLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrQ29uZmlnCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogZGVmYXVsdApzcGVjOgogIGFkZGl0aW9uYWxOZXR3b3JrczogbnVsbAogIGNsdXN0ZXJOZXR3b3JrczoKICAtIGNpZHI6IDEwLjEyOC4wLjAvMTQKICAgIGhvc3RTdWJuZXRMZW5ndGg6IDkKICBkZWZhdWx0TmV0d29yazoKICAgIG9wZW5zaGlmdFNETkNvbmZpZzoKICAgICAgbW9kZTogTmV0d29ya3BvbGljeQogICAgb3RoZXJDb25maWc6IG51bGwKICAgIHR5cGU6IE9wZW5zaGlmdFNETgogIHNlcnZpY2VOZXR3b3JrOiAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            }
        ]
    },
    "*manifests.Openshift": {
        "FileList": [
            {
                "Filename": "openshift/99_cloud-creds-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFVbFBRa1kzVUVKVlRrcERTa0pZV2tFPQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogWmxGS1FVcGhkMFIwY1RCdVlTOWFZVzl4YkZKU00ySnlZaXREWjJzM2JIVmpTSFYzUVZKdlJ3PT0K"
            },
            {
                "Filename": "openshift/99_role-cloud-creds-secret-reader.yaml",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIG5hbWU6IGF3cy1jcmVkcy1zZWNyZXQtcmVhZGVyCnJ1bGVzOgotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJzZWNyZXRzIl0KICByZXNvdXJjZU5hbWVzOiBbImF3cy1jcmVkcyJdCiAgdmVyYnM6IFsiZ2V0Il0K"
            },
            {
                "Filename": "openshift/99_binding-discovery.yaml",
                "Data": "a2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjFiZXRhMQptZXRhZGF0YToKICBuYW1lOiBkaXNjb3ZlcnkKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogc3lzdGVtOmRpc2NvdmVyeQpzdWJqZWN0czoKLSBraW5kOiBHcm91cAogIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwotIGtpbmQ6IEdyb3VwCiAgbmFtZTogJ3N5c3RlbTphdXRoZW50aWNhdGVkJwo="
            },
            {
                "Filename": "openshift/99_kubeadmin-password-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3SkdSNVNTODRjSE5JU1UxNFJ5NU1NbGRNT0haek5DNVFiRWRRUVRKNlNsUkdURVl4YW10V2FXWldOV1k0Y21GVVpXRk9VMmsyCg=="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
                "Data": "CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDJWdWRqRXRZWEJwTG5KaFptWmhMbmg1ZWpvME9UVXdNQzlqYjI1bWFXY3ZiV0Z6ZEdWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUkZaRlRrUlJWMXBJV2pCR00xTlZTa0phTUd4RFVWVlNRbFJyU201aE0wWnZZVEpzU0U5WVkzZFJhMFpTWXpCYVFsSkZSblJVVmtwS1pEQldRbGRWVWxkVlZrWk5VbGhrYzJSdFRraFdibFZMV1hwS2IyTkdjSFZWV0doR1VrVkdVRkZ0WkU5V2EwcENWRlpTUTAwd2NESlphazVTWkVacmVWSllaRWxoUjA1UFZGWlNibVZGTVhGVFZGSk9Wa2R6ZDFSc1VsSk5SbVJ2V1RBMVRtRnRaRFJVVjNCS1RWRndUbFpIYzNkVWJGSlNUVVprY1ZGWE1VNVZhMnd6VWxWR1dsSkdXbEpWVlhoR1pESjRNbGt3WkZka1YwMTVZVWhDWVdKc1JqUlNWVkpDVkRCS2JsUnNXa05SVlRGVlVXcE9TMlJ0U1hwVldGSmFUV3RXTTBOdFpHNVNWMnhPVVZSQ1NGRXhUbmhTTVU1S1dXcE9SVlZWVmtOUlZrWldVVlZGTUZOVlNrVmtNRVl6V2pKa1JsTXdSblpUVlVwQ1ZWVk9kR1ZHYkhGVlJGWlRWMnBDUW1GWGNIaE1NM0JhWkc1T2NXVkdXVXRPUjBwMVlVVmFNMXBYV2taaWJGcFZUMGMxU1dKWGFGVlhWMmh5VVZVeFZFNVdWVFZPYVhNMFdsVkdNRll5WTNkWmJURlVZVlU0TUU5V2NHMWFWM2hXVFZoS2FtUjZZekZrV0ZrelVrWnJkazVwYzNwalFXOTJVMnBHYjFKV1dscGxXRmw1WkRCd1RsbFZVakpVYW1SUVZVaFdVV1ZxVG5wVGJFRnlVVEpaZDFOdE9WcE9hazU2VVZoWk1VNXNRalpUV0ZKSFZETlNhV1Z0ZEU5T01WSnhWSHBWTVdOcldrZE9SMnhaUTIwNWExTllWWGhWUlRBeVpFUktiVnBGTVhGUFIxWlhWRWhTTTFaNmFFWlVNWEF3V2tWTk1WZHROWHBPVjFaR1ZURmFlV1F5TlUxYVZXOXlWMnRzZWxVeVZrOVhSR1JLVWtoS01GbFhaRlZpVlRReFVuazRTMWRYY0RKa1YzUTBUbTFhV2s1dFNtaFJXR2hFVXpOQ2RXUnFVa3RpVmtZMFVrUkNTVnB1YUd0amJWVXdaRmR6TWsxWWJ6QmtNWEJPVjJ0ak1GUklWbXBrUkVwTlRtMXNNVmRIVWxkV1JGcENVbTAxTUZWQmNIWlZWbkJwV2tkb1UwOVZWVFJSYmtKRVVrZEdlR1JJYkRGYVIyaHZaR3BvWVdReVRrcFdWV2hHWlZobmVGa3dlRVJOYVRsb1RrVkZjazVzU2tKaVV6bE5ZMU01ZVdOclNtcE5SVTVxWW1wQ1JrMHdNVzlEYTBadVZGVktRbEZWWkhGVlYzQkRVVlV4UWs1RlpFSk5WbFpyVWtoa1JsRnBPVE5WVlZaQ1pEQnNSR05GVWtKVlJVcHVWR3hhU1ZWck1VTlJWMWswVWxWS1ZWRlZVa0pWVldkMlZGVkpkMUl3UlhoV1YxRkxVa2RrVWxZd1NrTlZibkJXVFRKdmVGRllTak5hTTBVelZURk9kbVZYV25SUlZHd3dUREZDYkZac1NtOVNSVVpQVVcxa2NtTlhhSEpoVldNMVpIcENRMUZXUm5wU2EwWkNWREJPUWxWVlZrSlZNM0JDWW5kd05sSkliREZoVjJSSVZFUmFORk5EZEVkaWFUbGFVekZHVkdNemNFcGtNWEJoVWtWS05tRnFXbXRpV0d4NVZHeEtVRlV4WnpWVmFtdzJZa1JTV1ZSdFJsTmlNMXBRWkdwT2Ewd3lPVEZoVmtKVlRERmtVME51WnpCalYwWlRZekZLVUZkRVdsbFhiRnB2Vm14YVVGVnFXbFZXU0ZaMFZUTldhbGxWTlZaU2VscHZUVVJrYmxKRmRHOVVhekUyWVhwQk1tUnJkRVpPUjNoc1dsZG5lV05xVW5WalZrNHpUV3RLYTA1RVkwdGFWRVpOWWtack0xa3hVa3BSV0c4eFdWWkZkbGRIVFRCa2EzUkhZa2R3Vmswd2FFcFdiVmwzVmtaQmVVOUZPRFZOYkdodFZtMVNiR1ZHU1RKak1qRTBaREpzVDFsV1pERlNiRVUxVFVWT1ZGUXdPVWhXWjNCUFUxaFdjRnB0UmxGVlNFWndZVmhzZVU5R1pIRmhSWGh2VGxSc1dGcHVhekJYUlZvelVqSktOVmt6YkhoUFZtTjNXbXBTZVZKVlNsTmtSbEZ5VFZSa2MxUkZSVEppYm14d1Ztc3hhbFZWZEZwaFIwbDRRMnMxUkZaRmRHMU5ha1pYVTJwc1RGcHRkM1prVnpCNVZsY3hRbU5YWjNkT1ZYaExUbXR3ZDJKWGVIbFVNSE14WkdwS1ZsUnRSbWxhVkZvMFkyNVNNazlHUW5oa2FtaHBXVk01YlZGVlZuaFZSVkoxVmtVMFMxcHRTa2RPUkVaUFYyeHNVVlpyZUhCV1JuQnFaRlpvTTFCVU1FdE1VekIwVEZNeFJsUnJVV2RSTUZaVFZrVnNSMU5WVGtKV1JWVjBURk13ZEV4UmJ6MGlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5ZlN3aWRHbHRaVzkxZEhNaU9udDlMQ0oyWlhKemFXOXVJam9pTWk0eUxqQWlmU3dpYm1WMGQyOXlhMlFpT250OUxDSndZWE56ZDJRaU9uc2lkWE5sY25NaU9sdDdJbTVoYldVaU9pSmpiM0psSWl3aWMzTm9RWFYwYUc5eWFYcGxaRXRsZVhNaU9sc2ljM05vTFhKellTQkJRVUZCUWpOT2VtRkRNWGxqTWtWQlFVRkJSRUZSUVVKQlFVRkNRVkZFZEhSNU9TdFJkRzl1SzJvek1VZHRXa2RoYTB4eGJHczBkRkIxYnk5TlJtNVhTVGxpV1V0WVZXaDRZekozTUVGQk9UbHRkekJMWWs4MFZsUlFNRmsxVEdWRllsaEZNR0ZEYkhNeE0xUnpaVWd5UTNSdlJsVm9ia1JUZUhoWFRUbGhWemxETkhaWVJFMW1aREZpZFZSUVlVUktUVXhoUzA5MGVXNTZkVE0wU0d0dE4xQTNkMjVCY25jeldYSTViVmR2WlZSblZGSlhaek00V0dsNVMyVm9PWG8xTVV3dlZGRmtaVzQzVGxjeWVtNWhVVU5oZGpoUlYxcEhURzB3VEhscFNsZHFUV2xtTlVGeFVFSlpaV1V2UlVFelkzVm5hbFUzV2tad1ExSjJjSGhEWVhKcVExUXJNMnBCUVZZM01ESkplVzVaYzNGQ1ppczBiVVEzVlVKSE5VZFZOM3BpYlZsS2RHMVlTWHBqWjBKblpUbDJlV1pUUzJob1dIWnBiMHRyVkRsWk5FNUNLM0ZDWnpsa1NqQk1Ta3RoVlN0NlNYcEljWGRHTjFRd04ya3pibEYzYmtKSE9EZzFZVzFFZVZKSVVFUkJaR29nY25Od1lYcDZiMnhjYmlKZGZWMTlMQ0p6ZEc5eVlXZGxJanA3ZlN3aWMzbHpkR1Z0WkNJNmUzMTkK"
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset.yaml",
                "Data": ""
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_cluster.yaml",
                "Data": "YXBpVmVyc2lvbjogY2x1c3Rlci5rOHMuaW8vdjFhbHBoYTEKa2luZDogQ2x1c3RlcgptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGVudjEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogICAgcG9kczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4xMjguMC4wLzE0CiAgICBzZXJ2aWNlRG9tYWluOiAiIgogICAgc2VydmljZXM6CiAgICAgIGNpZHJCbG9ja3M6CiAgICAgIC0gMTcyLjMwLjAuMC8xNgogIHByb3ZpZGVyQ29uZmlnOiB7fQpzdGF0dXM6IHt9Cg=="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKaXRlbXM6Ci0gYXBpVmVyc2lvbjogY2x1c3Rlci5rOHMuaW8vdjFhbHBoYTEKICBraW5kOiBNYWNoaW5lCiAgbWV0YWRhdGE6CiAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgbGFiZWxzOgogICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBlbnYxCiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogbWFzdGVyCiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtdHlwZTogbWFzdGVyCiAgICBuYW1lOiBlbnYxLW1hc3Rlci0wCiAgICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIHNwZWM6CiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgIHByb3ZpZGVyQ29uZmlnOgogICAgICB2YWx1ZToKICAgICAgICBhbWk6CiAgICAgICAgICBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6IG51bGwKICAgICAgICAgIGlkOiBhbWktMDA5ODAyN2RjM2EzNzllMTMKICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKICAgICAgICBjcmVkZW50aWFsc1NlY3JldDogbnVsbAogICAgICAgIGRldmljZUluZGV4OiAwCiAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgYXJuOiBudWxsCiAgICAgICAgICBmaWx0ZXJzOiBudWxsCiAgICAgICAgICBpZDogZW52MS1tYXN0ZXItcHJvZmlsZQogICAgICAgIGluc3RhbmNlVHlwZTogbTQubGFyZ2UKICAgICAgICBrZXlOYW1lOiBudWxsCiAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgICAtIG5hbWU6IGVudjEtZXh0CiAgICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgICAgLSBuYW1lOiBlbnYxLWludAogICAgICAgICAgdHlwZTogbmV0d29yawogICAgICAgIG1ldGFkYXRhOgogICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICBwbGFjZW1lbnQ6CiAgICAgICAgICBhdmFpbGFiaWxpdHlab25lOiB1cy1lYXN0LTFhCiAgICAgICAgICByZWdpb246IHVzLWVhc3QtMQogICAgICAgIHB1YmxpY0lwOiB0cnVlCiAgICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgICAgLSBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgLSBlbnYxX21hc3Rlcl9zZwogICAgICAgICAgaWQ6IG51bGwKICAgICAgICBzdWJuZXQ6CiAgICAgICAgICBhcm46IG51bGwKICAgICAgICAgIGZpbHRlcnM6CiAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgLSBlbnYxLW1hc3Rlci11cy1lYXN0LTFhCiAgICAgICAgICBpZDogbnVsbAogICAgICAgIHRhZ3M6CiAgICAgICAgLSBuYW1lOiBvcGVuc2hpZnRDbHVzdGVySUQKICAgICAgICAgIHZhbHVlOiBiMzc5Y2NjNS02ZDg1LTQ5YjYtOWNlNy0yNjAzNWZjZTc3MDkKICAgICAgICAtIG5hbWU6IGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9lbnYxCiAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICAgIG5hbWU6IG1hc3Rlci11c2VyLWRhdGEKICAgIHZlcnNpb25zOgogICAgICBrdWJlbGV0OiAiIgogIHN0YXR1czoge30Ka2luZDogTGlzdAptZXRhZGF0YToge30K"
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
                "Data": "CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogd29ya2VyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDJWdWRqRXRZWEJwTG5KaFptWmhMbmg1ZWpvME9UVXdNQzlqYjI1bWFXY3ZkMjl5YTJWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUkZaRlRrUlJWMXBJV2pCR00xTlZTa0phTUd4RFVWVlNRbFJyU201aE0wWnZZVEpzU0U5WVkzZFJhMFpTWXpCYVFsSkZSblJVVmtwS1pEQldRbGRWVWxkVlZrWk5VbGhrYzJSdFRraFdibFZMV1hwS2IyTkdjSFZWV0doR1VrVkdVRkZ0WkU5V2EwcENWRlpTUTAwd2NESlphazVTWkVacmVWSllaRWxoUjA1UFZGWlNibVZGTVhGVFZGSk9Wa2R6ZDFSc1VsSk5SbVJ2V1RBMVRtRnRaRFJVVjNCS1RWRndUbFpIYzNkVWJGSlNUVVprY1ZGWE1VNVZhMnd6VWxWR1dsSkdXbEpWVlhoR1pESjRNbGt3WkZka1YwMTVZVWhDWVdKc1JqUlNWVkpDVkRCS2JsUnNXa05SVlRGVlVXcE9TMlJ0U1hwVldGSmFUV3RXTTBOdFpHNVNWMnhPVVZSQ1NGRXhUbmhTTVU1S1dXcE9SVlZWVmtOUlZrWldVVlZGTUZOVlNrVmtNRVl6V2pKa1JsTXdSblpUVlVwQ1ZWVk9kR1ZHYkhGVlJGWlRWMnBDUW1GWGNIaE1NM0JhWkc1T2NXVkdXVXRPUjBwMVlVVmFNMXBYV2taaWJGcFZUMGMxU1dKWGFGVlhWMmh5VVZVeFZFNVdWVFZPYVhNMFdsVkdNRll5WTNkWmJURlVZVlU0TUU5V2NHMWFWM2hXVFZoS2FtUjZZekZrV0ZrelVrWnJkazVwYzNwalFXOTJVMnBHYjFKV1dscGxXRmw1WkRCd1RsbFZVakpVYW1SUVZVaFdVV1ZxVG5wVGJFRnlVVEpaZDFOdE9WcE9hazU2VVZoWk1VNXNRalpUV0ZKSFZETlNhV1Z0ZEU5T01WSnhWSHBWTVdOcldrZE9SMnhaUTIwNWExTllWWGhWUlRBeVpFUktiVnBGTVhGUFIxWlhWRWhTTTFaNmFFWlVNWEF3V2tWTk1WZHROWHBPVjFaR1ZURmFlV1F5TlUxYVZXOXlWMnRzZWxVeVZrOVhSR1JLVWtoS01GbFhaRlZpVlRReFVuazRTMWRYY0RKa1YzUTBUbTFhV2s1dFNtaFJXR2hFVXpOQ2RXUnFVa3RpVmtZMFVrUkNTVnB1YUd0amJWVXdaRmR6TWsxWWJ6QmtNWEJPVjJ0ak1GUklWbXBrUkVwTlRtMXNNVmRIVWxkV1JGcENVbTAxTUZWQmNIWlZWbkJwV2tkb1UwOVZWVFJSYmtKRVVrZEdlR1JJYkRGYVIyaHZaR3BvWVdReVRrcFdWV2hHWlZobmVGa3dlRVJOYVRsb1RrVkZjazVzU2tKaVV6bE5ZMU01ZVdOclNtcE5SVTVxWW1wQ1JrMHdNVzlEYTBadVZGVktRbEZWWkhGVlYzQkRVVlV4UWs1RlpFSk5WbFpyVWtoa1JsRnBPVE5WVlZaQ1pEQnNSR05GVWtKVlJVcHVWR3hhU1ZWck1VTlJWMWswVWxWS1ZWRlZVa0pWVldkMlZGVkpkMUl3UlhoV1YxRkxVa2RrVWxZd1NrTlZibkJXVFRKdmVGRllTak5hTTBVelZURk9kbVZYV25SUlZHd3dUREZDYkZac1NtOVNSVVpQVVcxa2NtTlhhSEpoVldNMVpIcENRMUZXUm5wU2EwWkNWREJPUWxWVlZrSlZNM0JDWW5kd05sSkliREZoVjJSSVZFUmFORk5EZEVkaWFUbGFVekZHVkdNemNFcGtNWEJoVWtWS05tRnFXbXRpV0d4NVZHeEtVRlV4WnpWVmFtdzJZa1JTV1ZSdFJsTmlNMXBRWkdwT2Ewd3lPVEZoVmtKVlRERmtVME51WnpCalYwWlRZekZLVUZkRVdsbFhiRnB2Vm14YVVGVnFXbFZXU0ZaMFZUTldhbGxWTlZaU2VscHZUVVJrYmxKRmRHOVVhekUyWVhwQk1tUnJkRVpPUjNoc1dsZG5lV05xVW5WalZrNHpUV3RLYTA1RVkwdGFWRVpOWWtack0xa3hVa3BSV0c4eFdWWkZkbGRIVFRCa2EzUkhZa2R3Vmswd2FFcFdiVmwzVmtaQmVVOUZPRFZOYkdodFZtMVNiR1ZHU1RKak1qRTBaREpzVDFsV1pERlNiRVUxVFVWT1ZGUXdPVWhXWjNCUFUxaFdjRnB0UmxGVlNFWndZVmhzZVU5R1pIRmhSWGh2VGxSc1dGcHVhekJYUlZvelVqSktOVmt6YkhoUFZtTjNXbXBTZVZKVlNsTmtSbEZ5VFZSa2MxUkZSVEppYm14d1Ztc3hhbFZWZEZwaFIwbDRRMnMxUkZaRmRHMU5ha1pYVTJwc1RGcHRkM1prVnpCNVZsY3hRbU5YWjNkT1ZYaExUbXR3ZDJKWGVIbFVNSE14WkdwS1ZsUnRSbWxhVkZvMFkyNVNNazlHUW5oa2FtaHBXVk01YlZGVlZuaFZSVkoxVmtVMFMxcHRTa2RPUkVaUFYyeHNVVlpyZUhCV1JuQnFaRlpvTTFCVU1FdE1VekIwVEZNeFJsUnJVV2RSTUZaVFZrVnNSMU5WVGtKV1JWVjBURk13ZEV4UmJ6MGlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5ZlN3aWRHbHRaVzkxZEhNaU9udDlMQ0oyWlhKemFXOXVJam9pTWk0eUxqQWlmU3dpYm1WMGQyOXlhMlFpT250OUxDSndZWE56ZDJRaU9uc2lkWE5sY25NaU9sdDdJbTVoYldVaU9pSmpiM0psSWl3aWMzTm9RWFYwYUc5eWFYcGxaRXRsZVhNaU9sc2ljM05vTFhKellTQkJRVUZCUWpOT2VtRkRNWGxqTWtWQlFVRkJSRUZSUVVKQlFVRkNRVkZFZEhSNU9TdFJkRzl1SzJvek1VZHRXa2RoYTB4eGJHczBkRkIxYnk5TlJtNVhTVGxpV1V0WVZXaDRZekozTUVGQk9UbHRkekJMWWs4MFZsUlFNRmsxVEdWRllsaEZNR0ZEYkhNeE0xUnpaVWd5UTNSdlJsVm9ia1JUZUhoWFRUbGhWemxETkhaWVJFMW1aREZpZFZSUVlVUktUVXhoUzA5MGVXNTZkVE0wU0d0dE4xQTNkMjVCY25jeldYSTViVmR2WlZSblZGSlhaek00V0dsNVMyVm9PWG8xTVV3dlZGRmtaVzQzVGxjeWVtNWhVVU5oZGpoUlYxcEhURzB3VEhscFNsZHFUV2xtTlVGeFVFSlpaV1V2UlVFelkzVm5hbFUzV2tad1ExSjJjSGhEWVhKcVExUXJNMnBCUVZZM01ESkplVzVaYzNGQ1ppczBiVVEzVlVKSE5VZFZOM3BpYlZsS2RHMVlTWHBqWjBKblpUbDJlV1pUUzJob1dIWnBiMHRyVkRsWk5FNUNLM0ZDWnpsa1NqQk1Ta3RoVlN0NlNYcEljWGRHTjFRd04ya3pibEYzYmtKSE9EZzFZVzFFZVZKSVVFUkJaR29nY25Od1lYcDZiMnhjYmlKZGZWMTlMQ0p6ZEc5eVlXZGxJanA3ZlN3aWMzbHpkR1Z0WkNJNmUzMTkK"
            }
        ]
    },
    "*openshift.BindingDiscovery": {
        "FileList": [
            {
                "Filename": "templates/binding-discovery.yaml",
                "Data": "a2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjFiZXRhMQptZXRhZGF0YToKICBuYW1lOiBkaXNjb3ZlcnkKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogc3lzdGVtOmRpc2NvdmVyeQpzdWJqZWN0czoKLSBraW5kOiBHcm91cAogIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwotIGtpbmQ6IEdyb3VwCiAgbmFtZTogJ3N5c3RlbTphdXRoZW50aWNhdGVkJwo="
            }
        ]
    },
    "*openshift.CloudCredsSecret": {
        "FileList": [
            {
                "Filename": "templates/cloud-creds-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgbmFtZTogYXdzLWNyZWRzCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLk9wZW5TdGFja319CiAgbmFtZTogb3BlbnN0YWNrLWNyZWRzCnt7LSBlbmR9fQpkYXRhOgp7ey0gaWYgLkNsb3VkQ3JlZHMuQVdTfX0KICBhd3NfYWNjZXNzX2tleV9pZDoge3suQ2xvdWRDcmVkcy5BV1MuQmFzZTY0ZW5jb2RlQWNjZXNzS2V5SUR9fQogIGF3c19zZWNyZXRfYWNjZXNzX2tleToge3suQ2xvdWRDcmVkcy5BV1MuQmFzZTY0ZW5jb2RlU2VjcmV0QWNjZXNzS2V5fX0Ke3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuT3BlblN0YWNrfX0KICBjbG91ZHMueWFtbDoge3suQ2xvdWRDcmVkcy5PcGVuU3RhY2suQmFzZTY0ZW5jb2RlQ2xvdWRDcmVkc319Cnt7LSBlbmR9fQo="
            }
        ]
    },
    "*openshift.KubeadminPasswordSecret": {
        "FileList": [
            {
                "Filename": "templates/kubeadmin-password-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IHt7LkJhc2U2NEVuY29kZWRLdWJlYWRtaW5Qd0hhc2h9fQo="
            }
        ]
    },
    "*openshift.RoleCloudCredsSecretReader": {
        "FileList": [
            {
                "Filename": "templates/role-cloud-creds-secret-reader.yaml.template",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp7ey0gaWYgLkNsb3VkQ3JlZHMuQVdTfX0KICBuYW1lOiBhd3MtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PcGVuU3RhY2t9fQogIG5hbWU6IG9wZW5zdGFjay1jcmVkcy1zZWNyZXQtcmVhZGVyCnt7LSBlbmR9fQpydWxlczoKLSBhcGlHcm91cHM6IFsiIl0KICByZXNvdXJjZXM6IFsic2VjcmV0cyJdCnt7LSBpZiAuQ2xvdWRDcmVkcy5BV1N9fQogIHJlc291cmNlTmFtZXM6IFsiYXdzLWNyZWRzIl0Ke3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuT3BlblN0YWNrfX0KICByZXNvdXJjZU5hbWVzOiBbIm9wZW5zdGFjay1jcmVkcyJdCnt7LSBlbmR9fQogIHZlcmJzOiBbImdldCJdCg=="
            }
        ]
    },
    "*password.KubeadminPassword": {
        "Password": "iAsuT-ARs3u-EUai9-dPFog",
        "PasswordHash": "JDJhJDEwJGR5SS84cHNISU14Ry5MMldMOHZzNC5QbEdQQTJ6SlRGTEYxamtWaWZWNWY4cmFUZWFOU2k2"
    },
    "*tls.APIServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5ekNDQXQrZ0F3SUJBZ0lJWHNvbm9sZ2owM293RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEyV2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psTFcxaGMzUmxjakVlTUJ3R0ExVUVBeE1WCmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUFtbVBNTXV2WnhMRXNPWWF3cjhYcHdKdGx2Uk1NTThranRBUlpmTmpWSFRkK2J3aElCckNKL1hNUgpJMDYwOXNkeE04OStYb052K25XalR6a1FYd1ppUTZHVm45NGdJemZ0Z1IwaGRuUUlGR0tpTjBtb0xGT3RudnhvCjNpMjNIeU5rT1N1YWd4bUlHVmNrYWozUEJZZWRtN0VNQm9DTmNUT2x4OTVzMVR0R211OVFxK0NTdE5uT1AwUEoKSVU3cHoxMW5TNFJBY2QvS2JvMXB4U3RTUkcrd1AvT01SUGR2L2h2T2tuTmY0Z2FrQVllMFZYdTlieHdwQ2JPTQpVSHJrZTZUQ012dG15aUdkZ0hRTDVVaGlBeVpXdVMrSUxZK1JRMkVQK1ZJWkpzRXY5cHE2RU5pWXRpWlVKbFUzCmtkUFhORzh4WDdDN2lKcnJZeloxcUZKaW5YeWgzd0lEQVFBQm80SUJHRENDQVJRd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNDTnFSRHY5VVJkb051eG1CZVp3Yk9wMGNrL2pBZkJnTlZIU01FR0RBV2dCUnpVM2oxCkFyd2dxN1NTb3lmbUE5dC9QZVZSaERDQmxBWURWUjBSQklHTU1JR0pnaEpsYm5ZeExXRndhUzV5WVdabVlTNTQKZVhxQ0NtdDFZbVZ5Ym1WMFpYT0NFbXQxWW1WeWJtVjBaWE11WkdWbVlYVnNkSUlXYTNWaVpYSnVaWFJsY3k1awpaV1poZFd4MExuTjJZNElrYTNWaVpYSnVaWFJsY3k1a1pXWmhkV3gwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzCmdnbHNiMk5oYkdodmMzU0hCS3dlQUFHSEJIOEFBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgwdkJkMTEKR3crMnhMWmE1cm8zQWNCREg0T1dVdDJSeGQ4N3BFbDliRy9kcjVsUEtpRzZ0SWZtc1d0UzhzaWIyeSszOWIvUQpubXdXYUVkRTVoRnpSNUliUkk4WjNsOCsxemxYTWtTUy9nQ05xS25xSGFTcGFYYmxBNk44cklzTFFpYmxmenpSCkNieFhTbHdQc3N6YnVkaTRVamxiMS9URzUzZDh2M2pxakRFZWdXYzZPOGpMcE9GWFBNSS90bmx3eHZBT3FMb3QKWnJXRTRaWktXTElDZW54alVLSjBndjlWSXNkdEhVUmlKbzRjOHZNRTdram5CaDRYZHdZeDV1RWxKdzJPUmRxbApsK25xSW1SMkMzV1hsam1Ma3dBdlR0TmZhc1VuM3YzUkVTbi9oSFhoRURFcmVuRGhUeG1tS1JORFBDR3FHV1NTCkJGVE44QVdQOHY1Q3VWND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJSDVHM1g2SVJ4cm93RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2tRK3NSZkZTTVRMTm4KUVZOLzM4UmNYc3VJbmQ4WlB1aEUza0hwRGdpbXJGdUsyc0lDS3BvL2I0NldNanpDR2lzZFJ0U0JLZU55cEZsVgptNVNuV3VjdXN6dkR0R1ExVGZ6dEtJTmxXelVxazJ6a2FjbUViNGRkajZMK3hpOVIxMmpJSUp3K0VvK0RJSGhiCnk0T1c3NWhLMUIxOXdQOGlEVmJzajh3Qk1iLy9qN2N5OENIUE9xWU9zTFhURkw0MEszSEozM3REU3ptK3FiZnoKNjI5RllmL3JNc2pVKzV5MS9GdUJrMGtvRjF3dGtOVy9OYUdoY05zYjBLV1hVNEVnN3lrOXJQRXVQOFRtSS8xcApIeThscFVEVE54TzNaV3l5SXhmdkw2azVqQVlRVzZaVHRwR0hiNmRyR3BBZjdPaHY2K3ptVGg2Y3Z3engvQVEzCmo5cjl1K3RCQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSelUzajFBcndncTdTU295Zm1BOXQvUGVWUmhEQWZCZ05WSFNNRUdEQVdnQlJ6VTNqMQpBcndncTdTU295Zm1BOXQvUGVWUmhEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDWWdkWExST2k2MnVsL0VaClNTU1RnOG5KRlpraWlwV1o5QXp6NjRtQkRMeVNjVk80OG1JUGthbzZSbmY2Tk00alBUMVkvY1lSNGJJRUczSkoKaGR1NXpoSWNBWjJVRHh6ZTFwTVRiOE01WVkyNEhhSS9UWHgwbkxtQVN0WUtzUW5GeDdRR2s2ZWJRaGlOQVo5TgpWc3c1U1ZmM3F2aHhWSWFRVGNDdXRpQUxzblpnNnl3OVgzOHV5YnhCN2JpbUZyRjBwd0Q1ak9HVEs0bHBnMHRsCmppOXFvcnk0Wk9FZ1dJQ0VacVB3enJsN1FiODEwTTdMcWZ6TzVUTWxQZnVNTHBseEtzN3B6U2lZUlZlL09paTMKZndpQVdVSThjSmM3cWNjSmcvZTdoVTFzdFRKaUpmdWo3Zk0xRC90Sm1FakRLazdnd1hNMi9OU1p2K0d1ancxagorUHV2cHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbW1QTU11dlp4TEVzT1lhd3I4WHB3SnRsdlJNTU04a2p0QVJaZk5qVkhUZCtid2hJCkJyQ0ovWE1SSTA2MDlzZHhNODkrWG9OdituV2pUemtRWHdaaVE2R1ZuOTRnSXpmdGdSMGhkblFJRkdLaU4wbW8KTEZPdG52eG8zaTIzSHlOa09TdWFneG1JR1Zja2FqM1BCWWVkbTdFTUJvQ05jVE9seDk1czFUdEdtdTlRcStDUwp0Tm5PUDBQSklVN3B6MTFuUzRSQWNkL0tibzFweFN0U1JHK3dQL09NUlBkdi9odk9rbk5mNGdha0FZZTBWWHU5CmJ4d3BDYk9NVUhya2U2VENNdnRteWlHZGdIUUw1VWhpQXlaV3VTK0lMWStSUTJFUCtWSVpKc0V2OXBxNkVOaVkKdGlaVUpsVTNrZFBYTkc4eFg3QzdpSnJyWXpaMXFGSmluWHloM3dJREFRQUJBb0lCQUJJOGFYazJUSUdrSDhJbgp1NlQzYnBYV2hSemhMQmJOMGs3SUdMM2Jhc2pKcmtCMUxQVEZVM2RCYVN2UGR5YVRCamNGY2pxOXNiTld3OVJ1CnZCVk5UcndJVVFFU0hwK3FVbjVtcjNZclhHenovWThrUHg0RlFFUEFNcTdUbllhckNvS0tPUFQxUmhNZ0xPZnoKcHdsVExIV2dZdmc5cFBkVEQyamRSK09qM2NJZEJXU1l6WHlDTFBMWlR0bGpWVUlRc1Z2SDM0WEFlNUNIcEM1cwpUci9CamI0dGVDWklhOGlILzM1YWRyVm8wOWo5VFpWRUdWcXNwTDRPUHkvVk1PSFRXMDZqd09vMGFBRFZZS0ZGCmNldERrWXpxb3NVeUQrUnRTeldpUThyaG4xRHc2UStOZ1BzcmNPVFl4MWRhT001TGw3OHlXOEZJR3k2bmVMMmQKVzFMNmV0RUNnWUVBeWgvRk5oa1EvU0pRTGk4WFN1MWpkcnlOY0xIUnFMVUY1blRHQ1h0RVhnRUR2UUplSFZEdQpFMGZTclQ2NjZsdkNOY2huTW1mSFd5S1ZteEgzKy8xblhTUTVkTEtMdWU0bHZPaldRa0lzRHN1L1hrQ29BUGdNCmdLb2VzL1B2cU1aMVZOSk4vc2hEUHR5K29Gc1dURC9qOUFUcmRrZU1FYnNkcVZwcVFnNVNUN2NDZ1lFQXc0clAKaHlrQjRiYTR2OXp5WWVNaXF6R1FuUGRRN0l2emY0cTNVN0p3amdOdmhJZFZmaXA5bUxBZmZSbkZMMnNRNk5xOQpuT1R3RnlHV0ZINndZOGV1anVSa1h0UnhBaDd4WFZtejNMcXRtS01PV2VJcGdPN3N1dDJuU3p1elpPaUI3VmtMCm9CZFgvR0F2czU0QVg1VWZNa2hwc3crRjByZy9MaGRuTDhzeDd4a0NnWUVBeWErb0J0SStYSWlIdjMzbjNURkIKaGJLaDVDamJqMStLMHFvRkRtTDlGbHdtMGN4eUF3akZkMkc4dkhpUzVOWEkxZ2Z4eVo4Nmt4clFjOXNiTzB4aApmdFJ0ckorWXcxLzZNaVdYM3FmTzlMaWtiVFZSTHg1VXczSjlqbzFEd0lLL2czTVN0c0E0TVpydGNHOVRzYVF6CkgwUmxmREhxZDZyaDd5STBVMU9kR01NQ2dZQXdYQlFYQ1QwOTVVS3JzS2tCTEh0V2UxdVlkbEc5THA5NTI0U2IKWG5ZWHFTSGJWTnovNXVKSThNWFkycGE1czNEckphM2ZMMzl4T1EwMDVHQWJUVGNPZjgyUzVsZE1mdnFTYTZ6ZgoyZ3MweEo2My9BYm5yQzgveDdHb0dZdTBXUXhJOXN5NU93eTNqZEkrU2NVdDNtTm92Qi9uK043UHptRlJ0TmdBCktmQ2ZnUUtCZ1FDYVhnejJpZVFubW1WMlVpeHdhc0NNUDRqcXgybENoTmlGaWQzT2lrdk92RkF4QndQT2NqTDQKdWZrcVRDQ0hEVUZGQzRtaHBBajBNQUhwS2ZXVHExTzhSS3NRYVNNL1ZQbUcxRUdYKzU4R0JhUkZ1bGRVZWl1cgpOaG1CeGVpUkxmS0UvUDJvdU50VDJnZmE2ai9kS2RrckkzN3ZweGlYdmFRdmM3SmpCaURYa0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/apiserver.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbW1QTU11dlp4TEVzT1lhd3I4WHB3SnRsdlJNTU04a2p0QVJaZk5qVkhUZCtid2hJCkJyQ0ovWE1SSTA2MDlzZHhNODkrWG9OdituV2pUemtRWHdaaVE2R1ZuOTRnSXpmdGdSMGhkblFJRkdLaU4wbW8KTEZPdG52eG8zaTIzSHlOa09TdWFneG1JR1Zja2FqM1BCWWVkbTdFTUJvQ05jVE9seDk1czFUdEdtdTlRcStDUwp0Tm5PUDBQSklVN3B6MTFuUzRSQWNkL0tibzFweFN0U1JHK3dQL09NUlBkdi9odk9rbk5mNGdha0FZZTBWWHU5CmJ4d3BDYk9NVUhya2U2VENNdnRteWlHZGdIUUw1VWhpQXlaV3VTK0lMWStSUTJFUCtWSVpKc0V2OXBxNkVOaVkKdGlaVUpsVTNrZFBYTkc4eFg3QzdpSnJyWXpaMXFGSmluWHloM3dJREFRQUJBb0lCQUJJOGFYazJUSUdrSDhJbgp1NlQzYnBYV2hSemhMQmJOMGs3SUdMM2Jhc2pKcmtCMUxQVEZVM2RCYVN2UGR5YVRCamNGY2pxOXNiTld3OVJ1CnZCVk5UcndJVVFFU0hwK3FVbjVtcjNZclhHenovWThrUHg0RlFFUEFNcTdUbllhckNvS0tPUFQxUmhNZ0xPZnoKcHdsVExIV2dZdmc5cFBkVEQyamRSK09qM2NJZEJXU1l6WHlDTFBMWlR0bGpWVUlRc1Z2SDM0WEFlNUNIcEM1cwpUci9CamI0dGVDWklhOGlILzM1YWRyVm8wOWo5VFpWRUdWcXNwTDRPUHkvVk1PSFRXMDZqd09vMGFBRFZZS0ZGCmNldERrWXpxb3NVeUQrUnRTeldpUThyaG4xRHc2UStOZ1BzcmNPVFl4MWRhT001TGw3OHlXOEZJR3k2bmVMMmQKVzFMNmV0RUNnWUVBeWgvRk5oa1EvU0pRTGk4WFN1MWpkcnlOY0xIUnFMVUY1blRHQ1h0RVhnRUR2UUplSFZEdQpFMGZTclQ2NjZsdkNOY2huTW1mSFd5S1ZteEgzKy8xblhTUTVkTEtMdWU0bHZPaldRa0lzRHN1L1hrQ29BUGdNCmdLb2VzL1B2cU1aMVZOSk4vc2hEUHR5K29Gc1dURC9qOUFUcmRrZU1FYnNkcVZwcVFnNVNUN2NDZ1lFQXc0clAKaHlrQjRiYTR2OXp5WWVNaXF6R1FuUGRRN0l2emY0cTNVN0p3amdOdmhJZFZmaXA5bUxBZmZSbkZMMnNRNk5xOQpuT1R3RnlHV0ZINndZOGV1anVSa1h0UnhBaDd4WFZtejNMcXRtS01PV2VJcGdPN3N1dDJuU3p1elpPaUI3VmtMCm9CZFgvR0F2czU0QVg1VWZNa2hwc3crRjByZy9MaGRuTDhzeDd4a0NnWUVBeWErb0J0SStYSWlIdjMzbjNURkIKaGJLaDVDamJqMStLMHFvRkRtTDlGbHdtMGN4eUF3akZkMkc4dkhpUzVOWEkxZ2Z4eVo4Nmt4clFjOXNiTzB4aApmdFJ0ckorWXcxLzZNaVdYM3FmTzlMaWtiVFZSTHg1VXczSjlqbzFEd0lLL2czTVN0c0E0TVpydGNHOVRzYVF6CkgwUmxmREhxZDZyaDd5STBVMU9kR01NQ2dZQXdYQlFYQ1QwOTVVS3JzS2tCTEh0V2UxdVlkbEc5THA5NTI0U2IKWG5ZWHFTSGJWTnovNXVKSThNWFkycGE1czNEckphM2ZMMzl4T1EwMDVHQWJUVGNPZjgyUzVsZE1mdnFTYTZ6ZgoyZ3MweEo2My9BYm5yQzgveDdHb0dZdTBXUXhJOXN5NU93eTNqZEkrU2NVdDNtTm92Qi9uK043UHptRlJ0TmdBCktmQ2ZnUUtCZ1FDYVhnejJpZVFubW1WMlVpeHdhc0NNUDRqcXgybENoTmlGaWQzT2lrdk92RkF4QndQT2NqTDQKdWZrcVRDQ0hEVUZGQzRtaHBBajBNQUhwS2ZXVHExTzhSS3NRYVNNL1ZQbUcxRUdYKzU4R0JhUkZ1bGRVZWl1cgpOaG1CeGVpUkxmS0UvUDJvdU50VDJnZmE2ai9kS2RrckkzN3ZweGlYdmFRdmM3SmpCaURYa0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/apiserver.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5ekNDQXQrZ0F3SUJBZ0lJWHNvbm9sZ2owM293RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEyV2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psTFcxaGMzUmxjakVlTUJ3R0ExVUVBeE1WCmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUFtbVBNTXV2WnhMRXNPWWF3cjhYcHdKdGx2Uk1NTThranRBUlpmTmpWSFRkK2J3aElCckNKL1hNUgpJMDYwOXNkeE04OStYb052K25XalR6a1FYd1ppUTZHVm45NGdJemZ0Z1IwaGRuUUlGR0tpTjBtb0xGT3RudnhvCjNpMjNIeU5rT1N1YWd4bUlHVmNrYWozUEJZZWRtN0VNQm9DTmNUT2x4OTVzMVR0R211OVFxK0NTdE5uT1AwUEoKSVU3cHoxMW5TNFJBY2QvS2JvMXB4U3RTUkcrd1AvT01SUGR2L2h2T2tuTmY0Z2FrQVllMFZYdTlieHdwQ2JPTQpVSHJrZTZUQ012dG15aUdkZ0hRTDVVaGlBeVpXdVMrSUxZK1JRMkVQK1ZJWkpzRXY5cHE2RU5pWXRpWlVKbFUzCmtkUFhORzh4WDdDN2lKcnJZeloxcUZKaW5YeWgzd0lEQVFBQm80SUJHRENDQVJRd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNDTnFSRHY5VVJkb051eG1CZVp3Yk9wMGNrL2pBZkJnTlZIU01FR0RBV2dCUnpVM2oxCkFyd2dxN1NTb3lmbUE5dC9QZVZSaERDQmxBWURWUjBSQklHTU1JR0pnaEpsYm5ZeExXRndhUzV5WVdabVlTNTQKZVhxQ0NtdDFZbVZ5Ym1WMFpYT0NFbXQxWW1WeWJtVjBaWE11WkdWbVlYVnNkSUlXYTNWaVpYSnVaWFJsY3k1awpaV1poZFd4MExuTjJZNElrYTNWaVpYSnVaWFJsY3k1a1pXWmhkV3gwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzCmdnbHNiMk5oYkdodmMzU0hCS3dlQUFHSEJIOEFBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUgwdkJkMTEKR3crMnhMWmE1cm8zQWNCREg0T1dVdDJSeGQ4N3BFbDliRy9kcjVsUEtpRzZ0SWZtc1d0UzhzaWIyeSszOWIvUQpubXdXYUVkRTVoRnpSNUliUkk4WjNsOCsxemxYTWtTUy9nQ05xS25xSGFTcGFYYmxBNk44cklzTFFpYmxmenpSCkNieFhTbHdQc3N6YnVkaTRVamxiMS9URzUzZDh2M2pxakRFZWdXYzZPOGpMcE9GWFBNSS90bmx3eHZBT3FMb3QKWnJXRTRaWktXTElDZW54alVLSjBndjlWSXNkdEhVUmlKbzRjOHZNRTdram5CaDRYZHdZeDV1RWxKdzJPUmRxbApsK25xSW1SMkMzV1hsam1Ma3dBdlR0TmZhc1VuM3YzUkVTbi9oSFhoRURFcmVuRGhUeG1tS1JORFBDR3FHV1NTCkJGVE44QVdQOHY1Q3VWND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJSDVHM1g2SVJ4cm93RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2tRK3NSZkZTTVRMTm4KUVZOLzM4UmNYc3VJbmQ4WlB1aEUza0hwRGdpbXJGdUsyc0lDS3BvL2I0NldNanpDR2lzZFJ0U0JLZU55cEZsVgptNVNuV3VjdXN6dkR0R1ExVGZ6dEtJTmxXelVxazJ6a2FjbUViNGRkajZMK3hpOVIxMmpJSUp3K0VvK0RJSGhiCnk0T1c3NWhLMUIxOXdQOGlEVmJzajh3Qk1iLy9qN2N5OENIUE9xWU9zTFhURkw0MEszSEozM3REU3ptK3FiZnoKNjI5RllmL3JNc2pVKzV5MS9GdUJrMGtvRjF3dGtOVy9OYUdoY05zYjBLV1hVNEVnN3lrOXJQRXVQOFRtSS8xcApIeThscFVEVE54TzNaV3l5SXhmdkw2azVqQVlRVzZaVHRwR0hiNmRyR3BBZjdPaHY2K3ptVGg2Y3Z3engvQVEzCmo5cjl1K3RCQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSelUzajFBcndncTdTU295Zm1BOXQvUGVWUmhEQWZCZ05WSFNNRUdEQVdnQlJ6VTNqMQpBcndncTdTU295Zm1BOXQvUGVWUmhEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDWWdkWExST2k2MnVsL0VaClNTU1RnOG5KRlpraWlwV1o5QXp6NjRtQkRMeVNjVk80OG1JUGthbzZSbmY2Tk00alBUMVkvY1lSNGJJRUczSkoKaGR1NXpoSWNBWjJVRHh6ZTFwTVRiOE01WVkyNEhhSS9UWHgwbkxtQVN0WUtzUW5GeDdRR2s2ZWJRaGlOQVo5TgpWc3c1U1ZmM3F2aHhWSWFRVGNDdXRpQUxzblpnNnl3OVgzOHV5YnhCN2JpbUZyRjBwd0Q1ak9HVEs0bHBnMHRsCmppOXFvcnk0Wk9FZ1dJQ0VacVB3enJsN1FiODEwTTdMcWZ6TzVUTWxQZnVNTHBseEtzN3B6U2lZUlZlL09paTMKZndpQVdVSThjSmM3cWNjSmcvZTdoVTFzdFRKaUpmdWo3Zk0xRC90Sm1FakRLazdnd1hNMi9OU1p2K0d1ancxagorUHV2cHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.APIServerProxyCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJS2dMM3lrTzd1ejR3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1qSTRNVGswTlRRMApXaGNOTWpneE1qSTFNVGswTlRRMldqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5QVJKS0tFSTZ4NmtLZ1VYYVowTDNscVBybWZEcXJHeGhJdi9vYm1VOW5USwpUclRkbTNhck5UKzNjSnMxSlpGSStQQlhyTENza2xLY0pHVzVMK1kvTEx5TXN2ZzRSSjlhRzJFT2tIZGJ2MXBmClZKTy9Ydlp5TW9QVHF6cHV3Rk04QWR4aFRCNUJXcFlrTTBpTWM3YzA2UnVsNnQyUnJqYUxDRlFXN012NFA1bGQKbTB1a3FHcWJzZmNOL3kyc0FaSGI3dXQ3eWp6YjRWajI4YUpFb1lwc0ladUJRVzRlcld0UWdPUG5DeFRDa2dDdQp3NElQUDNJMU5mR3BwdTNGZitmZUQwUThydDBuQUV2Z2l5K0RXd3A0cTRNTjZkSVVKb2lHSytURHF2WURlWnoxCnFNa09kQUk3Wko5eGxuc2c2ckgydkgyUXowQW4xTWNaK3pWTk9LNk5Md0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVXlHMU9VRHMraTVIdlI3MUtEZ2tMbDErRUl2QXdId1lEVlIwakJCZ3dGb0FVYzFONDlRSzhJS3UwCmtxTW41Z1BiZnozbFVZUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR2dyQ0RrSEtkdmE0ZjBmdEJ3NkExQUsKZ2s0eGhoOEIxYy9xQW9yd29MQUtCcXcrZzROWS94Q3JRSDVncHljT0VPMmx6dFlBeko5YWVzVHZFWEhsbHJVawpBeVBsMmtvNzdVV01LeFpUSGpXd3d0MStEMDBsZHBCKzR3TlBLenZkRStoZ2RQTWxpZFFIL3Q2YTBuSWNPb04rCjNiMTVaZlAzMjZaSkxTWXRRM3RNM2lwcm1FaDN6OEF1dWVORWRjVVA3bFF1b3FsaTJoREFvSVV5b1NKZHZFTXUKNVpwVWxGeXNkQzJLY3hNOHg0STRiYjhwbVNKTmhORTlDWWxzZ0RnS2pNZTR6Ny9uMU45ZW1uV1pIeXNydE9NVAo1b2M1ajY2dXlwNVJmREV4dVVFTkFLMm54QzlMa1pQdElESE1aUlByY29ZVVhCNndZeVZiT1BOUGpxcTVWMms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUFSSktLRUk2eDZrS2dVWGFaMEwzbHFQcm1mRHFyR3hoSXYvb2JtVTluVEtUclRkCm0zYXJOVCszY0pzMUpaRkkrUEJYckxDc2tsS2NKR1c1TCtZL0xMeU1zdmc0Uko5YUcyRU9rSGRidjFwZlZKTy8KWHZaeU1vUFRxenB1d0ZNOEFkeGhUQjVCV3BZa00waU1jN2MwNlJ1bDZ0MlJyamFMQ0ZRVzdNdjRQNWxkbTB1awpxR3Fic2ZjTi95MnNBWkhiN3V0N3lqemI0VmoyOGFKRW9ZcHNJWnVCUVc0ZXJXdFFnT1BuQ3hUQ2tnQ3V3NElQClAzSTFOZkdwcHUzRmYrZmVEMFE4cnQwbkFFdmdpeStEV3dwNHE0TU42ZElVSm9pR0srVERxdllEZVp6MXFNa08KZEFJN1pKOXhsbnNnNnJIMnZIMlF6MEFuMU1jWit6Vk5PSzZOTHdJREFRQUJBb0lCQURxSDFvakhKdjcyeG45dApZZjZMOEc4dS9TRENTS1hvdmRQVnpBYWRjaFAwOVVhMjhxcU52V2dscng2S3JMRERwU0VENUFRcTV6VWlhNExUCkthLzBwc1FHb1AyMldYRHJXTWp1Uy83R2p0aWVMNHRtZVBmbkVsL3A1OFVSb2xzeGdEdmpLNjNFcE1kSGJHeDkKYkd4b1RsbHd0OHJVNzg2Vk0zWktkVEx5TlVFV3NXRjJIT25FY1ZJSFJNN2dSTE5XM1FiVlB3L0xmN28xYXBSegpZWEdMV0J2N2l4dTZjKzhxRURzL0RNYmFram1zMlZaVUJvR09KSXNZTGFNdTcwd3lLckVVZDFwK1BZUE4yeEtqCkQrSDVEZnNBTTMyUWVpV3NwekhxRllMM1pRQ2NtLzBEWUhxN2hyVTN0dkRaT0x2WWtTVXZYaEN3d3lNeHV4aWIKdkpPTmhtRUNnWUVBMHF5SFpvTlU4amNIYnNuQTdGQ0RZK1Q2d2VwZkRSUXl1WFJLdi82THE1UEZGQlBUWjhDWQpLMmtwYjd3YmFjTk9tM0FEK1Z1aTVkSnpDbUJjUXU4MFpkMHg1K2RTaERYbm4rYUJCQldmck91R0d1U3EzZ0RqCnh3aWUvdnFvNjRMYVk2Qjg1Y3VuU3pUS2J6VDBpTnEvOWY2S2U2SHVJYVl2N0pQZFJteklENmtDZ1lFQTh3ekgKOHR3MXJ5a1RDYnFUaTZuMSs0MjIzK0NpRjZsK1J2Z0xBVlBHR3U3cDJQYjEvem4wQkd5cGRhZVFjR0MzRzVZcQpBVFNCeDZ1RG9ha0ZMczBFYmpHMWhwVnZxK3VqV21aSjBKcVllYnc0cWh6dzNCaGRSRGRPR3dONlN1QWdQandaClFRRUxIdk5VbCtlZnVNQ09tSVRxMStFZGlpV3BmT0I4SWRMWEhSY0NnWUVBczY2aTdUUW1SMC9YN3czMGxaazEKOXdWZE9mY0Rpc3duVnpWd2E4QldyOGdnMXJieUlCT0x0YnJEdEtEallKbExlaGRYekYzejJjQmNqZ1VScTZVSgpNN2dzMEhYalV4QUd0Y0tMVjBoNkg2bmhmeDU0L1ZBVTliVE1wdnh6Qml0Y3lJd2crbjF2K2h6VWEzVG0rN0pXCjl5QmFUSWdYNm1zcmhNTzRmbEJaY2NFQ2dZRUFqcGhuRHZObmc3YkRkcWZDUE9TZ2JzKzhCU2xUc0RJKzVnQk0KNUtCejBBVnZxVjFyQWl6TUgzUnBENkFadS9UaU9Rc201Y0lhaWp6MFkzbzRramF5Ykx3NVZoYUNpQWtkczhIagplTUhheDBGSXRYVjVVb2Z3NEQ3YVVqcitHc1BYNXV0M25ZMnhLcDEwZWhMb3dJb29udzhNZ1UrUDl5Y1ZnekJwClk2YkJrazBDZ1lCODRpSVhCZFMxNU52c256TVdkdmpWTEMyWW5RY0JKV0loNmdxcGVIcGhaa1JQZ1JKdVVvNUQKMmRjNFNneWFxTzZtS3lIejdKQlB0UitCV3lJLzFnWlpLQ2dabE5VUC9lY0Y4RVlOd2llQmhySHlMTC9uY0Y3Sgp2MGF1Z3JiRXU0anluQUhuSXZ2R25zZS96Z3JkSnBBcDBMNG9NRUkweU54STBjRnlpV1BZa1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/apiserver-proxy.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUFSSktLRUk2eDZrS2dVWGFaMEwzbHFQcm1mRHFyR3hoSXYvb2JtVTluVEtUclRkCm0zYXJOVCszY0pzMUpaRkkrUEJYckxDc2tsS2NKR1c1TCtZL0xMeU1zdmc0Uko5YUcyRU9rSGRidjFwZlZKTy8KWHZaeU1vUFRxenB1d0ZNOEFkeGhUQjVCV3BZa00waU1jN2MwNlJ1bDZ0MlJyamFMQ0ZRVzdNdjRQNWxkbTB1awpxR3Fic2ZjTi95MnNBWkhiN3V0N3lqemI0VmoyOGFKRW9ZcHNJWnVCUVc0ZXJXdFFnT1BuQ3hUQ2tnQ3V3NElQClAzSTFOZkdwcHUzRmYrZmVEMFE4cnQwbkFFdmdpeStEV3dwNHE0TU42ZElVSm9pR0srVERxdllEZVp6MXFNa08KZEFJN1pKOXhsbnNnNnJIMnZIMlF6MEFuMU1jWit6Vk5PSzZOTHdJREFRQUJBb0lCQURxSDFvakhKdjcyeG45dApZZjZMOEc4dS9TRENTS1hvdmRQVnpBYWRjaFAwOVVhMjhxcU52V2dscng2S3JMRERwU0VENUFRcTV6VWlhNExUCkthLzBwc1FHb1AyMldYRHJXTWp1Uy83R2p0aWVMNHRtZVBmbkVsL3A1OFVSb2xzeGdEdmpLNjNFcE1kSGJHeDkKYkd4b1RsbHd0OHJVNzg2Vk0zWktkVEx5TlVFV3NXRjJIT25FY1ZJSFJNN2dSTE5XM1FiVlB3L0xmN28xYXBSegpZWEdMV0J2N2l4dTZjKzhxRURzL0RNYmFram1zMlZaVUJvR09KSXNZTGFNdTcwd3lLckVVZDFwK1BZUE4yeEtqCkQrSDVEZnNBTTMyUWVpV3NwekhxRllMM1pRQ2NtLzBEWUhxN2hyVTN0dkRaT0x2WWtTVXZYaEN3d3lNeHV4aWIKdkpPTmhtRUNnWUVBMHF5SFpvTlU4amNIYnNuQTdGQ0RZK1Q2d2VwZkRSUXl1WFJLdi82THE1UEZGQlBUWjhDWQpLMmtwYjd3YmFjTk9tM0FEK1Z1aTVkSnpDbUJjUXU4MFpkMHg1K2RTaERYbm4rYUJCQldmck91R0d1U3EzZ0RqCnh3aWUvdnFvNjRMYVk2Qjg1Y3VuU3pUS2J6VDBpTnEvOWY2S2U2SHVJYVl2N0pQZFJteklENmtDZ1lFQTh3ekgKOHR3MXJ5a1RDYnFUaTZuMSs0MjIzK0NpRjZsK1J2Z0xBVlBHR3U3cDJQYjEvem4wQkd5cGRhZVFjR0MzRzVZcQpBVFNCeDZ1RG9ha0ZMczBFYmpHMWhwVnZxK3VqV21aSjBKcVllYnc0cWh6dzNCaGRSRGRPR3dONlN1QWdQandaClFRRUxIdk5VbCtlZnVNQ09tSVRxMStFZGlpV3BmT0I4SWRMWEhSY0NnWUVBczY2aTdUUW1SMC9YN3czMGxaazEKOXdWZE9mY0Rpc3duVnpWd2E4QldyOGdnMXJieUlCT0x0YnJEdEtEallKbExlaGRYekYzejJjQmNqZ1VScTZVSgpNN2dzMEhYalV4QUd0Y0tMVjBoNkg2bmhmeDU0L1ZBVTliVE1wdnh6Qml0Y3lJd2crbjF2K2h6VWEzVG0rN0pXCjl5QmFUSWdYNm1zcmhNTzRmbEJaY2NFQ2dZRUFqcGhuRHZObmc3YkRkcWZDUE9TZ2JzKzhCU2xUc0RJKzVnQk0KNUtCejBBVnZxVjFyQWl6TUgzUnBENkFadS9UaU9Rc201Y0lhaWp6MFkzbzRramF5Ykx3NVZoYUNpQWtkczhIagplTUhheDBGSXRYVjVVb2Z3NEQ3YVVqcitHc1BYNXV0M25ZMnhLcDEwZWhMb3dJb29udzhNZ1UrUDl5Y1ZnekJwClk2YkJrazBDZ1lCODRpSVhCZFMxNU52c256TVdkdmpWTEMyWW5RY0JKV0loNmdxcGVIcGhaa1JQZ1JKdVVvNUQKMmRjNFNneWFxTzZtS3lIejdKQlB0UitCV3lJLzFnWlpLQ2dabE5VUC9lY0Y4RVlOd2llQmhySHlMTC9uY0Y3Sgp2MGF1Z3JiRXU0anluQUhuSXZ2R25zZS96Z3JkSnBBcDBMNG9NRUkweU54STBjRnlpV1BZa1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/apiserver-proxy.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJS2dMM3lrTzd1ejR3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1qSTRNVGswTlRRMApXaGNOTWpneE1qSTFNVGswTlRRMldqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5QVJKS0tFSTZ4NmtLZ1VYYVowTDNscVBybWZEcXJHeGhJdi9vYm1VOW5USwpUclRkbTNhck5UKzNjSnMxSlpGSStQQlhyTENza2xLY0pHVzVMK1kvTEx5TXN2ZzRSSjlhRzJFT2tIZGJ2MXBmClZKTy9Ydlp5TW9QVHF6cHV3Rk04QWR4aFRCNUJXcFlrTTBpTWM3YzA2UnVsNnQyUnJqYUxDRlFXN012NFA1bGQKbTB1a3FHcWJzZmNOL3kyc0FaSGI3dXQ3eWp6YjRWajI4YUpFb1lwc0ladUJRVzRlcld0UWdPUG5DeFRDa2dDdQp3NElQUDNJMU5mR3BwdTNGZitmZUQwUThydDBuQUV2Z2l5K0RXd3A0cTRNTjZkSVVKb2lHSytURHF2WURlWnoxCnFNa09kQUk3Wko5eGxuc2c2ckgydkgyUXowQW4xTWNaK3pWTk9LNk5Md0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVXlHMU9VRHMraTVIdlI3MUtEZ2tMbDErRUl2QXdId1lEVlIwakJCZ3dGb0FVYzFONDlRSzhJS3UwCmtxTW41Z1BiZnozbFVZUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR2dyQ0RrSEtkdmE0ZjBmdEJ3NkExQUsKZ2s0eGhoOEIxYy9xQW9yd29MQUtCcXcrZzROWS94Q3JRSDVncHljT0VPMmx6dFlBeko5YWVzVHZFWEhsbHJVawpBeVBsMmtvNzdVV01LeFpUSGpXd3d0MStEMDBsZHBCKzR3TlBLenZkRStoZ2RQTWxpZFFIL3Q2YTBuSWNPb04rCjNiMTVaZlAzMjZaSkxTWXRRM3RNM2lwcm1FaDN6OEF1dWVORWRjVVA3bFF1b3FsaTJoREFvSVV5b1NKZHZFTXUKNVpwVWxGeXNkQzJLY3hNOHg0STRiYjhwbVNKTmhORTlDWWxzZ0RnS2pNZTR6Ny9uMU45ZW1uV1pIeXNydE9NVAo1b2M1ajY2dXlwNVJmREV4dVVFTkFLMm54QzlMa1pQdElESE1aUlByY29ZVVhCNndZeVZiT1BOUGpxcTVWMms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.AdminCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRVRFeitlMmZxT1F3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEyV2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvNk81VXptbVN2ZGIvbWtDQgp0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUwUW5KVXIwR3lOUWRMOUlrCjR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NTBDS0ptbllOOEZWRHJZWVIKY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLRnZTVG1qNmdXMlc3OHB0Sgo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHdjT2FvclFqc3BLcEQwaVZQCmxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGSUkycEVPLzFSRjJnMjdHWUY1bkJzNm5SeVQrTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcnRKS2pKK1lECjIzODk1VkdFTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYytEUmdvOVZMUW5yWVV4bm02Z0UrajZBcXJyYjYKVFBUNzQ5bjNVZVVrMG42d3l6U2VEVTNSOFhrQ2tjenJyZjZqSzJKSHl4YWRVS1Mrc1JmTFhRMUFDdjdZdUNZago2UldPMHFCcEpDeFMvZ2laTTNFL0N1KzRYMmhoYU1JdWVSMWtaeWhORDhyOXA0N3h0M3MvVnBYaEs5MTR3U1FWCmJ6N0wwWnJLYzNjNlFTYTFscVRzYXE4NU9pVXFUaWcwTGNMZmNqY0JTb1ZFV0FCa1AwSXgxMzhYdnJmVCsxUUwKeXV0RC9IS1BYWTMzVWxkMkVLdzZMbzhzR2dzQXBQejU1UUdoMGpLajZheWRQUE1HbmNjS2V0SjdJR0pPL3Mxagp0Y3RpbllFcC85d0YvZ2VFbVlPTHNEKzc3S3hQcUtySFFZQi8xeUs2dGxXcVErWW9sclNQQjM0cwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvCjZPNVV6bW1TdmRiL21rQ0J0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUKMFFuSlVyMEd5TlFkTDlJazR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NQowQ0tKbW5ZTjhGVkRyWVlSY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLCkZ2U1RtajZnVzJXNzhwdEo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHcKY09hb3JRanNwS3BEMGlWUGxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJBb0lCQUh2YUFndnFjZDM1dk5xOAp6Z0I2YWxydGxiRWIwM2JEZzJzbEZ5UHBGd1lmL3ZDSDJBenNJRDlMUEZNTmVKKy85VWorc2U4SDRHeUpZQWRyCnllK2RoNEVENkc0dWIrbFYxN0VJM2xRcXN2WUtGUExRV2hCd0xWdHpiZUF6bjk2RmxtVFJNU2lDTWVHVzNpNEkKN09ERlJUQ2hFeS95SGtybDFiWTdLcitSdmNuTFIrK2t4UnVCNUwyamJueGw3WGhlSnJqM1dKRG1GYnBtZVJVdwpnc2lENnZPZmhZanRIOFNQY2FTaGpFbHpleG1lV2dEYUlWNjMvVGF1WmtudzVSM2lCUjZEcmlyK3pEV3gzMkFYCjJ4bVhONHFkR0FDWnpzK0Noemc4c1BLWDk5bnQ5Zld0cm92UTJ3TWVtY1FWN2VkbWcwTjVxajNYNU5UU2dpN00KTVhNQkcvRUNnWUVBenB6VVNNZkZwYkQvYUUwL1B3YUgvSTV2YlFudVhsdlVWakFqRnFQb2UxWXY2cmFmMk1jMAo1UzBVWGxtbzVaRzdXWllvMW1la0dVdW91U3NsU3J4ZS9oZWlPcDhEUE9tRVZSNHQwRGVqR092SGFhdEpWMC9rCnh5SUNRMzAvRy8zWXBuUEE2STcyaGhOanVRSUVSRnI4cy9oSjIyK1Q1QzdnUFpHTSs2T0lEKzhDZ1lFQStMYzAKWlhCWmNkU1liYXdTeWtxV2RqR1pBaGcrR2RBZi82akNNTmF4dTk3dW5mN2kwWEhPTHBqS3VnVksydncwaGswRwp2OTk0MGJ2VjZucDdRQjNOcVhuZjM2N0hLMnZGdTN6cC9GeDdheTJ4ZmQxM1RJYlpYSFVZVTErVTJtZjdtN2tTCm15aEVOOWplZXBuMjJFRnJKSEtDZDc0Yjc4UGw3eXFrd2F4OHYxc0NnWUVBemdoVUpMT2FJODFxRkUrYnR6VEQKSEpYSkJabjJxdisxc2JEVS9MbThsbWx1NVFieVJaRDQ3V1JUd0haMlYxOUl6V0JSSHVWQkhieDE1eGpnV2pPWQpJcGZjdmNwZHh6c3lMRk1vNms3aEJIUHlhaXhWdVl6QkhkYUxIVlBqUC8yV012NlJLeGVOUEV4UGtHa3phaHExCmpwNFV3STcya29Bd094Vk8yb3pMbk44Q2dZRUFxSEpjR0QrcE5JRUo0MjFoSklTenRzVU1uZkNSVHFZNHBjeEUKQ1JPL09FQmFWOE5qRnZyKzYyd3NFU1M0ZCt2TUh4RlgrdWQ5U243dStHbVB3L0xyY1ZiTG14RWliM1FFYldEQwprRnFLZENKMFRZeUsyZGVTcXgzYkpjeGNZamQrbnc4UFhPbyttWnhWd2E4NUVXbnRDTGhOU0pBSEY3SVRycEd4CkdFS2NFblVDZ1lBNG5Ub2hzbEpKTStkTUN6TFZYRHFEYmtpeVFNWUhVN2hhQ1h1Zm9PWHR2NG10RHNMY2VDUlgKREsyclBQMmpMT2lXOGcydVM2M3lQMkRrVFNqQUhqU21zeVJrOHpqVllYaFFCcXNUWTJTS1o5b1Zvbmd0cmFITQpEcUJRZlZ2K0tSYnh2RDdKRXMzVnNzTFliVkpQdUw0Q0JTMnIxMXlHNmF0K25wcytVZER6bWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/admin.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvCjZPNVV6bW1TdmRiL21rQ0J0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUKMFFuSlVyMEd5TlFkTDlJazR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NQowQ0tKbW5ZTjhGVkRyWVlSY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLCkZ2U1RtajZnVzJXNzhwdEo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHcKY09hb3JRanNwS3BEMGlWUGxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJBb0lCQUh2YUFndnFjZDM1dk5xOAp6Z0I2YWxydGxiRWIwM2JEZzJzbEZ5UHBGd1lmL3ZDSDJBenNJRDlMUEZNTmVKKy85VWorc2U4SDRHeUpZQWRyCnllK2RoNEVENkc0dWIrbFYxN0VJM2xRcXN2WUtGUExRV2hCd0xWdHpiZUF6bjk2RmxtVFJNU2lDTWVHVzNpNEkKN09ERlJUQ2hFeS95SGtybDFiWTdLcitSdmNuTFIrK2t4UnVCNUwyamJueGw3WGhlSnJqM1dKRG1GYnBtZVJVdwpnc2lENnZPZmhZanRIOFNQY2FTaGpFbHpleG1lV2dEYUlWNjMvVGF1WmtudzVSM2lCUjZEcmlyK3pEV3gzMkFYCjJ4bVhONHFkR0FDWnpzK0Noemc4c1BLWDk5bnQ5Zld0cm92UTJ3TWVtY1FWN2VkbWcwTjVxajNYNU5UU2dpN00KTVhNQkcvRUNnWUVBenB6VVNNZkZwYkQvYUUwL1B3YUgvSTV2YlFudVhsdlVWakFqRnFQb2UxWXY2cmFmMk1jMAo1UzBVWGxtbzVaRzdXWllvMW1la0dVdW91U3NsU3J4ZS9oZWlPcDhEUE9tRVZSNHQwRGVqR092SGFhdEpWMC9rCnh5SUNRMzAvRy8zWXBuUEE2STcyaGhOanVRSUVSRnI4cy9oSjIyK1Q1QzdnUFpHTSs2T0lEKzhDZ1lFQStMYzAKWlhCWmNkU1liYXdTeWtxV2RqR1pBaGcrR2RBZi82akNNTmF4dTk3dW5mN2kwWEhPTHBqS3VnVksydncwaGswRwp2OTk0MGJ2VjZucDdRQjNOcVhuZjM2N0hLMnZGdTN6cC9GeDdheTJ4ZmQxM1RJYlpYSFVZVTErVTJtZjdtN2tTCm15aEVOOWplZXBuMjJFRnJKSEtDZDc0Yjc4UGw3eXFrd2F4OHYxc0NnWUVBemdoVUpMT2FJODFxRkUrYnR6VEQKSEpYSkJabjJxdisxc2JEVS9MbThsbWx1NVFieVJaRDQ3V1JUd0haMlYxOUl6V0JSSHVWQkhieDE1eGpnV2pPWQpJcGZjdmNwZHh6c3lMRk1vNms3aEJIUHlhaXhWdVl6QkhkYUxIVlBqUC8yV012NlJLeGVOUEV4UGtHa3phaHExCmpwNFV3STcya29Bd094Vk8yb3pMbk44Q2dZRUFxSEpjR0QrcE5JRUo0MjFoSklTenRzVU1uZkNSVHFZNHBjeEUKQ1JPL09FQmFWOE5qRnZyKzYyd3NFU1M0ZCt2TUh4RlgrdWQ5U243dStHbVB3L0xyY1ZiTG14RWliM1FFYldEQwprRnFLZENKMFRZeUsyZGVTcXgzYkpjeGNZamQrbnc4UFhPbyttWnhWd2E4NUVXbnRDTGhOU0pBSEY3SVRycEd4CkdFS2NFblVDZ1lBNG5Ub2hzbEpKTStkTUN6TFZYRHFEYmtpeVFNWUhVN2hhQ1h1Zm9PWHR2NG10RHNMY2VDUlgKREsyclBQMmpMT2lXOGcydVM2M3lQMkRrVFNqQUhqU21zeVJrOHpqVllYaFFCcXNUWTJTS1o5b1Zvbmd0cmFITQpEcUJRZlZ2K0tSYnh2RDdKRXMzVnNzTFliVkpQdUw0Q0JTMnIxMXlHNmF0K25wcytVZER6bWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/admin.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRVRFeitlMmZxT1F3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEyV2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeUx2S0MvczVuVnhTNDJ0MFM3aW5yYkpjVXFyRFhaREtlMkd3WTBWN2N3cGp1cWUvNk81VXptbVN2ZGIvbWtDQgp0eVNQbjRieXJxVStFdmRzZSs2ZlIwNytudE1qb1I5SUZ4bFlZeC9nbWxzdmFZSUUwUW5KVXIwR3lOUWRMOUlrCjR3MVZPZFg2TXc3UUpMYk9qWk1ZRWQ0a0JHT3AreHovOHlRWHhXM0RQckRIT0Z2NTBDS0ptbllOOEZWRHJZWVIKY3ltWHg2N0FwdWRReDhMcUZ6S1dLMktjdDhGNUIyVzZZVHFZdE5sK3BLTHdIWFVLRnZTVG1qNmdXMlc3OHB0Sgo1ZjU1RzhHdzZpNmUxbktPSFErQmphbWs4V0NWRzg5R2VwYW9yNmZqa1ptMWNwRHdjT2FvclFqc3BLcEQwaVZQCmxEdnB4dWtOUEZZSXJweEE4UVQ2OVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGSUkycEVPLzFSRjJnMjdHWUY1bkJzNm5SeVQrTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcnRKS2pKK1lECjIzODk1VkdFTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYytEUmdvOVZMUW5yWVV4bm02Z0UrajZBcXJyYjYKVFBUNzQ5bjNVZVVrMG42d3l6U2VEVTNSOFhrQ2tjenJyZjZqSzJKSHl4YWRVS1Mrc1JmTFhRMUFDdjdZdUNZago2UldPMHFCcEpDeFMvZ2laTTNFL0N1KzRYMmhoYU1JdWVSMWtaeWhORDhyOXA0N3h0M3MvVnBYaEs5MTR3U1FWCmJ6N0wwWnJLYzNjNlFTYTFscVRzYXE4NU9pVXFUaWcwTGNMZmNqY0JTb1ZFV0FCa1AwSXgxMzhYdnJmVCsxUUwKeXV0RC9IS1BYWTMzVWxkMkVLdzZMbzhzR2dzQXBQejU1UUdoMGpLajZheWRQUE1HbmNjS2V0SjdJR0pPL3Mxagp0Y3RpbllFcC85d0YvZ2VFbVlPTHNEKzc3S3hQcUtySFFZQi8xeUs2dGxXcVErWW9sclNQQjM0cwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJSTF6UXpCYzJwQjh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNxNE1UT3pDdU0KS2dmeDc0eWgvU25XZjd3QjFVSXJhSTBvOFlNem5GYXZGY29uL3RXVEJCT3ZkdmZDdStJdHFpdDN5QkdPL2s0MAp3OEJiZnpJTkNybFE3ZzQydWpiTlFzVDhtbmd3Tzg1TUpvK0hBVU5ycjRZWUVDRFZ5UkVaUW90a1hZc1VwN3dYCkxPTFNLMDlWU2MwSiswTVBFNXhZZXp3dFRuYUdKS0VrSVJ4R2U2Q2VaQmExVDdybHU0SG5Mc3NjanZjamUrWWIKN0JISUZvdFhUdXpNVE9lNVNUbzZpbGIyOG1MTTNxa2NqM3MweEVXZHF5eGU0WEdtU2VGWldXRmc4eXN0T09oeQpQc21kVklhTzNLQUkwSk4wYVU3VG9vZytSSkFPL2VsUWU0VEp3RytOd1k0YWNIWTduQnNTd3pCWHZUa1pqR3d4ClROMjRJenF6a3RnRkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFmQmdOVkhTTUVHREFXZ0JSegpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZ0gvZzRSdko2WWJJCjlSUlpKR0d0Qk1qakJFRzRwNHhDeGt2MFFlNlUyNmR4QjBrczRqL2NWMkNNSGhLM0VNRUQ1Y0RVdyt1RTJwUFkKbUswV0Jyb1dGT0JsYlhDbGtOTHE2TEVlNEdyUVBTRGJTZFFJWXhTT0M4TUljd0NvZSsrenBGYTNHd21OK0huKwpRMzZjK1BCMnhnNnpHdzhXampQcGNFalh5TWR4czNQQzB3azRvZldqNTJjSkU0QnZjbjVzQkpEWGlHNWtGWEFNCjBmbG1tc05scGJiUC81NnV6c0U0d2IxUGwySXBJSXFLRFllZzM1Q1dYSmZPaEw5dTRRZGRQWFJKcmdvc2ZIT04KNE9mM3ZnT1cyaVFyQmh0MmFIZmNqWEdHc2NmNHhaa3BVemtuYTA3TGlYdjFDTzdiQ3pEMEh4ZDJkczNWNUh5QQpCY1IvZ0ZQellRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcXVERXpzd3JqQ29IOGUrTW9mMHAxbis4QWRWQ0syaU5LUEdETTV4V3J4WEtKLzdWCmt3UVRyM2Izd3J2aUxhb3JkOGdSanY1T05NUEFXMzh5RFFxNVVPNE9Ocm8yelVMRS9KcDRNRHZPVENhUGh3RkQKYTYrR0dCQWcxY2tSR1VLTFpGMkxGS2U4Rnl6aTBpdFBWVW5OQ2Z0RER4T2NXSHM4TFU1MmhpU2hKQ0VjUm51ZwpubVFXdFUrNjVidUI1eTdMSEk3M0kzdm1HK3dSeUJhTFYwN3N6RXpudVVrNk9vcFc5dkppek42cEhJOTdOTVJGCm5hc3NYdUZ4cGtuaFdWbGhZUE1yTFRqb2NqN0puVlNHanR5Z0NOQ1RkR2xPMDZLSVBrU1FEdjNwVUh1RXljQnYKamNHT0duQjJPNXdiRXNNd1Y3MDVHWXhzTVV6ZHVDTTZzNUxZQlFJREFRQUJBb0lCQUNydGJJUEhKdWwvWlorUgozbktUZHY4Nzk2OCtNL0ZUd3FLV2lhOWRoeWxWQUFRc01OdE9HdVBwcnpSc250VjUrcEdNNFZ4YTVxcTZ3b2c1CjNBa0t1S05zS29YMUllOU81czNPd0lMZGcyWCtDZkNRa0s5czJQTVNtaTBhNWdEQ2h1SWYzZURDZ3E0UHlLdWoKMWJwSFlBc3g1QmJWaG1GMEZCb05yQmptK3RSb1U5clZVaXA1cVlyT3JKUUVsQi9Fa1FwZXhwNzhZcjRzRC9kMQpPaXA2a2s2VWpKZ3VuZEkybnYrSzN2UmtYcjkyS3JCN0FINmIzc3dIVEJBM2xrZUY4TWg5V1Y4QkZaT2duczhRCjU0MnF3YWs2Z0U0eEdFdEw4MDZ2clVTUHJHOW5iVkE2YVZhQUgxQTd6ajA2Q21vcXgwQWpVS3RKMGM5Y0w3S3EKQjZwN2FjRUNnWUVBeWRZYUJFOGZCYUlSU1R6ZEw5dUlKeUZaSWtTZ0VvTzhPRjI2aWRCSUJKRW9mNmtaaDZ0NgpPcGJ3NSs3VUk0SU9zaHArRUFOSDEzclBQTUNTTDMrYkthQ3MzME92SVpVelJnRm10T2RUNXJVNkxROXA3cjFqCmtiNE9yM29naFlxUXFRUnpqQXh4WHh0QVJSRks4dS9nNkxudlgzZkt0WUJadUxXTmVEc2N2V2NDZ1lFQTJMdmUKakNSTGVQOTJUa3BQNDRSczZPbE05QURsUU9WVU0ydkZkelVhWE1UYzFOVk1kcGEweWE2M25UWVBNekl2aGhOMwo4NGFLcmhUOHIyNStIOVBVdW1OQ0NjckdhTC9YT3plc1NSZnk5elpLWDBzYUpLN3ZIK0h2eUdJcEFVUzg0bDV1Cmt5SWhVbEdjcjZnUzEzYmtmeXl3K241RUgwbDhmUmtTdk8xWHI3TUNnWUVBblJnUWZlUWJVQ1laY0RoNEsrU2gKcjFzc1poaWx3bU5ZWDBMTWlyRmJMSHJTMjdJQkZmQ29uT3VZcTl6ZXJwaHUyYjcyK1gya01CbjlMTnJ4clJpVAo2eTJNLytWTmJVVVVlRnRrMWs3cXBibk9ndjNwUkpHUjZ3RFRxMDdSK3o2alkzbjhlVGZDRWZWQzY3OE81OUUrCjY4UzBoRWpYdExjbW5qWm8ydmlmWU9jQ2dZQXRtQ0F5UlRSbmFQNmZhN3l3dFZ3Z0IyeDc3SEJPSGJCLy9NMFcKemVJVTRBbEE4UHBiL0VwZUgxWmJTVk1iUnhSK1ZUd256QWNDcGtHZU9sVm9KcTBhNU9Td29LcnF3R2pyK1VOUwpRU3FJM1MvNktoZCszaHBLRDhMYzJlR2NkYlJ5dnNEdVRRRExpNFcxNGxyTVh5T2txV2MxMnpoRGlMY2FyaHFtCkNod25Sd0tCZ1FDRU0xYU15Q2g5UFlFbU1lYUlnZi8wSTFvWEpJQXhQSUNvdmV2ZnIwQStsSEFkb2lmTmdpc3QKS2d0OXh3UDJXMXIxZ1NpNlF6NDRBYXFqa2czMC9PZXRsb0k5bHVVV09QeGRjNllMY0pUQ2hZZHJnQksyeEVCTApoQUlIVzF0U3J0enNPc0prUFFYdjBTMGtvdmRzQkZiRHJ3MWM3a3dwTW9TaHB1UG1VMTNkYVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcXVERXpzd3JqQ29IOGUrTW9mMHAxbis4QWRWQ0syaU5LUEdETTV4V3J4WEtKLzdWCmt3UVRyM2Izd3J2aUxhb3JkOGdSanY1T05NUEFXMzh5RFFxNVVPNE9Ocm8yelVMRS9KcDRNRHZPVENhUGh3RkQKYTYrR0dCQWcxY2tSR1VLTFpGMkxGS2U4Rnl6aTBpdFBWVW5OQ2Z0RER4T2NXSHM4TFU1MmhpU2hKQ0VjUm51ZwpubVFXdFUrNjVidUI1eTdMSEk3M0kzdm1HK3dSeUJhTFYwN3N6RXpudVVrNk9vcFc5dkppek42cEhJOTdOTVJGCm5hc3NYdUZ4cGtuaFdWbGhZUE1yTFRqb2NqN0puVlNHanR5Z0NOQ1RkR2xPMDZLSVBrU1FEdjNwVUh1RXljQnYKamNHT0duQjJPNXdiRXNNd1Y3MDVHWXhzTVV6ZHVDTTZzNUxZQlFJREFRQUJBb0lCQUNydGJJUEhKdWwvWlorUgozbktUZHY4Nzk2OCtNL0ZUd3FLV2lhOWRoeWxWQUFRc01OdE9HdVBwcnpSc250VjUrcEdNNFZ4YTVxcTZ3b2c1CjNBa0t1S05zS29YMUllOU81czNPd0lMZGcyWCtDZkNRa0s5czJQTVNtaTBhNWdEQ2h1SWYzZURDZ3E0UHlLdWoKMWJwSFlBc3g1QmJWaG1GMEZCb05yQmptK3RSb1U5clZVaXA1cVlyT3JKUUVsQi9Fa1FwZXhwNzhZcjRzRC9kMQpPaXA2a2s2VWpKZ3VuZEkybnYrSzN2UmtYcjkyS3JCN0FINmIzc3dIVEJBM2xrZUY4TWg5V1Y4QkZaT2duczhRCjU0MnF3YWs2Z0U0eEdFdEw4MDZ2clVTUHJHOW5iVkE2YVZhQUgxQTd6ajA2Q21vcXgwQWpVS3RKMGM5Y0w3S3EKQjZwN2FjRUNnWUVBeWRZYUJFOGZCYUlSU1R6ZEw5dUlKeUZaSWtTZ0VvTzhPRjI2aWRCSUJKRW9mNmtaaDZ0NgpPcGJ3NSs3VUk0SU9zaHArRUFOSDEzclBQTUNTTDMrYkthQ3MzME92SVpVelJnRm10T2RUNXJVNkxROXA3cjFqCmtiNE9yM29naFlxUXFRUnpqQXh4WHh0QVJSRks4dS9nNkxudlgzZkt0WUJadUxXTmVEc2N2V2NDZ1lFQTJMdmUKakNSTGVQOTJUa3BQNDRSczZPbE05QURsUU9WVU0ydkZkelVhWE1UYzFOVk1kcGEweWE2M25UWVBNekl2aGhOMwo4NGFLcmhUOHIyNStIOVBVdW1OQ0NjckdhTC9YT3plc1NSZnk5elpLWDBzYUpLN3ZIK0h2eUdJcEFVUzg0bDV1Cmt5SWhVbEdjcjZnUzEzYmtmeXl3K241RUgwbDhmUmtTdk8xWHI3TUNnWUVBblJnUWZlUWJVQ1laY0RoNEsrU2gKcjFzc1poaWx3bU5ZWDBMTWlyRmJMSHJTMjdJQkZmQ29uT3VZcTl6ZXJwaHUyYjcyK1gya01CbjlMTnJ4clJpVAo2eTJNLytWTmJVVVVlRnRrMWs3cXBibk9ndjNwUkpHUjZ3RFRxMDdSK3o2alkzbjhlVGZDRWZWQzY3OE81OUUrCjY4UzBoRWpYdExjbW5qWm8ydmlmWU9jQ2dZQXRtQ0F5UlRSbmFQNmZhN3l3dFZ3Z0IyeDc3SEJPSGJCLy9NMFcKemVJVTRBbEE4UHBiL0VwZUgxWmJTVk1iUnhSK1ZUd256QWNDcGtHZU9sVm9KcTBhNU9Td29LcnF3R2pyK1VOUwpRU3FJM1MvNktoZCszaHBLRDhMYzJlR2NkYlJ5dnNEdVRRRExpNFcxNGxyTVh5T2txV2MxMnpoRGlMY2FyaHFtCkNod25Sd0tCZ1FDRU0xYU15Q2g5UFlFbU1lYUlnZi8wSTFvWEpJQXhQSUNvdmV2ZnIwQStsSEFkb2lmTmdpc3QKS2d0OXh3UDJXMXIxZ1NpNlF6NDRBYXFqa2czMC9PZXRsb0k5bHVVV09QeGRjNllMY0pUQ2hZZHJnQksyeEVCTApoQUlIVzF0U3J0enNPc0prUFFYdjBTMGtvdmRzQkZiRHJ3MWM3a3dwTW9TaHB1UG1VMTNkYVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJSTF6UXpCYzJwQjh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNxNE1UT3pDdU0KS2dmeDc0eWgvU25XZjd3QjFVSXJhSTBvOFlNem5GYXZGY29uL3RXVEJCT3ZkdmZDdStJdHFpdDN5QkdPL2s0MAp3OEJiZnpJTkNybFE3ZzQydWpiTlFzVDhtbmd3Tzg1TUpvK0hBVU5ycjRZWUVDRFZ5UkVaUW90a1hZc1VwN3dYCkxPTFNLMDlWU2MwSiswTVBFNXhZZXp3dFRuYUdKS0VrSVJ4R2U2Q2VaQmExVDdybHU0SG5Mc3NjanZjamUrWWIKN0JISUZvdFhUdXpNVE9lNVNUbzZpbGIyOG1MTTNxa2NqM3MweEVXZHF5eGU0WEdtU2VGWldXRmc4eXN0T09oeQpQc21kVklhTzNLQUkwSk4wYVU3VG9vZytSSkFPL2VsUWU0VEp3RytOd1k0YWNIWTduQnNTd3pCWHZUa1pqR3d4ClROMjRJenF6a3RnRkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFmQmdOVkhTTUVHREFXZ0JSegpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZ0gvZzRSdko2WWJJCjlSUlpKR0d0Qk1qakJFRzRwNHhDeGt2MFFlNlUyNmR4QjBrczRqL2NWMkNNSGhLM0VNRUQ1Y0RVdyt1RTJwUFkKbUswV0Jyb1dGT0JsYlhDbGtOTHE2TEVlNEdyUVBTRGJTZFFJWXhTT0M4TUljd0NvZSsrenBGYTNHd21OK0huKwpRMzZjK1BCMnhnNnpHdzhXampQcGNFalh5TWR4czNQQzB3azRvZldqNTJjSkU0QnZjbjVzQkpEWGlHNWtGWEFNCjBmbG1tc05scGJiUC81NnV6c0U0d2IxUGwySXBJSXFLRFllZzM1Q1dYSmZPaEw5dTRRZGRQWFJKcmdvc2ZIT04KNE9mM3ZnT1cyaVFyQmh0MmFIZmNqWEdHc2NmNHhaa3BVemtuYTA3TGlYdjFDTzdiQ3pEMEh4ZDJkczNWNUh5QQpCY1IvZ0ZQellRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.EtcdCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJV1BPMTE0RDZNaXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0hqRU5NQXNHQTFVRUN4TUVaWFJqWkRFTk1Bc0dBMVVFQXhNRVpYUmpaRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEtPcFFmY2pDdDBmcURsUTBaNEJNZWIKK1BzVmF2YllTbXZXclRXWndoL0xtNDU3YlNQUTNwQmEzb1dod0pnQ0xiM1MraHNNY0twMW1GL2gxYVdRWE9BegpkaUZhV1diRCttTkY4SFhZdFV5bFdWYXl5blRzODJ6a3RxRFEzSHgrTXpTYUwzb1UvM3MzRWJJOS9NRFlIWndVCituMXd2RmhLOGdLTEt1eGxNM1NNVnRlZ25Uc0Fsd2xuRE8vR2lCcnBWZW9xQ1lFTmd4WjNVSm5POGZDajhwMFcKSmJGSks5TXFlRENiTlJtYTFoMjJzMFkrMDZGMXdWVk5yaTlDWlZJblNqWlhVeTdobUxub25iZ0VGQjZGQTlyMgpKV2txWkNTaVErZmJaWmRBcWlod2VBaHlBdWRTU3dkODdpOStNOXB4YmVvMVJybnhoUmxITWRsMG81YXpLcHNDCkF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KQkJZRUZITlRlUFVDdkNDcnRKS2pKK1lEMjM4OTVWR0VNQjhHQTFVZEl3UVlNQmFBRkhOVGVQVUN2Q0NydEpLagpKK1lEMjM4OTVWR0VNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFUaFFLbU1sdFUxTWhwdStHZzNSS3o3QmxiCjJTU1BPTGRYUGtVWHV6QXV6ZzMzSk54c1dSZnlhRU5HTk8zN3BHaUdsY0hFM3U3dVdNUWhEaE04eGYrUDcralkKSjZOays5YURlaFdJREdlaFI5bTAvQUdjT2o2UWdKNCswbTF4ZTV3YmZPWFNQcjVBSFVjZ2RSR3B2MlNlZFVLOQpVT1VIL3FJNjFlRFZaREpMQU1KaWFPdEZLY0Fib0hpZ0w3UDVMZFkwRjNLM01GTWJjQnl5WlZyQmQrV1pRTG5tCnc2RUkwUVptdnh5YjdoRG1hVzBCUDd4SjhZRHZHa3c0K00rZ2tXZEpDNnRhWlVqbVpVZlNMb0MwK0ZJMXFYQmUKUzd0TjZzOEkvWkVBSjdraDFpOGcrWHhYemZadmRZbzJnSXhmZ0piV3FQS2NTbjdxY0YwRDVGVy9ubVVpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOG82bEI5eU1LM1Irb09WRFJuZ0V4NXY0K3hWcTl0aEthOWF0TlpuQ0g4dWJqbnR0Ckk5RGVrRnJlaGFIQW1BSXR2ZEw2R3d4d3FuV1lYK0hWcFpCYzRETjJJVnBaWnNQNlkwWHdkZGkxVEtWWlZyTEsKZE96emJPUzJvTkRjZkg0ek5Kb3ZlaFQvZXpjUnNqMzh3TmdkbkJUNmZYQzhXRXJ5QW9zcTdHVXpkSXhXMTZDZApPd0NYQ1djTTc4YUlHdWxWNmlvSmdRMkRGbmRRbWM3eDhLUHluUllsc1VrcjB5cDRNSnMxR1pyV0hiYXpSajdUCm9YWEJWVTJ1TDBKbFVpZEtObGRUTHVHWXVlaWR1QVFVSG9VRDJ2WWxhU3BrSktKRDU5dGxsMENxS0hCNENISUMKNTFKTEIzenVMMzR6Mm5GdDZqVkd1ZkdGR1VjeDJYU2psck1xbXdJREFRQUJBb0lCQUhDNFNZazF2UTRVdlNRWQpad05Ba3pnUUM4empUeW9YcWI0anJhclRJWnVWQzExVGpveXViRCs1ZXQrdkk4bUFlYkZWY2xWUG1xd2NxZ3NrCjhCeFkwbEIrbWM4MkpZWFVYVy8wK0tKTGF6V0xRZEZBbFVWeE9FN0ttdlJ4RzRYZlAveWFDcVk1UytEKzNvSnUKdkI4Q1VBQlEzM2VjQkdzanFRUDFtS1R6QXM2TjRkSHd0NWdreStQSzZIZHVBdGptaEVQbVFZOTVVU3NaNzlTeApTMmxFeWl6WC9WS0xyWmFQVlB3STdlWEx3bUg3M0VSQjRmQzVla3NkN3ZyM3kvRGttckNoWXJ3THBxS1Z4dmJECmMwYVBRZ1U3NzJZYjVnM1dJOVV2K1BBWmV0UC9zWk5Mb3ovQjIzWjErV0NzWDJsUkJ0UXhyYjlFVEE4L0FaWFUKVXJkeFFBRUNnWUVBK2o5MW5QNGpTVHl3L29DQ1A5YkdsMmpzRmZhWEwzVldwZlJPSTlPdFhiQ09ZWmsxaXgvMAp1dUVyVlVJUEo3dVZDeXFJLzhadmhaMmhSbFlpdzlPM3ZiTTlsSVBNQUJKMUxnU3ljRHNqY0s0TFZUWGFkOXYyClNXRFBkSEt3ZmVQb0lkengrc0Y5MGE2aE1UOTdLUmFteUMxSkMrQzViUHVGbkFPOVk5SGd6QUVDZ1lFQStDSHUKUkNYRFB4RngrQmI4eUQzZTJkcGpGM2Z5SGxXbk1zTFA4M3JFaGRqeHFHOXJQd3JKeUQ0c05jcU5zbS9kTjJmSApoeXpEMW1pWGlzN0hOcUx4NSt1eTVrd0RucFloeWRaVlFSYk5TN2xYVHBwZTBQZk8vNzZnTzJGVStSMmszbUhiCmJlMXZwYm5RR3lpVlhZL3hQcHV6SDNqWEtyYVR5T1pvK010UHBwc0NnWUVBME9Yd2xHRkJxMzFTY3VGcjJVYTgKK04vSlZIeElzSUZQRjdIZEdPTTNNYUtVK0x3Z2lrYmUwTEh1cm5rNmxYeHRhcWpUUEZDMS8rQWFKTkQ2ckdZcwpWOXNzYUxHc3RkS3lwdnVjeVR0VTFsY3pkcXBCK1JSUmYrZWt4aHlIWUUvRUU2Q1JEelkraGE4MU9CczZBSTY4Ckl4WktoL1BNVmtHUXd6QU1CU3ZLY0FFQ2dZQUtPdXZsNTJDcll2Njk2Y1MyUk1iQldKMnBSQXE1Y1hLWlJ5cm4Kc1BJVlNxSjcvVXdBcDJNMlhFbmFWZVdOcThzRkU4UklNSEpLanJsZ3diRzQ4UExrU3ZWdlJVY0k3TXVyMUtoagpMSnQrT2IvOXY2T1ZIZ0pzek9FeVVZcjlVbG1QeVowUVpTK3JONFA2K3F0ZDFpZHVHMkZCTk93NkdKanpPWHl1CmRVTnRiUUtCZ1FDVjU3M3IrOVYxNm5sdzlCRWJaQ3JvWWF5MnJCamlnc1poWDNzN3pMZjVwbGhqY0Y2dVVLR04KRmFYb28xZ2ZDc0g1eEk4TXdtVHpjclBMTkIxaFUrVmNVSktDQlZSVENENE9nNm5SMnRCYWdFNVM4K2RyUTAvTQo5bVlRWkwrVGRJNEhvTFlEOFA4UURzT3Y1YVRRbXNrT09nTi9ra0t2K0FFNzhPY0FScktTVEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/etcd-client-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOG82bEI5eU1LM1Irb09WRFJuZ0V4NXY0K3hWcTl0aEthOWF0TlpuQ0g4dWJqbnR0Ckk5RGVrRnJlaGFIQW1BSXR2ZEw2R3d4d3FuV1lYK0hWcFpCYzRETjJJVnBaWnNQNlkwWHdkZGkxVEtWWlZyTEsKZE96emJPUzJvTkRjZkg0ek5Kb3ZlaFQvZXpjUnNqMzh3TmdkbkJUNmZYQzhXRXJ5QW9zcTdHVXpkSXhXMTZDZApPd0NYQ1djTTc4YUlHdWxWNmlvSmdRMkRGbmRRbWM3eDhLUHluUllsc1VrcjB5cDRNSnMxR1pyV0hiYXpSajdUCm9YWEJWVTJ1TDBKbFVpZEtObGRUTHVHWXVlaWR1QVFVSG9VRDJ2WWxhU3BrSktKRDU5dGxsMENxS0hCNENISUMKNTFKTEIzenVMMzR6Mm5GdDZqVkd1ZkdGR1VjeDJYU2psck1xbXdJREFRQUJBb0lCQUhDNFNZazF2UTRVdlNRWQpad05Ba3pnUUM4empUeW9YcWI0anJhclRJWnVWQzExVGpveXViRCs1ZXQrdkk4bUFlYkZWY2xWUG1xd2NxZ3NrCjhCeFkwbEIrbWM4MkpZWFVYVy8wK0tKTGF6V0xRZEZBbFVWeE9FN0ttdlJ4RzRYZlAveWFDcVk1UytEKzNvSnUKdkI4Q1VBQlEzM2VjQkdzanFRUDFtS1R6QXM2TjRkSHd0NWdreStQSzZIZHVBdGptaEVQbVFZOTVVU3NaNzlTeApTMmxFeWl6WC9WS0xyWmFQVlB3STdlWEx3bUg3M0VSQjRmQzVla3NkN3ZyM3kvRGttckNoWXJ3THBxS1Z4dmJECmMwYVBRZ1U3NzJZYjVnM1dJOVV2K1BBWmV0UC9zWk5Mb3ovQjIzWjErV0NzWDJsUkJ0UXhyYjlFVEE4L0FaWFUKVXJkeFFBRUNnWUVBK2o5MW5QNGpTVHl3L29DQ1A5YkdsMmpzRmZhWEwzVldwZlJPSTlPdFhiQ09ZWmsxaXgvMAp1dUVyVlVJUEo3dVZDeXFJLzhadmhaMmhSbFlpdzlPM3ZiTTlsSVBNQUJKMUxnU3ljRHNqY0s0TFZUWGFkOXYyClNXRFBkSEt3ZmVQb0lkengrc0Y5MGE2aE1UOTdLUmFteUMxSkMrQzViUHVGbkFPOVk5SGd6QUVDZ1lFQStDSHUKUkNYRFB4RngrQmI4eUQzZTJkcGpGM2Z5SGxXbk1zTFA4M3JFaGRqeHFHOXJQd3JKeUQ0c05jcU5zbS9kTjJmSApoeXpEMW1pWGlzN0hOcUx4NSt1eTVrd0RucFloeWRaVlFSYk5TN2xYVHBwZTBQZk8vNzZnTzJGVStSMmszbUhiCmJlMXZwYm5RR3lpVlhZL3hQcHV6SDNqWEtyYVR5T1pvK010UHBwc0NnWUVBME9Yd2xHRkJxMzFTY3VGcjJVYTgKK04vSlZIeElzSUZQRjdIZEdPTTNNYUtVK0x3Z2lrYmUwTEh1cm5rNmxYeHRhcWpUUEZDMS8rQWFKTkQ2ckdZcwpWOXNzYUxHc3RkS3lwdnVjeVR0VTFsY3pkcXBCK1JSUmYrZWt4aHlIWUUvRUU2Q1JEelkraGE4MU9CczZBSTY4Ckl4WktoL1BNVmtHUXd6QU1CU3ZLY0FFQ2dZQUtPdXZsNTJDcll2Njk2Y1MyUk1iQldKMnBSQXE1Y1hLWlJ5cm4Kc1BJVlNxSjcvVXdBcDJNMlhFbmFWZVdOcThzRkU4UklNSEpLanJsZ3diRzQ4UExrU3ZWdlJVY0k3TXVyMUtoagpMSnQrT2IvOXY2T1ZIZ0pzek9FeVVZcjlVbG1QeVowUVpTK3JONFA2K3F0ZDFpZHVHMkZCTk93NkdKanpPWHl1CmRVTnRiUUtCZ1FDVjU3M3IrOVYxNm5sdzlCRWJaQ3JvWWF5MnJCamlnc1poWDNzN3pMZjVwbGhqY0Y2dVVLR04KRmFYb28xZ2ZDc0g1eEk4TXdtVHpjclBMTkIxaFUrVmNVSktDQlZSVENENE9nNm5SMnRCYWdFNVM4K2RyUTAvTQo5bVlRWkwrVGRJNEhvTFlEOFA4UURzT3Y1YVRRbXNrT09nTi9ra0t2K0FFNzhPY0FScktTVEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/etcd-client-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJV1BPMTE0RDZNaXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0hqRU5NQXNHQTFVRUN4TUVaWFJqWkRFTk1Bc0dBMVVFQXhNRVpYUmpaRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEtPcFFmY2pDdDBmcURsUTBaNEJNZWIKK1BzVmF2YllTbXZXclRXWndoL0xtNDU3YlNQUTNwQmEzb1dod0pnQ0xiM1MraHNNY0twMW1GL2gxYVdRWE9BegpkaUZhV1diRCttTkY4SFhZdFV5bFdWYXl5blRzODJ6a3RxRFEzSHgrTXpTYUwzb1UvM3MzRWJJOS9NRFlIWndVCituMXd2RmhLOGdLTEt1eGxNM1NNVnRlZ25Uc0Fsd2xuRE8vR2lCcnBWZW9xQ1lFTmd4WjNVSm5POGZDajhwMFcKSmJGSks5TXFlRENiTlJtYTFoMjJzMFkrMDZGMXdWVk5yaTlDWlZJblNqWlhVeTdobUxub25iZ0VGQjZGQTlyMgpKV2txWkNTaVErZmJaWmRBcWlod2VBaHlBdWRTU3dkODdpOStNOXB4YmVvMVJybnhoUmxITWRsMG81YXpLcHNDCkF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KQkJZRUZITlRlUFVDdkNDcnRKS2pKK1lEMjM4OTVWR0VNQjhHQTFVZEl3UVlNQmFBRkhOVGVQVUN2Q0NydEpLagpKK1lEMjM4OTVWR0VNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFUaFFLbU1sdFUxTWhwdStHZzNSS3o3QmxiCjJTU1BPTGRYUGtVWHV6QXV6ZzMzSk54c1dSZnlhRU5HTk8zN3BHaUdsY0hFM3U3dVdNUWhEaE04eGYrUDcralkKSjZOays5YURlaFdJREdlaFI5bTAvQUdjT2o2UWdKNCswbTF4ZTV3YmZPWFNQcjVBSFVjZ2RSR3B2MlNlZFVLOQpVT1VIL3FJNjFlRFZaREpMQU1KaWFPdEZLY0Fib0hpZ0w3UDVMZFkwRjNLM01GTWJjQnl5WlZyQmQrV1pRTG5tCnc2RUkwUVptdnh5YjdoRG1hVzBCUDd4SjhZRHZHa3c0K00rZ2tXZEpDNnRhWlVqbVpVZlNMb0MwK0ZJMXFYQmUKUzd0TjZzOEkvWkVBSjdraDFpOGcrWHhYemZadmRZbzJnSXhmZ0piV3FQS2NTbjdxY0YwRDVGVy9ubVVpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.EtcdClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lJTGphemxaVlk1ZzB3RFFZSktvWklodmNOQVFFTEJRQXdIakVOTUFzR0ExVUUKQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQWVGdzB4T0RFeU1qZ3hPVFExTkRSYUZ3MHlPREV5TWpVeApPVFExTkRaYU1CNHhEVEFMQmdOVkJBc1RCR1YwWTJReERUQUxCZ05WQkFNVEJHVjBZMlF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNtdnd3MWRySnI2aDNOQ3VOQU9qY1NHeFB6a3M4cm80eDQKcnN5S2xYcWk1U0gxaS8yQ3JZeVVnaFhXa05RcWxoWmNtbkJ0Q2JGVXdkRmJQb0ZPL0FtWGZSaGJocTN1R2hnTQpBWlMvZk9hbGc5TGhjYnJ5c1lJOXBYZWxxRUgrK2o4ZTNKS2JIV3JhU3RCNkgya3BLYVRGTTBDLzBhT2pKbjQ5CkN2dTNsUmxpcGd1MXQ0bHBsUTc1T05FZXVGbkVGaUFzTDU5OEZLZDIvZXpuSW0wV2lFeEl6V1NnK0U0UDNXb1QKOGhFLzhtZDhScTk4dzZMWkhZNWFiZk5xdGNkd3ZqOXIxNFZiSDZ4KzU5TjY0Umx4OHdHeUllKy8rNnZ6cFQvbwpNeUlEM2JNRFUxYS9YbjJtMEJueVMxUVNBa0d4dk9Vb3MyWkYxSk55a05GdUorMnhua0MxQWdNQkFBR2pWREJTCk1BNEdBMVVkRHdFQi93UUVBd0lGSURBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1CMEdBMVVkRGdRV0JCUmxwU0pETEVLZ3l5R2FwZ2o1VFRhUVp6aHNWREFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQWdtSHJmdmUwTU80N043MGNiWUJCVFc5VHJ4VFlHazVPKzdQZldZZnFySlcxWVhCbXVITCttZDl3CkJneThXNHcyOW1BNjQyTVMvUzVabmVwbHJINFlBWEd1SEErNjV3TGlyeS9jdkNJSzgvQ1p2Rnl4cFlWMm5zZDgKVmhtVlNNWm96YlF0cHRFSmFsNFV6b2dNWHNKdXdCU3o4K284TzE3REd1ZFdpTkIrMHNyYzIzbVZQcmNNbzkvVgpmY0VkUzJyV1dROHhWdjJDZmRYVHNYY2tKNGJmbXd1SHJEbzJrK3ZjbXhxTWd5dVUzL1F0dm40SVI2T0U1TXVUCnBoL0pTbFAxaVRsN3ljOCtyNHA5alVvYWszak9Ld1ZXcW9OdzE1Q1hzdUlReHMrWnkrODY1ejFSNHRMQ1N4WEEKYlRYdytuWjl1T0hIYlNwZjhCOU52c2hCdTEvVnFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcHI4TU5YYXlhK29kelFyalFEbzNFaHNUODVMUEs2T01lSzdNaXBWNm91VWg5WXY5CmdxMk1sSUlWMXBEVUtwWVdYSnB3YlFteFZNSFJXejZCVHZ3SmwzMFlXNGF0N2hvWURBR1V2M3ptcFlQUzRYRzYKOHJHQ1BhVjNwYWhCL3ZvL0h0eVNteDFxMmtyUWVoOXBLU21reFROQXY5R2pveVorUFFyN3Q1VVpZcVlMdGJlSgphWlVPK1RqUkhyaFp4QllnTEMrZmZCU25kdjNzNXlKdEZvaE1TTTFrb1BoT0Q5MXFFL0lSUC9KbmZFYXZmTU9pCjJSMk9XbTN6YXJYSGNMNC9hOWVGV3grc2Z1ZlRldUVaY2ZNQnNpSHZ2L3VyODZVLzZETWlBOTJ6QTFOV3YxNTkKcHRBWjhrdFVFZ0pCc2J6bEtMTm1SZFNUY3BEUmJpZnRzWjVBdFFJREFRQUJBb0lCQUVINTk4K3pybmNxaEM0YwpMN3k3REEwNjc1TUJ0TDAwa2lFeU1MWm8zTVJWV3pGMytZL2FNWFNWWUNTczIzWWFPckRiWHI2V0JqZGVGUU5BCllST3FmL1VUeHk1M3hKd2djUUZYSXM3OWtabE41b1BUWjBBZDRrV1lFaFpXMC80YWNCMDY4enN5MFpPYjVJOWQKbkZOd0tjVHBPYVpzUVk0TmJnZWpMK1A4dDdXakQrdjk4TzhFSEpZNnF3c283bFpITXlIaHZ5eEd5VHpJaFVETgp2SGtrdElWNWU5a0lHQXZRQ0xYZHJaQUFhMTR5eUV0QjA3RHhiVnZpZFJXUVdKcEFjeDFXczJyVmJhQ1lsaE45CnZPOHZ2SUJCamZOa1pmUTFPZGUrM0w4cDBMUjJ6cGl1dU1wTGxBOHVtN3ZZZmxnSngwUXUxY1ArVERHZHhOaHcKNTJvMVdvVUNnWUVBeEhXcjBUcEIvZktmWUhVSlIxMklxLzZidUM3bEFqMzJodTJqWGtIako5NW1ZTy9od2xhcwo1aXR0djRITzlQSnBqRzBhVUdFeGRYWVdYaFRuUERsRzVZZGloZy8xajhqV2xZSnNMcmExRUFxQS9BZUI3MTVSCnRmK0FaZUNxbUF1TTRJd2swbm13OGVjc3FXbVZPNmxzRnFkbGpMMzVSeFJLZitNOGtjN0lwSGNDZ1lFQTJVZ1EKUUduMHVHaDl1Y2Q0RVc1WXJwb1E5TUhlTEhWaGlGWkpZNXNSV0xlejc4WXREZEo3VUJ2b2xDVzRLVERTMWRISwpTVlF6OGZ0Z1NvTXRCOHpENnVGQUZYWXVDL0tjeFhLMU9LS0k0MW1PdnRDd1lIQkxHT3VRWjJTWk1sZkUyaGYyCjdVZ0h0TUduTENpeDgxR3lGZml3Z1RITy90bjB0WWNjY2hrR3F6TUNnWUFQUHdxTWZEYnUzRXRlRXZjYllMamcKa0N2SmlXb2dXR3F2WWZYUnRNOUtJc3BUTDRxWHFGNVdwbnduNW8wSEdXRHprdXY5M08wWHJvaGgyTUZ4UFFpeAplMlk3L1RVVGFZU3RxYWQzb0pwQW1uQVVId2tJYUl0eTBsZEdrTDdzZWNqL0RDRTNiRlk5RDdHNW5BWUcwVWtnCklQR1NrSk90M25kQm9ZTHIxZDVnVlFLQmdBcktxSHY2aHp3TmZJa1luaDhIZ3dJUkJ0eVJNRzYyMmNSQ3ZOeGsKbkVUeXdzNGE0cXY0RTBYVVRRWG1wYkh1Q2RxeTA4QTJuV25jV1ZqNkVPZDlSUkhLWkR0c3BqYlRzdk9ma2Q2aApPL2xHdm04OXdEVFovdkRhNms0b1VlK05LbXJHbSs0SEVOTHFkMW9iSDFOOWNFSGxHeWNmaVM5aE5lVTZNN0I3CkM3aS9Bb0dBYjc3Y1gzOVJmK0t0TUNnZXFJa2c0dDg1SGFaTDNXSExNNTBMY3RmS3FLeVZ5d3U1VkxHN1I1MSsKT2tsNUs5SWJBbEhRbXVFalNrcG5FS1ZQWlNMdjl4NVNFR0JMc2h4Y2w4Rkl2SE9INmI2TVpmU3JRQTNGU1JwaAowZVE5c0lXVFUrL1Jjakd3UjhzK1Q4WEFkSzVVOW5FOTM4Z0Q0OTlYZTA4MEZGZENiVHM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/etcd-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcHI4TU5YYXlhK29kelFyalFEbzNFaHNUODVMUEs2T01lSzdNaXBWNm91VWg5WXY5CmdxMk1sSUlWMXBEVUtwWVdYSnB3YlFteFZNSFJXejZCVHZ3SmwzMFlXNGF0N2hvWURBR1V2M3ptcFlQUzRYRzYKOHJHQ1BhVjNwYWhCL3ZvL0h0eVNteDFxMmtyUWVoOXBLU21reFROQXY5R2pveVorUFFyN3Q1VVpZcVlMdGJlSgphWlVPK1RqUkhyaFp4QllnTEMrZmZCU25kdjNzNXlKdEZvaE1TTTFrb1BoT0Q5MXFFL0lSUC9KbmZFYXZmTU9pCjJSMk9XbTN6YXJYSGNMNC9hOWVGV3grc2Z1ZlRldUVaY2ZNQnNpSHZ2L3VyODZVLzZETWlBOTJ6QTFOV3YxNTkKcHRBWjhrdFVFZ0pCc2J6bEtMTm1SZFNUY3BEUmJpZnRzWjVBdFFJREFRQUJBb0lCQUVINTk4K3pybmNxaEM0YwpMN3k3REEwNjc1TUJ0TDAwa2lFeU1MWm8zTVJWV3pGMytZL2FNWFNWWUNTczIzWWFPckRiWHI2V0JqZGVGUU5BCllST3FmL1VUeHk1M3hKd2djUUZYSXM3OWtabE41b1BUWjBBZDRrV1lFaFpXMC80YWNCMDY4enN5MFpPYjVJOWQKbkZOd0tjVHBPYVpzUVk0TmJnZWpMK1A4dDdXakQrdjk4TzhFSEpZNnF3c283bFpITXlIaHZ5eEd5VHpJaFVETgp2SGtrdElWNWU5a0lHQXZRQ0xYZHJaQUFhMTR5eUV0QjA3RHhiVnZpZFJXUVdKcEFjeDFXczJyVmJhQ1lsaE45CnZPOHZ2SUJCamZOa1pmUTFPZGUrM0w4cDBMUjJ6cGl1dU1wTGxBOHVtN3ZZZmxnSngwUXUxY1ArVERHZHhOaHcKNTJvMVdvVUNnWUVBeEhXcjBUcEIvZktmWUhVSlIxMklxLzZidUM3bEFqMzJodTJqWGtIako5NW1ZTy9od2xhcwo1aXR0djRITzlQSnBqRzBhVUdFeGRYWVdYaFRuUERsRzVZZGloZy8xajhqV2xZSnNMcmExRUFxQS9BZUI3MTVSCnRmK0FaZUNxbUF1TTRJd2swbm13OGVjc3FXbVZPNmxzRnFkbGpMMzVSeFJLZitNOGtjN0lwSGNDZ1lFQTJVZ1EKUUduMHVHaDl1Y2Q0RVc1WXJwb1E5TUhlTEhWaGlGWkpZNXNSV0xlejc4WXREZEo3VUJ2b2xDVzRLVERTMWRISwpTVlF6OGZ0Z1NvTXRCOHpENnVGQUZYWXVDL0tjeFhLMU9LS0k0MW1PdnRDd1lIQkxHT3VRWjJTWk1sZkUyaGYyCjdVZ0h0TUduTENpeDgxR3lGZml3Z1RITy90bjB0WWNjY2hrR3F6TUNnWUFQUHdxTWZEYnUzRXRlRXZjYllMamcKa0N2SmlXb2dXR3F2WWZYUnRNOUtJc3BUTDRxWHFGNVdwbnduNW8wSEdXRHprdXY5M08wWHJvaGgyTUZ4UFFpeAplMlk3L1RVVGFZU3RxYWQzb0pwQW1uQVVId2tJYUl0eTBsZEdrTDdzZWNqL0RDRTNiRlk5RDdHNW5BWUcwVWtnCklQR1NrSk90M25kQm9ZTHIxZDVnVlFLQmdBcktxSHY2aHp3TmZJa1luaDhIZ3dJUkJ0eVJNRzYyMmNSQ3ZOeGsKbkVUeXdzNGE0cXY0RTBYVVRRWG1wYkh1Q2RxeTA4QTJuV25jV1ZqNkVPZDlSUkhLWkR0c3BqYlRzdk9ma2Q2aApPL2xHdm04OXdEVFovdkRhNms0b1VlK05LbXJHbSs0SEVOTHFkMW9iSDFOOWNFSGxHeWNmaVM5aE5lVTZNN0I3CkM3aS9Bb0dBYjc3Y1gzOVJmK0t0TUNnZXFJa2c0dDg1SGFaTDNXSExNNTBMY3RmS3FLeVZ5d3U1VkxHN1I1MSsKT2tsNUs5SWJBbEhRbXVFalNrcG5FS1ZQWlNMdjl4NVNFR0JMc2h4Y2w4Rkl2SE9INmI2TVpmU3JRQTNGU1JwaAowZVE5c0lXVFUrL1Jjakd3UjhzK1Q4WEFkSzVVOW5FOTM4Z0Q0OTlYZTA4MEZGZENiVHM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/etcd-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lJTGphemxaVlk1ZzB3RFFZSktvWklodmNOQVFFTEJRQXdIakVOTUFzR0ExVUUKQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQWVGdzB4T0RFeU1qZ3hPVFExTkRSYUZ3MHlPREV5TWpVeApPVFExTkRaYU1CNHhEVEFMQmdOVkJBc1RCR1YwWTJReERUQUxCZ05WQkFNVEJHVjBZMlF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNtdnd3MWRySnI2aDNOQ3VOQU9qY1NHeFB6a3M4cm80eDQKcnN5S2xYcWk1U0gxaS8yQ3JZeVVnaFhXa05RcWxoWmNtbkJ0Q2JGVXdkRmJQb0ZPL0FtWGZSaGJocTN1R2hnTQpBWlMvZk9hbGc5TGhjYnJ5c1lJOXBYZWxxRUgrK2o4ZTNKS2JIV3JhU3RCNkgya3BLYVRGTTBDLzBhT2pKbjQ5CkN2dTNsUmxpcGd1MXQ0bHBsUTc1T05FZXVGbkVGaUFzTDU5OEZLZDIvZXpuSW0wV2lFeEl6V1NnK0U0UDNXb1QKOGhFLzhtZDhScTk4dzZMWkhZNWFiZk5xdGNkd3ZqOXIxNFZiSDZ4KzU5TjY0Umx4OHdHeUllKy8rNnZ6cFQvbwpNeUlEM2JNRFUxYS9YbjJtMEJueVMxUVNBa0d4dk9Vb3MyWkYxSk55a05GdUorMnhua0MxQWdNQkFBR2pWREJTCk1BNEdBMVVkRHdFQi93UUVBd0lGSURBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1CMEdBMVVkRGdRV0JCUmxwU0pETEVLZ3l5R2FwZ2o1VFRhUVp6aHNWREFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQWdtSHJmdmUwTU80N043MGNiWUJCVFc5VHJ4VFlHazVPKzdQZldZZnFySlcxWVhCbXVITCttZDl3CkJneThXNHcyOW1BNjQyTVMvUzVabmVwbHJINFlBWEd1SEErNjV3TGlyeS9jdkNJSzgvQ1p2Rnl4cFlWMm5zZDgKVmhtVlNNWm96YlF0cHRFSmFsNFV6b2dNWHNKdXdCU3o4K284TzE3REd1ZFdpTkIrMHNyYzIzbVZQcmNNbzkvVgpmY0VkUzJyV1dROHhWdjJDZmRYVHNYY2tKNGJmbXd1SHJEbzJrK3ZjbXhxTWd5dVUzL1F0dm40SVI2T0U1TXVUCnBoL0pTbFAxaVRsN3ljOCtyNHA5alVvYWszak9Ld1ZXcW9OdzE1Q1hzdUlReHMrWnkrODY1ejFSNHRMQ1N4WEEKYlRYdytuWjl1T0hIYlNwZjhCOU52c2hCdTEvVnFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.IngressCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURnRENDQW1pZ0F3SUJBZ0lJQytvT3FnbU9ZYUV3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEzV2pBck1SQXdEZ1lEVlFRS0V3ZHBibWR5WlhOek1SY3dGUVlEVlFRREV3NWxibll4CkxuSmhabVpoTG5oNWVqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUo1Q1d0ODMKa21rTytsRDBWMWhUZGVZNzZvM2lTdWVMbW5maytwOFdoVWhRN3ZsY29Uem41T0t3Qnp6cEREV3A2Sk1ZVUtOZwovdjc2Tm5sOE9XdncwL0wrSG1NbGRRZk1WVFNJUEwrMFlOcE4wMFg5M1VBNDYrRHlRa1BqK1ZMQXJlNk9vTmNoCmhoMHYvQTd1QVBMTnhkUmVJdTBnNWxoUjBOMWtqTW94TWxLb2UwV0h4aGlxTUdSRTZ1MFB1amdscmRYNkNRT0EKU0tXNkFHZGZlLzVRbUNoSElHWkdkTjdVbU40eUZ1eUFUSE1lMmdSTi8wbkp2aGtmWHY3ZHVObzJmMEJhUmluUQplTU1pNjRnTUpQdVdpTDJPZGR3UTdaZ0pNVmVyR2pOUURwWUl6a0ZOZGhSazFGUGIyK08wUkRlNkh6emZVUUhKCmZPbTg0WmMraXBOT1RsY0NBd0VBQWFPQnJUQ0JxakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRklJMgpwRU8vMVJGMmcyN0dZRjVuQnM2blJ5VCtNQjhHQTFVZEl3UVlNQmFBRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5CjVWR0VNQ3NHQTFVZEVRUWtNQ0tDRG1WdWRqRXVjbUZtWm1FdWVIbDZnaEFxTG1WdWRqRXVjbUZtWm1FdWVIbDYKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCcFFpMXhmZUlvclRRSDRpRHo1bkJFaFdJSXdHVE9DRk4zdjNMNgpLaW1SQ2I3QThyOTlTZWgyUlpzRTBqS0lzTGM2a0cvdENqNEdvM3hyZkxIdjd6MVFSVkxmRCt2RVlEeURITTI1ClBGZGJVdHRCdjJ6ZytNUUh1dmNvMWtvb1Bpd2ZLcjQxV1lqdUpyS3gvUHlJclRJdkdjNDhLdVVOV3k0eGcyZzcKN0pZWFNTR3JycFZMOHZISTN4T0hCR0hVMVZzc29wbzMwaXJvd1JVNFArd0c0SlBsajNiSjhjTGdyL3lZUFFyeAovNk41b1lwL2c0SjdqZ2pSdGJodnhHTyt5SHpPVDR6a2N0UUF1SEl0emlMZ3RwUmErT1JOYTlBSjM5UjlkTElHClRzMkg4L3U3cnVLd2p2WXhiWC8vQVFRZ21XS1ZXbDlyd1lISEwwWHA2dnBjRkdBWAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1EQ0NBaGlnQXdJQkFnSUlINUczWDZJUnhyb3dEUVlKS29aSWh2Y05BUUVMQlFBd0pqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVJBd0RnWURWUVFERXdkeWIyOTBMV05oTUI0WERURTRNVEl5T0RFNU5EVTBORm9YCkRUSTRNVEl5TlRFNU5EVTBOVm93SlRFUk1BOEdBMVVFQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDEKWW1VdFkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDa1Erc1JmRlNNVExObgpRVk4vMzhSY1hzdUluZDhaUHVoRTNrSHBEZ2ltckZ1SzJzSUNLcG8vYjQ2V01qekNHaXNkUnRTQktlTnlwRmxWCm01U25XdWN1c3p2RHRHUTFUZnp0S0lObFd6VXFrMnprYWNtRWI0ZGRqNkwreGk5UjEyaklJSncrRW8rRElIaGIKeTRPVzc1aEsxQjE5d1A4aURWYnNqOHdCTWIvL2o3Y3k4Q0hQT3FZT3NMWFRGTDQwSzNISjMzdERTem0rcWJmego2MjlGWWYvck1zalUrNXkxL0Z1Qmswa29GMXd0a05XL05hR2hjTnNiMEtXWFU0RWc3eWs5clBFdVA4VG1JLzFwCkh5OGxwVURUTnhPM1pXeXlJeGZ2TDZrNWpBWVFXNlpUdHBHSGI2ZHJHcEFmN09odjYrem1UaDZjdnd6eC9BUTMKajlyOXUrdEJBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFILwpNQjBHQTFVZERnUVdCQlJ6VTNqMUFyd2dxN1NTb3lmbUE5dC9QZVZSaERBZkJnTlZIU01FR0RBV2dCUnpVM2oxCkFyd2dxN1NTb3lmbUE5dC9QZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNZZ2RYTFJPaTYydWwvRVoKU1NTVGc4bkpGWmtpaXBXWjlBeno2NG1CREx5U2NWTzQ4bUlQa2FvNlJuZjZOTTRqUFQxWS9jWVI0YklFRzNKSgpoZHU1emhJY0FaMlVEeHplMXBNVGI4TTVZWTI0SGFJL1RYeDBuTG1BU3RZS3NRbkZ4N1FHazZlYlFoaU5BWjlOClZzdzVTVmYzcXZoeFZJYVFUY0N1dGlBTHNuWmc2eXc5WDM4dXlieEI3YmltRnJGMHB3RDVqT0dUSzRscGcwdGwKamk5cW9yeTRaT0VnV0lDRVpxUHd6cmw3UWI4MTBNN0xxZnpPNVRNbFBmdU1McGx4S3M3cHpTaVlSVmUvT2lpMwpmd2lBV1VJOGNKYzdxY2NKZy9lN2hVMXN0VEppSmZ1ajdmTTFEL3RKbUVqREtrN2d3WE0yL05TWnYrR3VqdzFqCitQdXZwdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbmtKYTN6ZVNhUTc2VVBSWFdGTjE1anZxamVKSzU0dWFkK1Q2bnhhRlNGRHUrVnloClBPZms0ckFIUE9rTU5hbm9reGhRbzJEKy92bzJlWHc1YS9EVDh2NGVZeVYxQjh4Vk5JZzh2N1JnMmszVFJmM2QKUURqcjRQSkNRK1A1VXNDdDdvNmcxeUdHSFMvOER1NEE4czNGMUY0aTdTRG1XRkhRM1dTTXlqRXlVcWg3UllmRwpHS293WkVUcTdRKzZPQ1d0MWZvSkE0QklwYm9BWjE5Ny9sQ1lLRWNnWmtaMDN0U1kzaklXN0lCTWN4N2FCRTMvClNjbStHUjllL3QyNDJqWi9RRnBHS2RCNHd5THJpQXdrKzVhSXZZNTEzQkR0bUFreFY2c2FNMUFPbGdqT1FVMTIKRkdUVVU5dmI0N1JFTjdvZlBOOVJBY2w4NmJ6aGx6NktrMDVPVndJREFRQUJBb0lCQUdQb1plKzI2SEgwWjZnRgpxTUowNWVBMEFRNFRSdEJIL0hzbURlV3kxTzlqVUlvUnBTU0xESjdqRzU2alRQYnZ6WWhXK0VrNzZaN1VIT0d5CnY1bGFEcU8vTXpYS0pzaUdnVi9KaGZoTUNqeW1sdkwvb2RaeVdNN0lnWGJVaThobkpTYU4yaElWOHRHb1FrcTIKaTlpOGVPQnBrVWo3MVE3Nmo0M0VkWEVMZjhaWDRrY0h3YUppNklVVk5ZUmRnRjlqbmNQWFpMd0ZvQkhWczBXdwphZytqVDRMbXJuQjFGTVhyaWY1WHFjUk5NSGFycW1xbnV0cHVmcUl1THlqb24wN2x0SGdGMjZXMHpGQ1FIZ0orCnFmVkVvVEVYcHBaczg4WC94QUk4cUNPWVZlSkEvQXBqbzNZb3Z3OUtlZENDVFgrZTZnc25jUklDa3Z2VDl4MDMKZHVJZDJuRUNnWUVBenN6RnFMT0RRZWRWd09kQThBc3VGQWpZd1dFRk1kTjZmZWk5b1RRWWY4UTI1YmZEVE9oVgovT3NjSzFEckNNV3dUVTBPVTFZZVJmZlZYNzlCcWtyV3FFMncxSkN3c2ZhUkk2N0Q0QTJrdU91c3dhS0NzeGltClUybGhOaW9ubVB0TWRGOHhCTG16ellYcnNaSE1Ld3pVVysweU9tWGNMNXhsaEl1NHJ5blhscjhDZ1lFQXcra3gKY0MyandUenpLRnJMWTJBWWNaUTR1SnNDbU9UMStidlN6bTdVL2x1NHAyUVZvK0hUZGQyVVljMi9EUDRESlFRQwo1TkkzcVZxL2ttbjlhVkVUMHBURTRiT25ZbFFoa2l4enRheWhkbndmVW53Zjd1RU41Z3J5RGlqU3c2T1E5OHVBCjZYVC8vRDN4WlYvbFpvVDBvOWpJelIyMVJlKzE3ZGNVVFNybkJta0NnWUJYdE10RDRGYVQxZHd0d3lac2FDRnoKeDhpK1F6cWp4akJXUkNaZ3Z5cUF6YVFHeTJnZUx3K0JBK25maVNNVmhscGVmb2JMMjJOZGcxM1FqTm41c21IVgo0WlZVb2NUK3hUY0xMaXpPMHBxQS94czJ5SWlzRXBGQUlScGtrWDVYeUlURmVqWGM3akdPd2ZTVFMrV09nSk4wCkpXWS9GRUpOUXdSZk1hN3pRMGkzR3dLQmdGa3ZzTlQ3d2YrM2lvN0ZmcS8zMEVqc2pFSG1OM0Y1VWsxbFp4dVoKTXhlMGs4U0llSjJKc2VXSGdRUmhVT2RPUUFvNjRFSmhQUHU1RjF0Rkt4c2wwTnRkNUo5SFZSMGJaY2tRdVlCcwpYWGorR3BoSGI1WWxHRm13Zys5VVFGYldBS24rRitxdjI5VnVNWlhQNlRRWnRQRmVRRk80Z1l5Y0N2dUNuWGhmCjNwcDVBb0dBSFIxL2lLMEV3d1pZSmY1bDhaWVBsNU05aUE0WWdva2pNOUJrK2NMWTE0VW8zcXRxNzZjYklzaUkKMG9TT28zZ2orcWlicG5rcjBtaVVLdGFUa2pJNElCS0ZaQVlsM3hHM3pyN1BpVHRxNlRoMlFDQ3h0Q1NmZ1dPWgpCdVRHK1JnWkhoQW5UQ1lrNmJWTm9Bbk8wMHh0S2VUMXNQNTFiWjlhUEZ0S0VDTDlxY1U9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/ingress.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbmtKYTN6ZVNhUTc2VVBSWFdGTjE1anZxamVKSzU0dWFkK1Q2bnhhRlNGRHUrVnloClBPZms0ckFIUE9rTU5hbm9reGhRbzJEKy92bzJlWHc1YS9EVDh2NGVZeVYxQjh4Vk5JZzh2N1JnMmszVFJmM2QKUURqcjRQSkNRK1A1VXNDdDdvNmcxeUdHSFMvOER1NEE4czNGMUY0aTdTRG1XRkhRM1dTTXlqRXlVcWg3UllmRwpHS293WkVUcTdRKzZPQ1d0MWZvSkE0QklwYm9BWjE5Ny9sQ1lLRWNnWmtaMDN0U1kzaklXN0lCTWN4N2FCRTMvClNjbStHUjllL3QyNDJqWi9RRnBHS2RCNHd5THJpQXdrKzVhSXZZNTEzQkR0bUFreFY2c2FNMUFPbGdqT1FVMTIKRkdUVVU5dmI0N1JFTjdvZlBOOVJBY2w4NmJ6aGx6NktrMDVPVndJREFRQUJBb0lCQUdQb1plKzI2SEgwWjZnRgpxTUowNWVBMEFRNFRSdEJIL0hzbURlV3kxTzlqVUlvUnBTU0xESjdqRzU2alRQYnZ6WWhXK0VrNzZaN1VIT0d5CnY1bGFEcU8vTXpYS0pzaUdnVi9KaGZoTUNqeW1sdkwvb2RaeVdNN0lnWGJVaThobkpTYU4yaElWOHRHb1FrcTIKaTlpOGVPQnBrVWo3MVE3Nmo0M0VkWEVMZjhaWDRrY0h3YUppNklVVk5ZUmRnRjlqbmNQWFpMd0ZvQkhWczBXdwphZytqVDRMbXJuQjFGTVhyaWY1WHFjUk5NSGFycW1xbnV0cHVmcUl1THlqb24wN2x0SGdGMjZXMHpGQ1FIZ0orCnFmVkVvVEVYcHBaczg4WC94QUk4cUNPWVZlSkEvQXBqbzNZb3Z3OUtlZENDVFgrZTZnc25jUklDa3Z2VDl4MDMKZHVJZDJuRUNnWUVBenN6RnFMT0RRZWRWd09kQThBc3VGQWpZd1dFRk1kTjZmZWk5b1RRWWY4UTI1YmZEVE9oVgovT3NjSzFEckNNV3dUVTBPVTFZZVJmZlZYNzlCcWtyV3FFMncxSkN3c2ZhUkk2N0Q0QTJrdU91c3dhS0NzeGltClUybGhOaW9ubVB0TWRGOHhCTG16ellYcnNaSE1Ld3pVVysweU9tWGNMNXhsaEl1NHJ5blhscjhDZ1lFQXcra3gKY0MyandUenpLRnJMWTJBWWNaUTR1SnNDbU9UMStidlN6bTdVL2x1NHAyUVZvK0hUZGQyVVljMi9EUDRESlFRQwo1TkkzcVZxL2ttbjlhVkVUMHBURTRiT25ZbFFoa2l4enRheWhkbndmVW53Zjd1RU41Z3J5RGlqU3c2T1E5OHVBCjZYVC8vRDN4WlYvbFpvVDBvOWpJelIyMVJlKzE3ZGNVVFNybkJta0NnWUJYdE10RDRGYVQxZHd0d3lac2FDRnoKeDhpK1F6cWp4akJXUkNaZ3Z5cUF6YVFHeTJnZUx3K0JBK25maVNNVmhscGVmb2JMMjJOZGcxM1FqTm41c21IVgo0WlZVb2NUK3hUY0xMaXpPMHBxQS94czJ5SWlzRXBGQUlScGtrWDVYeUlURmVqWGM3akdPd2ZTVFMrV09nSk4wCkpXWS9GRUpOUXdSZk1hN3pRMGkzR3dLQmdGa3ZzTlQ3d2YrM2lvN0ZmcS8zMEVqc2pFSG1OM0Y1VWsxbFp4dVoKTXhlMGs4U0llSjJKc2VXSGdRUmhVT2RPUUFvNjRFSmhQUHU1RjF0Rkt4c2wwTnRkNUo5SFZSMGJaY2tRdVlCcwpYWGorR3BoSGI1WWxHRm13Zys5VVFGYldBS24rRitxdjI5VnVNWlhQNlRRWnRQRmVRRk80Z1l5Y0N2dUNuWGhmCjNwcDVBb0dBSFIxL2lLMEV3d1pZSmY1bDhaWVBsNU05aUE0WWdva2pNOUJrK2NMWTE0VW8zcXRxNzZjYklzaUkKMG9TT28zZ2orcWlicG5rcjBtaVVLdGFUa2pJNElCS0ZaQVlsM3hHM3pyN1BpVHRxNlRoMlFDQ3h0Q1NmZ1dPWgpCdVRHK1JnWkhoQW5UQ1lrNmJWTm9Bbk8wMHh0S2VUMXNQNTFiWjlhUEZ0S0VDTDlxY1U9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/ingress.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURnRENDQW1pZ0F3SUJBZ0lJQytvT3FnbU9ZYUV3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNamd4TWpJMU1UazBOVFEzV2pBck1SQXdEZ1lEVlFRS0V3ZHBibWR5WlhOek1SY3dGUVlEVlFRREV3NWxibll4CkxuSmhabVpoTG5oNWVqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUo1Q1d0ODMKa21rTytsRDBWMWhUZGVZNzZvM2lTdWVMbW5maytwOFdoVWhRN3ZsY29Uem41T0t3Qnp6cEREV3A2Sk1ZVUtOZwovdjc2Tm5sOE9XdncwL0wrSG1NbGRRZk1WVFNJUEwrMFlOcE4wMFg5M1VBNDYrRHlRa1BqK1ZMQXJlNk9vTmNoCmhoMHYvQTd1QVBMTnhkUmVJdTBnNWxoUjBOMWtqTW94TWxLb2UwV0h4aGlxTUdSRTZ1MFB1amdscmRYNkNRT0EKU0tXNkFHZGZlLzVRbUNoSElHWkdkTjdVbU40eUZ1eUFUSE1lMmdSTi8wbkp2aGtmWHY3ZHVObzJmMEJhUmluUQplTU1pNjRnTUpQdVdpTDJPZGR3UTdaZ0pNVmVyR2pOUURwWUl6a0ZOZGhSazFGUGIyK08wUkRlNkh6emZVUUhKCmZPbTg0WmMraXBOT1RsY0NBd0VBQWFPQnJUQ0JxakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRklJMgpwRU8vMVJGMmcyN0dZRjVuQnM2blJ5VCtNQjhHQTFVZEl3UVlNQmFBRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5CjVWR0VNQ3NHQTFVZEVRUWtNQ0tDRG1WdWRqRXVjbUZtWm1FdWVIbDZnaEFxTG1WdWRqRXVjbUZtWm1FdWVIbDYKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCcFFpMXhmZUlvclRRSDRpRHo1bkJFaFdJSXdHVE9DRk4zdjNMNgpLaW1SQ2I3QThyOTlTZWgyUlpzRTBqS0lzTGM2a0cvdENqNEdvM3hyZkxIdjd6MVFSVkxmRCt2RVlEeURITTI1ClBGZGJVdHRCdjJ6ZytNUUh1dmNvMWtvb1Bpd2ZLcjQxV1lqdUpyS3gvUHlJclRJdkdjNDhLdVVOV3k0eGcyZzcKN0pZWFNTR3JycFZMOHZISTN4T0hCR0hVMVZzc29wbzMwaXJvd1JVNFArd0c0SlBsajNiSjhjTGdyL3lZUFFyeAovNk41b1lwL2c0SjdqZ2pSdGJodnhHTyt5SHpPVDR6a2N0UUF1SEl0emlMZ3RwUmErT1JOYTlBSjM5UjlkTElHClRzMkg4L3U3cnVLd2p2WXhiWC8vQVFRZ21XS1ZXbDlyd1lISEwwWHA2dnBjRkdBWAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1EQ0NBaGlnQXdJQkFnSUlINUczWDZJUnhyb3dEUVlKS29aSWh2Y05BUUVMQlFBd0pqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVJBd0RnWURWUVFERXdkeWIyOTBMV05oTUI0WERURTRNVEl5T0RFNU5EVTBORm9YCkRUSTRNVEl5TlRFNU5EVTBOVm93SlRFUk1BOEdBMVVFQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDEKWW1VdFkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDa1Erc1JmRlNNVExObgpRVk4vMzhSY1hzdUluZDhaUHVoRTNrSHBEZ2ltckZ1SzJzSUNLcG8vYjQ2V01qekNHaXNkUnRTQktlTnlwRmxWCm01U25XdWN1c3p2RHRHUTFUZnp0S0lObFd6VXFrMnprYWNtRWI0ZGRqNkwreGk5UjEyaklJSncrRW8rRElIaGIKeTRPVzc1aEsxQjE5d1A4aURWYnNqOHdCTWIvL2o3Y3k4Q0hQT3FZT3NMWFRGTDQwSzNISjMzdERTem0rcWJmego2MjlGWWYvck1zalUrNXkxL0Z1Qmswa29GMXd0a05XL05hR2hjTnNiMEtXWFU0RWc3eWs5clBFdVA4VG1JLzFwCkh5OGxwVURUTnhPM1pXeXlJeGZ2TDZrNWpBWVFXNlpUdHBHSGI2ZHJHcEFmN09odjYrem1UaDZjdnd6eC9BUTMKajlyOXUrdEJBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFILwpNQjBHQTFVZERnUVdCQlJ6VTNqMUFyd2dxN1NTb3lmbUE5dC9QZVZSaERBZkJnTlZIU01FR0RBV2dCUnpVM2oxCkFyd2dxN1NTb3lmbUE5dC9QZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNZZ2RYTFJPaTYydWwvRVoKU1NTVGc4bkpGWmtpaXBXWjlBeno2NG1CREx5U2NWTzQ4bUlQa2FvNlJuZjZOTTRqUFQxWS9jWVI0YklFRzNKSgpoZHU1emhJY0FaMlVEeHplMXBNVGI4TTVZWTI0SGFJL1RYeDBuTG1BU3RZS3NRbkZ4N1FHazZlYlFoaU5BWjlOClZzdzVTVmYzcXZoeFZJYVFUY0N1dGlBTHNuWmc2eXc5WDM4dXlieEI3YmltRnJGMHB3RDVqT0dUSzRscGcwdGwKamk5cW9yeTRaT0VnV0lDRVpxUHd6cmw3UWI4MTBNN0xxZnpPNVRNbFBmdU1McGx4S3M3cHpTaVlSVmUvT2lpMwpmd2lBV1VJOGNKYzdxY2NKZy9lN2hVMXN0VEppSmZ1ajdmTTFEL3RKbUVqREtrN2d3WE0yL05TWnYrR3VqdzFqCitQdXZwdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJSDVHM1g2SVJ4cm93RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2tRK3NSZkZTTVRMTm4KUVZOLzM4UmNYc3VJbmQ4WlB1aEUza0hwRGdpbXJGdUsyc0lDS3BvL2I0NldNanpDR2lzZFJ0U0JLZU55cEZsVgptNVNuV3VjdXN6dkR0R1ExVGZ6dEtJTmxXelVxazJ6a2FjbUViNGRkajZMK3hpOVIxMmpJSUp3K0VvK0RJSGhiCnk0T1c3NWhLMUIxOXdQOGlEVmJzajh3Qk1iLy9qN2N5OENIUE9xWU9zTFhURkw0MEszSEozM3REU3ptK3FiZnoKNjI5RllmL3JNc2pVKzV5MS9GdUJrMGtvRjF3dGtOVy9OYUdoY05zYjBLV1hVNEVnN3lrOXJQRXVQOFRtSS8xcApIeThscFVEVE54TzNaV3l5SXhmdkw2azVqQVlRVzZaVHRwR0hiNmRyR3BBZjdPaHY2K3ptVGg2Y3Z3engvQVEzCmo5cjl1K3RCQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSelUzajFBcndncTdTU295Zm1BOXQvUGVWUmhEQWZCZ05WSFNNRUdEQVdnQlJ6VTNqMQpBcndncTdTU295Zm1BOXQvUGVWUmhEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDWWdkWExST2k2MnVsL0VaClNTU1RnOG5KRlpraWlwV1o5QXp6NjRtQkRMeVNjVk80OG1JUGthbzZSbmY2Tk00alBUMVkvY1lSNGJJRUczSkoKaGR1NXpoSWNBWjJVRHh6ZTFwTVRiOE01WVkyNEhhSS9UWHgwbkxtQVN0WUtzUW5GeDdRR2s2ZWJRaGlOQVo5TgpWc3c1U1ZmM3F2aHhWSWFRVGNDdXRpQUxzblpnNnl3OVgzOHV5YnhCN2JpbUZyRjBwd0Q1ak9HVEs0bHBnMHRsCmppOXFvcnk0Wk9FZ1dJQ0VacVB3enJsN1FiODEwTTdMcWZ6TzVUTWxQZnVNTHBseEtzN3B6U2lZUlZlL09paTMKZndpQVdVSThjSmM3cWNjSmcvZTdoVTFzdFRKaUpmdWo3Zk0xRC90Sm1FakRLazdnd1hNMi9OU1p2K0d1ancxagorUHV2cHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcEVQckVYeFVqRXl6WjBGVGY5L0VYRjdMaUozZkdUN29STjVCNlE0SXBxeGJpdHJDCkFpcWFQMitPbGpJOHdob3JIVWJVZ1NuamNxUlpWWnVVcDFybkxyTTd3N1JrTlUzODdTaURaVnMxS3BOczVHbkoKaEcrSFhZK2kvc1l2VWRkb3lDQ2NQaEtQZ3lCNFc4dURsdStZU3RRZGZjRC9JZzFXN0kvTUFURy8vNCszTXZBaAp6enFtRHJDMTB4UytOQ3R4eWQ5N1EwczV2cW0zOCt0dlJXSC82ekxJMVB1Y3RmeGJnWk5KS0JkY0xaRFZ2eldoCm9YRGJHOUNsbDFPQklPOHBQYXp4TGovRTVpUDlhUjh2SmFWQTB6Y1R0MlZzc2lNWDd5K3BPWXdHRUZ1bVU3YVIKaDIrbmF4cVFIK3pvYit2czVrNGVuTDhNOGZ3RU40L2EvYnZyUVFJREFRQUJBb0lCQVFDUHVaVnQ0VGtnNE9PQQpEdHArWWsydS9JcGRhTFNScEVjYUt0WEVrckRqRkorc0tLZmp1VjdvN2pUMkdkS3Jpclg2a2NUUmx0TVp0YzhzClprcDArOGFYUjkrYzVyTmZLSE9MRmcyUm0zSXpaSGE4akFyMFE1bFBOYVJLQXlIWUcvL2tTeFFxQTVkcUJma0oKYUZJa3VGS3A5bG92YzdSSUdSL2JNQjR4VlZSR3lCTVJhbHhmNk1pMHZkQWwzcGM3Yit4UnM3U2JFemlJdmpzOQptclBtbHdxNTdaeEtWc085WHNJNVNtRDFmTEcvSy9qaWRVRFFGSUUyWnRONDRmMy9scHRDTjltSnd2dFhrRzBUCnlIUFpxZHZXR0NBQ2VKdSt2WEEwTm5qYkNsM29rcGhCV2FGb1RXRGdVeDVXMEt6RzhPZmsvS3dES3UrQ2xYNloKMVRJazVONVpBb0dCQU1MSjlJWXFNNUZ4ekVDM2ZzZlI0YUx6b0R2QlZhR2lpTGI2Nnhjcno3K2hoSmc0bkY0SQpNL3FPd0lJRFVMRWVWbXIyMWlCYnpHOTQ3MjN2VmlKOG40by9zR0J1eDBuUzJ2dVdvdDNPcVAzL00yT1NKR3VGCjNDalhtZ0dNcnRxSERjQkhVc0hBZnB0aFgzWWIzdXQ4RmZNMEY1b21rY1FvZElGb1pHSGR6WERyQW9HQkFOZmkKZERQUmdaVUEzZVpSaCtLMnB2U0V1ZXV1Q0hpNW1xMkJsak1sZW14STl2RUN1QmlHYmxDYnc1a0NPMVBWZGFhcwovTkU1WjJCNG1mQk9pdVhCYk9kdHNONFFtdVdNd1RhNzNLY3d3eHdJU3c1ZzE2LzhUQUtoVFBnWFNDYlY1eVo0CmRPZzA4MnEyV0JQTk44U21Ec2svbmYxaTNsQnpTaW9NM0VHV01LbURBb0dBSUlRTjZZZUo3REdPNHc2K2Z5U3UKQWNHaGNkZ29Mejh1aXp6L21YS2F6MlpxOSs0YlRDY2FaaTBHUGEzSC9va042L1VnY1c1aGhnb3VEYS95TlBlUQp1a2MvYmhtUDh1YmIzenVhSEdTdkdSZE13TVpZaGdwbVlmcjdubDZab2FrQnhxTWhVVzZNcyt0aFFCb084RWhhCmNhcTBkZXNTVWloZXFtdCt0a2VNVDlrQ2dZRUF3RTQxNnU3bWVsK3lTdmMzajRuYkFSZTJNaTN0MS9TbHg0Y1cKeityRHVlL3BJVm1sdWhzTjYzcEZhMmdraHhJdjRsQllTTnZVcllmZ3dNS0dVaEhTTy9sblF2a1JzZ2VIR1lXUgpFZEdMQzg2TFpYeDR4WWgrQVIzRVhYOEh3NmhwWnNpSWcweWZ4T0EzWnpRNFNGRVAvTTlSb2lSUEd1VUlISnNtCkhMcDRFSmNDZ1lCMTYxbnpuQzRGd0J1NmMxMklyYjRVK0x5aEdvelM2dTdHRGo0UWhRbS9qdXpOM2VnR1hOMU4Kb3BHWG9WUnZaY25Vam9tb0JHSGZSZkhoUm15NFdXbjFmWDZuZUJjSEN0ZzZzaWJIaWd3SDZsQ01lUDBKQUVINAoxaDUydEs0R0ttS0ovUGkrZnd1YXFSRnpPaG1QUy9vL0ZBK3BDRjk5T1RBSEYxVkNsTXl4R3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcEVQckVYeFVqRXl6WjBGVGY5L0VYRjdMaUozZkdUN29STjVCNlE0SXBxeGJpdHJDCkFpcWFQMitPbGpJOHdob3JIVWJVZ1NuamNxUlpWWnVVcDFybkxyTTd3N1JrTlUzODdTaURaVnMxS3BOczVHbkoKaEcrSFhZK2kvc1l2VWRkb3lDQ2NQaEtQZ3lCNFc4dURsdStZU3RRZGZjRC9JZzFXN0kvTUFURy8vNCszTXZBaAp6enFtRHJDMTB4UytOQ3R4eWQ5N1EwczV2cW0zOCt0dlJXSC82ekxJMVB1Y3RmeGJnWk5KS0JkY0xaRFZ2eldoCm9YRGJHOUNsbDFPQklPOHBQYXp4TGovRTVpUDlhUjh2SmFWQTB6Y1R0MlZzc2lNWDd5K3BPWXdHRUZ1bVU3YVIKaDIrbmF4cVFIK3pvYit2czVrNGVuTDhNOGZ3RU40L2EvYnZyUVFJREFRQUJBb0lCQVFDUHVaVnQ0VGtnNE9PQQpEdHArWWsydS9JcGRhTFNScEVjYUt0WEVrckRqRkorc0tLZmp1VjdvN2pUMkdkS3Jpclg2a2NUUmx0TVp0YzhzClprcDArOGFYUjkrYzVyTmZLSE9MRmcyUm0zSXpaSGE4akFyMFE1bFBOYVJLQXlIWUcvL2tTeFFxQTVkcUJma0oKYUZJa3VGS3A5bG92YzdSSUdSL2JNQjR4VlZSR3lCTVJhbHhmNk1pMHZkQWwzcGM3Yit4UnM3U2JFemlJdmpzOQptclBtbHdxNTdaeEtWc085WHNJNVNtRDFmTEcvSy9qaWRVRFFGSUUyWnRONDRmMy9scHRDTjltSnd2dFhrRzBUCnlIUFpxZHZXR0NBQ2VKdSt2WEEwTm5qYkNsM29rcGhCV2FGb1RXRGdVeDVXMEt6RzhPZmsvS3dES3UrQ2xYNloKMVRJazVONVpBb0dCQU1MSjlJWXFNNUZ4ekVDM2ZzZlI0YUx6b0R2QlZhR2lpTGI2Nnhjcno3K2hoSmc0bkY0SQpNL3FPd0lJRFVMRWVWbXIyMWlCYnpHOTQ3MjN2VmlKOG40by9zR0J1eDBuUzJ2dVdvdDNPcVAzL00yT1NKR3VGCjNDalhtZ0dNcnRxSERjQkhVc0hBZnB0aFgzWWIzdXQ4RmZNMEY1b21rY1FvZElGb1pHSGR6WERyQW9HQkFOZmkKZERQUmdaVUEzZVpSaCtLMnB2U0V1ZXV1Q0hpNW1xMkJsak1sZW14STl2RUN1QmlHYmxDYnc1a0NPMVBWZGFhcwovTkU1WjJCNG1mQk9pdVhCYk9kdHNONFFtdVdNd1RhNzNLY3d3eHdJU3c1ZzE2LzhUQUtoVFBnWFNDYlY1eVo0CmRPZzA4MnEyV0JQTk44U21Ec2svbmYxaTNsQnpTaW9NM0VHV01LbURBb0dBSUlRTjZZZUo3REdPNHc2K2Z5U3UKQWNHaGNkZ29Mejh1aXp6L21YS2F6MlpxOSs0YlRDY2FaaTBHUGEzSC9va042L1VnY1c1aGhnb3VEYS95TlBlUQp1a2MvYmhtUDh1YmIzenVhSEdTdkdSZE13TVpZaGdwbVlmcjdubDZab2FrQnhxTWhVVzZNcyt0aFFCb084RWhhCmNhcTBkZXNTVWloZXFtdCt0a2VNVDlrQ2dZRUF3RTQxNnU3bWVsK3lTdmMzajRuYkFSZTJNaTN0MS9TbHg0Y1cKeityRHVlL3BJVm1sdWhzTjYzcEZhMmdraHhJdjRsQllTTnZVcllmZ3dNS0dVaEhTTy9sblF2a1JzZ2VIR1lXUgpFZEdMQzg2TFpYeDR4WWgrQVIzRVhYOEh3NmhwWnNpSWcweWZ4T0EzWnpRNFNGRVAvTTlSb2lSUEd1VUlISnNtCkhMcDRFSmNDZ1lCMTYxbnpuQzRGd0J1NmMxMklyYjRVK0x5aEdvelM2dTdHRGo0UWhRbS9qdXpOM2VnR1hOMU4Kb3BHWG9WUnZaY25Vam9tb0JHSGZSZkhoUm15NFdXbjFmWDZuZUJjSEN0ZzZzaWJIaWd3SDZsQ01lUDBKQUVINAoxaDUydEs0R0ttS0ovUGkrZnd1YXFSRnpPaG1QUy9vL0ZBK3BDRjk5T1RBSEYxVkNsTXl4R3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJSDVHM1g2SVJ4cm93RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2tRK3NSZkZTTVRMTm4KUVZOLzM4UmNYc3VJbmQ4WlB1aEUza0hwRGdpbXJGdUsyc0lDS3BvL2I0NldNanpDR2lzZFJ0U0JLZU55cEZsVgptNVNuV3VjdXN6dkR0R1ExVGZ6dEtJTmxXelVxazJ6a2FjbUViNGRkajZMK3hpOVIxMmpJSUp3K0VvK0RJSGhiCnk0T1c3NWhLMUIxOXdQOGlEVmJzajh3Qk1iLy9qN2N5OENIUE9xWU9zTFhURkw0MEszSEozM3REU3ptK3FiZnoKNjI5RllmL3JNc2pVKzV5MS9GdUJrMGtvRjF3dGtOVy9OYUdoY05zYjBLV1hVNEVnN3lrOXJQRXVQOFRtSS8xcApIeThscFVEVE54TzNaV3l5SXhmdkw2azVqQVlRVzZaVHRwR0hiNmRyR3BBZjdPaHY2K3ptVGg2Y3Z3engvQVEzCmo5cjl1K3RCQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSelUzajFBcndncTdTU295Zm1BOXQvUGVWUmhEQWZCZ05WSFNNRUdEQVdnQlJ6VTNqMQpBcndncTdTU295Zm1BOXQvUGVWUmhEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDWWdkWExST2k2MnVsL0VaClNTU1RnOG5KRlpraWlwV1o5QXp6NjRtQkRMeVNjVk80OG1JUGthbzZSbmY2Tk00alBUMVkvY1lSNGJJRUczSkoKaGR1NXpoSWNBWjJVRHh6ZTFwTVRiOE01WVkyNEhhSS9UWHgwbkxtQVN0WUtzUW5GeDdRR2s2ZWJRaGlOQVo5TgpWc3c1U1ZmM3F2aHhWSWFRVGNDdXRpQUxzblpnNnl3OVgzOHV5YnhCN2JpbUZyRjBwd0Q1ak9HVEs0bHBnMHRsCmppOXFvcnk0Wk9FZ1dJQ0VacVB3enJsN1FiODEwTTdMcWZ6TzVUTWxQZnVNTHBseEtzN3B6U2lZUlZlL09paTMKZndpQVdVSThjSmM3cWNjSmcvZTdoVTFzdFRKaUpmdWo3Zk0xRC90Sm1FakRLazdnd1hNMi9OU1p2K0d1ancxagorUHV2cHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeletCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0RENDQXB5Z0F3SUJBZ0lJRmtRZDBLUVVQOEF3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNVGd4TWpJNE1qQXhOVFEyV2pDQmx6RkJNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwCmN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeFVqQlFCZ05WQkFNVFNYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1WlMxamIyNW1hV2N0YjNCbApjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDM0xJMlhYeGZKWHpXRjlOWXg1N1hLdTFGSUNNRXFwZ2hHbWVOODVJcUdJcTVTcXJ1RjFhYzUKZVp2UGJhNGZWdTFpMXN4T1dCOXBONFBRdnZUQkJoeWtWS282clVRYThvNUtWSWVHU1JtVlI2NDF4UjF5WVdCTwpMc0N6TEhzejNMVUliNDBaM0pqUms4Vjg5VWlvbloxeHJSM0JZQWlWN1p2SlkyQmU0bS9kUnBDcDJKa2oyMkwxCmt4WU0vTUh3UWV1ZnFZN2lsYVhhTmJQenZmR2ZscjhocnVDcW9DOTZUK0RpcWRFWkNjYjNBbktjdFZvcmVjdFcKbEJXSXc5aUhNdDU1NGF4OVoxOW9Zd3BzU3dPb0JPYjFPU0dNS1p3U3FMNFlua1EwOFpod3pOOVFDd25oVm1YagppTHBqclNHRHFuNjB0cjgyaTk4MUszSVlnUS9WK0orakFnTUJBQUdqZFRCek1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU0MKTnFSRHY5VVJkb051eG1CZVp3Yk9wMGNrL2pBZkJnTlZIU01FR0RBV2dCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0LwpQZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVpTQWMrZzZOTWFDWVdwYlltd1JrZWt6eVk4emREWHJnCkREVGxCcEZpbmVUOHgxLzdwdU1yaUphODQyQ2NHei9vdkh1cEN4aHB6cndsS2VTNDZ6azFsM3ozQXBpTDlCT1YKbFlUSXpSUld2OWZRZnZ1OTdmczducVJlN29MWUxiLzh0cmN1WEdrRE9nZ1ZoTy9OVUF5bmJoL1IyeUNGSGw3YgpmMW5nY1B2S3JzajRlbHdCclJnUUZQNnltMWN2R0Rnd3k2a1lOUzVZMnA1M0E1SGFBRXBDdVVXejhoRFFMVXNKCjBqTzl3eU0zOG5TVjhmeUpyc0x4Qmp3dGZpQVN0M2tYdVNERUlYWWllcWRrcW5QaFNBaXJ0SHBqL3V4Z0FhM0QKZWhUa0YxcDRVK0dUd1lFR2lId3BlekEvSENabUc3RGVxdXZ2SmdJNHlMV3QySmpneEZWT2xRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdHl5TmwxOFh5VjgxaGZUV01lZTF5cnRSU0FqQktxWUlScG5qZk9TS2hpS3VVcXE3CmhkV25PWG1iejIydUgxYnRZdGJNVGxnZmFUZUQwTDcwd1FZY3BGU3FPcTFFR3ZLT1NsU0hoa2tabFVldU5jVWQKY21GZ1RpN0FzeXg3TTl5MUNHK05HZHlZMFpQRmZQVklxSjJkY2EwZHdXQUlsZTJieVdOZ1h1SnYzVWFRcWRpWgpJOXRpOVpNV0RQekI4RUhybjZtTzRwV2wyald6ODczeG41YS9JYTdncXFBdmVrL2c0cW5SR1FuRzl3SnluTFZhCkszbkxWcFFWaU1QWWh6TGVlZUdzZldkZmFHTUtiRXNEcUFUbTlUa2hqQ21jRXFpK0dKNUVOUEdZY016ZlVBc0oKNFZabDQ0aTZZNjBoZzZwK3RMYS9Ob3ZmTlN0eUdJRVAxZmlmb3dJREFRQUJBb0lCQUhYRy9PZTJxaG05MFRGbgp3dzNsbWR0WDVDUjRGSlF5bTZHaHMwY0x3QklOWEo4a3pseDRpd1NHcit1STcydVJQaVBPVHlHVXdlV3FYMlFxClZEK0VpWWdVTkR4MFNoVTFuczRtV2RtN1NPcldZeXFKcXF4djlqZHZFbEppcUhrcFVYR3lJRHpmdlpjTDkvQ24KMm1jb3FTSjltR05OTjFnSHBxS3Y5amdzU3Bjd2dKSUIyVmdOdlU3dDhUb29LdHRYSkV2RnZkcGtVMktlRmNGbwpNSk1UZUZTQXdnWWNHOGlsVWc4WW81SWFWOXNHaW45UmEvOWdZYklIQkEvODZYR1lZaXdHTHpFSjllMG5tZ0tOCjRNV3NHMS9lRWl0RSt5UVdpa29yam5xTmUvY0hBQU5pLy9kcDJydVJaQ2pZajVvWUNod2FUWG02aXhKaEpCdmMKMU00alpIa0NnWUVBMFRkQXU3SERuMnVpOXlRWEhBcjA5cjc3QmJpZEIvNWYwLzBwR0Z5bThKV3YrWllVOUU0RApiMUt2eVBwaitPMjZHMWVvdi9TcEdCeWQzaTRrVmVMZXN3TDJkT3l0YUlMQlZTLy95Tk91QjU2Qmw0MXRHS0daClVFME5xdFByU1JBOE5ZbWV4QlFwQXE0dzhjMHJ3QUZMV2RsVVBWQm1uTTI3WTBXbUdwSTkxazhDZ1lFQTRDS0QKck50NzFNbkRCSndpcDRoc2l4cWphSTdTeHFkUnM3Y01URXh1a1d6VWFvS3QzQ3Z1OTZOWENDaGhiR052WlE0WQpGUjJDajdKUlowWk5TdjJaQzROUFZ3b0x2NEppbGhsNlc5T0RqSFN6ZXdyR3dPMTVqeVN4cko1SHluQWtWbFk5ClRiMDVuempYWjg5Q3ozV0g3KytGZDE3Z1pKVk52aHAxQ1o5ZG9HMENnWUFQTXQxZ0JVejUwdDcyNTBkS2dUMUUKZzZGR3pCK1VTaFY2R0FVWlFQbmJ0blFmUkpqbkdwZkRTWlY5bXpzU0JXc2t1MXlGL1djZldrelpyQzUxa3RLcwozSVU4LzBpbHRBSUpoMEFrdmNRQng3RVFhblRIZWszaCtJY0twdlNMelVNaWZJbnRJcTNNQlEySE0ybC9QRmpXCkFTVE9nMzNBM0cxRmkvVENMMmVRbndLQmdETEVIb2I4ZjZQR3YwRkFEQ2xlSVJld3hPcGR6eWZucGYzS3JDSnIKL1c4Njh6SGN2M3hyQndsWUdkSmpNdzNWeDlsZnc5eWtmbm9GcmFKeXJmY2FVWnZsOWdhRTQveFFqL3ZuY1d0egpFUXl6TWlQZ1lQdzV6WnE2ZVBQY05lNklUL0t1UGR4cHk2OWd0SWx5ekhNbzc4MU10ekkrYnh6WkpHNjJsMlBDCmtQWlJBb0dBRWx3UkdLUVZ6VjFqdEJ5ZzJUVERpQnRpZStISysrY2U5MUExUW0wK3l0OGtaM3QwU2N2clJlR1gKOHhWdGd1TnorNjdDQkJwUVJjaWg2YjVnUkFaNm1MekJMeDYrZUxZVUZra2tQUkQ5VVdCaVYvWGZjMnpTL0NYWApUZFNBL0ZrcWlXSkM3c2hkc2lRakJMOGk4UjBnYjUveDc0Rmx0VEZkM3lDSzMrZHFaVFE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdHl5TmwxOFh5VjgxaGZUV01lZTF5cnRSU0FqQktxWUlScG5qZk9TS2hpS3VVcXE3CmhkV25PWG1iejIydUgxYnRZdGJNVGxnZmFUZUQwTDcwd1FZY3BGU3FPcTFFR3ZLT1NsU0hoa2tabFVldU5jVWQKY21GZ1RpN0FzeXg3TTl5MUNHK05HZHlZMFpQRmZQVklxSjJkY2EwZHdXQUlsZTJieVdOZ1h1SnYzVWFRcWRpWgpJOXRpOVpNV0RQekI4RUhybjZtTzRwV2wyald6ODczeG41YS9JYTdncXFBdmVrL2c0cW5SR1FuRzl3SnluTFZhCkszbkxWcFFWaU1QWWh6TGVlZUdzZldkZmFHTUtiRXNEcUFUbTlUa2hqQ21jRXFpK0dKNUVOUEdZY016ZlVBc0oKNFZabDQ0aTZZNjBoZzZwK3RMYS9Ob3ZmTlN0eUdJRVAxZmlmb3dJREFRQUJBb0lCQUhYRy9PZTJxaG05MFRGbgp3dzNsbWR0WDVDUjRGSlF5bTZHaHMwY0x3QklOWEo4a3pseDRpd1NHcit1STcydVJQaVBPVHlHVXdlV3FYMlFxClZEK0VpWWdVTkR4MFNoVTFuczRtV2RtN1NPcldZeXFKcXF4djlqZHZFbEppcUhrcFVYR3lJRHpmdlpjTDkvQ24KMm1jb3FTSjltR05OTjFnSHBxS3Y5amdzU3Bjd2dKSUIyVmdOdlU3dDhUb29LdHRYSkV2RnZkcGtVMktlRmNGbwpNSk1UZUZTQXdnWWNHOGlsVWc4WW81SWFWOXNHaW45UmEvOWdZYklIQkEvODZYR1lZaXdHTHpFSjllMG5tZ0tOCjRNV3NHMS9lRWl0RSt5UVdpa29yam5xTmUvY0hBQU5pLy9kcDJydVJaQ2pZajVvWUNod2FUWG02aXhKaEpCdmMKMU00alpIa0NnWUVBMFRkQXU3SERuMnVpOXlRWEhBcjA5cjc3QmJpZEIvNWYwLzBwR0Z5bThKV3YrWllVOUU0RApiMUt2eVBwaitPMjZHMWVvdi9TcEdCeWQzaTRrVmVMZXN3TDJkT3l0YUlMQlZTLy95Tk91QjU2Qmw0MXRHS0daClVFME5xdFByU1JBOE5ZbWV4QlFwQXE0dzhjMHJ3QUZMV2RsVVBWQm1uTTI3WTBXbUdwSTkxazhDZ1lFQTRDS0QKck50NzFNbkRCSndpcDRoc2l4cWphSTdTeHFkUnM3Y01URXh1a1d6VWFvS3QzQ3Z1OTZOWENDaGhiR052WlE0WQpGUjJDajdKUlowWk5TdjJaQzROUFZ3b0x2NEppbGhsNlc5T0RqSFN6ZXdyR3dPMTVqeVN4cko1SHluQWtWbFk5ClRiMDVuempYWjg5Q3ozV0g3KytGZDE3Z1pKVk52aHAxQ1o5ZG9HMENnWUFQTXQxZ0JVejUwdDcyNTBkS2dUMUUKZzZGR3pCK1VTaFY2R0FVWlFQbmJ0blFmUkpqbkdwZkRTWlY5bXpzU0JXc2t1MXlGL1djZldrelpyQzUxa3RLcwozSVU4LzBpbHRBSUpoMEFrdmNRQng3RVFhblRIZWszaCtJY0twdlNMelVNaWZJbnRJcTNNQlEySE0ybC9QRmpXCkFTVE9nMzNBM0cxRmkvVENMMmVRbndLQmdETEVIb2I4ZjZQR3YwRkFEQ2xlSVJld3hPcGR6eWZucGYzS3JDSnIKL1c4Njh6SGN2M3hyQndsWUdkSmpNdzNWeDlsZnc5eWtmbm9GcmFKeXJmY2FVWnZsOWdhRTQveFFqL3ZuY1d0egpFUXl6TWlQZ1lQdzV6WnE2ZVBQY05lNklUL0t1UGR4cHk2OWd0SWx5ekhNbzc4MU10ekkrYnh6WkpHNjJsMlBDCmtQWlJBb0dBRWx3UkdLUVZ6VjFqdEJ5ZzJUVERpQnRpZStISysrY2U5MUExUW0wK3l0OGtaM3QwU2N2clJlR1gKOHhWdGd1TnorNjdDQkJwUVJjaWg2YjVnUkFaNm1MekJMeDYrZUxZVUZra2tQUkQ5VVdCaVYvWGZjMnpTL0NYWApUZFNBL0ZrcWlXSkM3c2hkc2lRakJMOGk4UjBnYjUveDc0Rmx0VEZkM3lDSzMrZHFaVFE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0RENDQXB5Z0F3SUJBZ0lJRmtRZDBLUVVQOEF3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TWpJNE1UazBOVFEwV2hjTgpNVGd4TWpJNE1qQXhOVFEyV2pDQmx6RkJNRDhHQTFVRUNoTTRjM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwCmN6cHZjR1Z1YzJocFpuUXRiV0ZqYUdsdVpTMWpiMjVtYVdjdGIzQmxjbUYwYjNJeFVqQlFCZ05WQkFNVFNYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwdmNHVnVjMmhwWm5RdGJXRmphR2x1WlMxamIyNW1hV2N0YjNCbApjbUYwYjNJNmJtOWtaUzFpYjI5MGMzUnlZWEJ3WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDM0xJMlhYeGZKWHpXRjlOWXg1N1hLdTFGSUNNRXFwZ2hHbWVOODVJcUdJcTVTcXJ1RjFhYzUKZVp2UGJhNGZWdTFpMXN4T1dCOXBONFBRdnZUQkJoeWtWS282clVRYThvNUtWSWVHU1JtVlI2NDF4UjF5WVdCTwpMc0N6TEhzejNMVUliNDBaM0pqUms4Vjg5VWlvbloxeHJSM0JZQWlWN1p2SlkyQmU0bS9kUnBDcDJKa2oyMkwxCmt4WU0vTUh3UWV1ZnFZN2lsYVhhTmJQenZmR2ZscjhocnVDcW9DOTZUK0RpcWRFWkNjYjNBbktjdFZvcmVjdFcKbEJXSXc5aUhNdDU1NGF4OVoxOW9Zd3BzU3dPb0JPYjFPU0dNS1p3U3FMNFlua1EwOFpod3pOOVFDd25oVm1YagppTHBqclNHRHFuNjB0cjgyaTk4MUszSVlnUS9WK0orakFnTUJBQUdqZFRCek1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU0MKTnFSRHY5VVJkb051eG1CZVp3Yk9wMGNrL2pBZkJnTlZIU01FR0RBV2dCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0LwpQZVZSaERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVpTQWMrZzZOTWFDWVdwYlltd1JrZWt6eVk4emREWHJnCkREVGxCcEZpbmVUOHgxLzdwdU1yaUphODQyQ2NHei9vdkh1cEN4aHB6cndsS2VTNDZ6azFsM3ozQXBpTDlCT1YKbFlUSXpSUld2OWZRZnZ1OTdmczducVJlN29MWUxiLzh0cmN1WEdrRE9nZ1ZoTy9OVUF5bmJoL1IyeUNGSGw3YgpmMW5nY1B2S3JzajRlbHdCclJnUUZQNnltMWN2R0Rnd3k2a1lOUzVZMnA1M0E1SGFBRXBDdVVXejhoRFFMVXNKCjBqTzl3eU0zOG5TVjhmeUpyc0x4Qmp3dGZpQVN0M2tYdVNERUlYWWllcWRrcW5QaFNBaXJ0SHBqL3V4Z0FhM0QKZWhUa0YxcDRVK0dUd1lFR2lId3BlekEvSENabUc3RGVxdXZ2SmdJNHlMV3QySmpneEZWT2xRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.MCSCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lJWUhxcWNxT3MrV0V3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTjFvd0hURWJNQmtHQTFVRUF4TVNaVzUyTVMxaGNHa3VjbUZtWm1FdWVIbDZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4RTlYdGZXNE5RT2xLZ05wYVVOZmFIZXIKMU5NZGNIZXlOSEt3akdoUUliMlhpcFQySnViNEtvYzNuNUZpRENNd1MxbFJoZHpyKzExVHRWNzk0dkpIWmZwdApmakgreFdGNWhGVVE1WXdabmlweXhkdW1ZNG83eXMxVlVmZUZienliaUxqQ0lQKzRGUmJDZDM2RmpaNVhrSDRpCmxkM0ZJUjJtTzI4NVhxR3VhZXhLNzhNYlR1c0sraHBBT0dMYWI5N3M4ZHFxOEhTK09TSWcrWm5zQzZRd2h0aHIKa3g3ckJtaGJrSmxOUGh3MnpCVXJjR1JQK2w5dEk4aXplVW5ieUU5NS9SUXZLVlBzWHNVN05RalN1WDhPSXNlYwpYa21qWGRnUkxrdGp2eDgwRncydFkydVZFaGd4MG1MZWJYeFArUitxWGdMOWJXODZGNnp6UUpsazdHSXByUUlECkFRQUJvNEdGTUlHQ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWUQKVlIwT0JCWUVGSE5UZVBVQ3ZDQ3J0SktqSitZRDIzODk1VkdFTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcgp0SktqSitZRDIzODk1VkdFTUIwR0ExVWRFUVFXTUJTQ0VtVnVkakV0WVhCcExuSmhabVpoTG5oNWVqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBam5ydTdxSXJtTHlMZzl6TTJMT21jOUJEMEJJZzVsSjYzenJZanUrNERCQ3gKK1dJM3ZsWHdMS2htYzk1eDFVbW8zd3ZhdEJCeDRMcFBhem1mU0ljY0FiZ0NTNkdybkhpZ1Ruc1U4NjhPNExuMworYU43TXMxTXl1eGtlSFF3c3F3S1h2dnVWenk0ZXpST2NZeGFHb1F4bDE2dCtYYlk5Z05NNkhxbFBPZ1FzOFhlCnprR0huNEZtcVlsYTdocllCT2xLakM3d2Vna2RzRmRQKzFlM2dVaUpaVnNTSGhFUmhicEUvaHRSMkJXaklIQlkKMjUyNFo0SHNrbW14aHBnY1pwZUhVQ2QwM0ZHN1JmRWxGZDBUVGVBVERIaVhlMnNKai91WTc2eFVjNkNuK2FkQQorMXZ5bS93WHpUQUhDQ2xWVEVYTzVWZjltUFk2RXlBM1F0ckZjTXhiMnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEU5WHRmVzROUU9sS2dOcGFVTmZhSGVyMU5NZGNIZXlOSEt3akdoUUliMlhpcFQyCkp1YjRLb2MzbjVGaURDTXdTMWxSaGR6cisxMVR0Vjc5NHZKSFpmcHRmakgreFdGNWhGVVE1WXdabmlweXhkdW0KWTRvN3lzMVZVZmVGYnp5YmlMakNJUCs0RlJiQ2QzNkZqWjVYa0g0aWxkM0ZJUjJtTzI4NVhxR3VhZXhLNzhNYgpUdXNLK2hwQU9HTGFiOTdzOGRxcThIUytPU0lnK1puc0M2UXdodGhya3g3ckJtaGJrSmxOUGh3MnpCVXJjR1JQCitsOXRJOGl6ZVVuYnlFOTUvUlF2S1ZQc1hzVTdOUWpTdVg4T0lzZWNYa21qWGRnUkxrdGp2eDgwRncydFkydVYKRWhneDBtTGViWHhQK1IrcVhnTDliVzg2RjZ6elFKbGs3R0lwclFJREFRQUJBb0lCQVFDcnZwNkYyc3VsMWVLUgp0eHBwdFQrckxjZHZFcVFXMlNGWE1WK3o5eTdqMWZMV2t5d25MTHJBdWp1M3BvR1pETkFibTdEdTVEQ3dZUjN5Cjk0QTNKSy9DVUMycTBpS0tuSlNyYWFDMnNyTlc1TncwcmM0TUY4dm55V3h6b1pGam1DcWFtc2w4QlQwUGRqSDgKU1B5ZXdZRHFNUEFoSFR4eGxIYnlXSVJnZmlNUkZ0V3BTcVJkSFdFRHZzNkJJUUZzd3RMR1dZalpnZGFPTGErbgpEZFlVKytJdVYwNndwTGRSZG5uV1VvTVE5VkpyZmdQakVCcEpVaFEyVEtMM2xVcUJMSTRZNjQvUDlHMzA4YzR1Cm9Ic3NkSW1RYnZRM0VMcmhPOTBISlpWV3JUTmFnRjVqNk1tNHlhN3dBTHFCUWgyUXZLdml5OU9CeENnS01PNlQKSkUwWnFENEJBb0dCQU1Wa1pBV0cvR1FtMTh4MXpFNGxuVTZqV0w2NFAxSm00NWhhR0Nibm80R1BScjRieGtLSAppc25uL2ZEOXQ5WldMZkU0SGFSdUpoaVRkOUJSVzV0d2VmREs4Y3N1UGhSZmlCOElvZnR4UFBjNHBhQUMxWmxTClB1b3JJck1hOWZZM0gvKzBOWkpoWDlhODExY1NFa3BrWGJ5TXU5VzJqSkI5eEozdGM3anhmaFB4QW9HQkFQNlkKc1gvNXQ1UzE1aTNrdk9ZcmNvVW5zbmdDM2lpaUhJbmpSdzkxdURaNTNjWGMyR1AxV3kzTlJXbmhlL2plL01UWApiRjJqUGs1ckY3c1lpTlhEZndid1hpVkhITnFpVlg0SzFPSk1KeUZicnBkK3I2VmhMKzVpUklmd0granZoV2p4CkFuRkZKM3JMbTQ0MDBSTy90OE9aaFg0cWNGRXE3R2JoWjNjeU1qMTlBb0dBTWk1OGN4OUhDTnNMSDVLTzl3cisKKzkveERzTmViYjkwZXVYa24vZGhqTzEweVozY0FFdmZEOGRudXAxMTRBcVdzVzFYczliQTNweVc2Q0hXelNTQwpDNkk4YURBQVhrT1BJbnlhV1ljSFBiNXI5TXJqckkvSktOVUFoRklGVjZ2WitiTEJyODRMaEZjTDA3bm5abnd2CmpHQ20zQVVGcFRJa0N4WXp4aisya3JFQ2dZQVFjYnBkUXJyWnp4bnI4dTlFaXAvZCs5OXFJdjFJY0pnWlMrWEcKR050cUlWcnlzYjRFVHMreDJLVllIbWxNZk5La3dDbE9yd0dTUFJhT1RocGdmRDBUTEtsWURRelBEbGNwU2ZmUQpHZzBZK1h3QWF2MWJXRGlwVkEyTEhqWmhiRDhZdFNCc1FvUTNTVGxsNlFGc0hpRDNjRTRRQlJ1MkVtaXNpSGlQCldWMm5YUUtCZ0dlTnJHL0t4TFY4eHRKOTRqMUVGaUJzQ0NhT20xUjBOVVhRUDlBUlh3VTErdlFncVFJUXJyQW4KR0l5MmRuTUdkWWlzWFZNTzZVcWxxWEpBa0FJZ3hqMjhHNnlPaU1sZVpnRnhTTk45eXJpUnFXUHAzRVdseUY3UwpvbzBvSDFhcUZsekF1OHFUdDNhV3kyMHRxeXlTa2J0eEU5U3VsTi9TWFJUK1hqZVh2UEc2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/machine-config-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEU5WHRmVzROUU9sS2dOcGFVTmZhSGVyMU5NZGNIZXlOSEt3akdoUUliMlhpcFQyCkp1YjRLb2MzbjVGaURDTXdTMWxSaGR6cisxMVR0Vjc5NHZKSFpmcHRmakgreFdGNWhGVVE1WXdabmlweXhkdW0KWTRvN3lzMVZVZmVGYnp5YmlMakNJUCs0RlJiQ2QzNkZqWjVYa0g0aWxkM0ZJUjJtTzI4NVhxR3VhZXhLNzhNYgpUdXNLK2hwQU9HTGFiOTdzOGRxcThIUytPU0lnK1puc0M2UXdodGhya3g3ckJtaGJrSmxOUGh3MnpCVXJjR1JQCitsOXRJOGl6ZVVuYnlFOTUvUlF2S1ZQc1hzVTdOUWpTdVg4T0lzZWNYa21qWGRnUkxrdGp2eDgwRncydFkydVYKRWhneDBtTGViWHhQK1IrcVhnTDliVzg2RjZ6elFKbGs3R0lwclFJREFRQUJBb0lCQVFDcnZwNkYyc3VsMWVLUgp0eHBwdFQrckxjZHZFcVFXMlNGWE1WK3o5eTdqMWZMV2t5d25MTHJBdWp1M3BvR1pETkFibTdEdTVEQ3dZUjN5Cjk0QTNKSy9DVUMycTBpS0tuSlNyYWFDMnNyTlc1TncwcmM0TUY4dm55V3h6b1pGam1DcWFtc2w4QlQwUGRqSDgKU1B5ZXdZRHFNUEFoSFR4eGxIYnlXSVJnZmlNUkZ0V3BTcVJkSFdFRHZzNkJJUUZzd3RMR1dZalpnZGFPTGErbgpEZFlVKytJdVYwNndwTGRSZG5uV1VvTVE5VkpyZmdQakVCcEpVaFEyVEtMM2xVcUJMSTRZNjQvUDlHMzA4YzR1Cm9Ic3NkSW1RYnZRM0VMcmhPOTBISlpWV3JUTmFnRjVqNk1tNHlhN3dBTHFCUWgyUXZLdml5OU9CeENnS01PNlQKSkUwWnFENEJBb0dCQU1Wa1pBV0cvR1FtMTh4MXpFNGxuVTZqV0w2NFAxSm00NWhhR0Nibm80R1BScjRieGtLSAppc25uL2ZEOXQ5WldMZkU0SGFSdUpoaVRkOUJSVzV0d2VmREs4Y3N1UGhSZmlCOElvZnR4UFBjNHBhQUMxWmxTClB1b3JJck1hOWZZM0gvKzBOWkpoWDlhODExY1NFa3BrWGJ5TXU5VzJqSkI5eEozdGM3anhmaFB4QW9HQkFQNlkKc1gvNXQ1UzE1aTNrdk9ZcmNvVW5zbmdDM2lpaUhJbmpSdzkxdURaNTNjWGMyR1AxV3kzTlJXbmhlL2plL01UWApiRjJqUGs1ckY3c1lpTlhEZndid1hpVkhITnFpVlg0SzFPSk1KeUZicnBkK3I2VmhMKzVpUklmd0granZoV2p4CkFuRkZKM3JMbTQ0MDBSTy90OE9aaFg0cWNGRXE3R2JoWjNjeU1qMTlBb0dBTWk1OGN4OUhDTnNMSDVLTzl3cisKKzkveERzTmViYjkwZXVYa24vZGhqTzEweVozY0FFdmZEOGRudXAxMTRBcVdzVzFYczliQTNweVc2Q0hXelNTQwpDNkk4YURBQVhrT1BJbnlhV1ljSFBiNXI5TXJqckkvSktOVUFoRklGVjZ2WitiTEJyODRMaEZjTDA3bm5abnd2CmpHQ20zQVVGcFRJa0N4WXp4aisya3JFQ2dZQVFjYnBkUXJyWnp4bnI4dTlFaXAvZCs5OXFJdjFJY0pnWlMrWEcKR050cUlWcnlzYjRFVHMreDJLVllIbWxNZk5La3dDbE9yd0dTUFJhT1RocGdmRDBUTEtsWURRelBEbGNwU2ZmUQpHZzBZK1h3QWF2MWJXRGlwVkEyTEhqWmhiRDhZdFNCc1FvUTNTVGxsNlFGc0hpRDNjRTRRQlJ1MkVtaXNpSGlQCldWMm5YUUtCZ0dlTnJHL0t4TFY4eHRKOTRqMUVGaUJzQ0NhT20xUjBOVVhRUDlBUlh3VTErdlFncVFJUXJyQW4KR0l5MmRuTUdkWWlzWFZNTzZVcWxxWEpBa0FJZ3hqMjhHNnlPaU1sZVpnRnhTTk45eXJpUnFXUHAzRVdseUY3UwpvbzBvSDFhcUZsekF1OHFUdDNhV3kyMHRxeXlTa2J0eEU5U3VsTi9TWFJUK1hqZVh2UEc2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/machine-config-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lJWUhxcWNxT3MrV0V3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTjFvd0hURWJNQmtHQTFVRUF4TVNaVzUyTVMxaGNHa3VjbUZtWm1FdWVIbDZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4RTlYdGZXNE5RT2xLZ05wYVVOZmFIZXIKMU5NZGNIZXlOSEt3akdoUUliMlhpcFQySnViNEtvYzNuNUZpRENNd1MxbFJoZHpyKzExVHRWNzk0dkpIWmZwdApmakgreFdGNWhGVVE1WXdabmlweXhkdW1ZNG83eXMxVlVmZUZienliaUxqQ0lQKzRGUmJDZDM2RmpaNVhrSDRpCmxkM0ZJUjJtTzI4NVhxR3VhZXhLNzhNYlR1c0sraHBBT0dMYWI5N3M4ZHFxOEhTK09TSWcrWm5zQzZRd2h0aHIKa3g3ckJtaGJrSmxOUGh3MnpCVXJjR1JQK2w5dEk4aXplVW5ieUU5NS9SUXZLVlBzWHNVN05RalN1WDhPSXNlYwpYa21qWGRnUkxrdGp2eDgwRncydFkydVZFaGd4MG1MZWJYeFArUitxWGdMOWJXODZGNnp6UUpsazdHSXByUUlECkFRQUJvNEdGTUlHQ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWUQKVlIwT0JCWUVGSE5UZVBVQ3ZDQ3J0SktqSitZRDIzODk1VkdFTUI4R0ExVWRJd1FZTUJhQUZITlRlUFVDdkNDcgp0SktqSitZRDIzODk1VkdFTUIwR0ExVWRFUVFXTUJTQ0VtVnVkakV0WVhCcExuSmhabVpoTG5oNWVqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBam5ydTdxSXJtTHlMZzl6TTJMT21jOUJEMEJJZzVsSjYzenJZanUrNERCQ3gKK1dJM3ZsWHdMS2htYzk1eDFVbW8zd3ZhdEJCeDRMcFBhem1mU0ljY0FiZ0NTNkdybkhpZ1Ruc1U4NjhPNExuMworYU43TXMxTXl1eGtlSFF3c3F3S1h2dnVWenk0ZXpST2NZeGFHb1F4bDE2dCtYYlk5Z05NNkhxbFBPZ1FzOFhlCnprR0huNEZtcVlsYTdocllCT2xLakM3d2Vna2RzRmRQKzFlM2dVaUpaVnNTSGhFUmhicEUvaHRSMkJXaklIQlkKMjUyNFo0SHNrbW14aHBnY1pwZUhVQ2QwM0ZHN1JmRWxGZDBUVGVBVERIaVhlMnNKai91WTc2eFVjNkNuK2FkQQorMXZ5bS93WHpUQUhDQ2xWVEVYTzVWZjltUFk2RXlBM1F0ckZjTXhiMnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.RootCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1qSTRNVGswTlRRMFdoY05Namd4TWpJMQpNVGswTlRRMFdqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKNGJuaEZ3ZWZFblZUOG5IbWhUWWhrQU1TNVU5Nis4ZUF0V2cwYm1TaU80OVpmZWxVMXJjdzc1dXY3RFkvNiszcAovSjFoRVZZeXYyd0pNYUR2TjdPUHVQejNzSlArQ2YwSm9ZNjNzQXY1NlB6SXRGT3RiemtON1RqTzU1ckZGNGlYCm9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KWWp2dWt4NmZZNmJhQXhDS3BudjRKbVF4RDBIZnhkcmU0dWs2MXo0d1pNWkc0THVjdDJMNml1WGRWVDZBRm50UApvUVpiZGhSOUU4QnBDRGFxdHl1ZGhodjhad2NJVUhFeXgxY0xDMi9hNEErNlJBbS9McS9yckJjMENjbjBFM01oCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3pBbwp6RHl1aWdHTDZ4SCtGbi9ZS1FTc3pJd1paREJ6ajZkbXlyTlJPU1g5Ujl6bDRYTmFSb3ZPdjNkL291aVBUL1dSCng0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKZTFMbFk3Y1RJQXo1YVEvWGM0dktGbGpVM0hJVmYwVFAyOE85MlhmVmRleFI2c214d2lOYVd1RlE5MENTT09HVgpOSXVpZmFQUHFpaXlyOFdqaExoNTlXZnk0WEZ3R2J5Y3lxOVcwZjRyRUJSdFQrMTdsTEE2bnlpVk1jUUtZaGIxCk5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KZmJGNDFOWllQVkxpVFpjdVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcHNXSXorVVdkQUlvNnY4Mkw3SThWZUc1NFJjSG54SjFVL0p4NW9VMklaQURFdVZQCmV2dkhnTFZvTkc1a29qdVBXWDNwVk5hM01PK2JyK3cyUCt2dDZmeWRZUkZXTXI5c0NUR2c3emV6ajdqODk3Q1QKL2duOUNhR090N0FMK2VqOHlMUlRyVzg1RGUwNHp1ZWF4UmVJbDZIU0x0VHpPcmRuM1RJL0hsUzdjRnZCRG1iWApRdVdaN09YaEVsYThKeTNpZm1TTEVualYreUE2N1dvRTVqZVJ2Mkk3N3BNZW4yT20yZ01RaXFaNytDWmtNUTlCCjM4WGEzdUxwT3RjK01HVEdSdUM3bkxkaStvcmwzVlUrZ0JaN1Q2RUdXM1lVZlJQQWFRZzJxcmNybllZYi9HY0gKQ0ZCeE1zZFhDd3R2MnVBUHVrUUp2eTZ2NjZ3WE5Bbko5Qk56SVFJREFRQUJBb0lCQUhCT3VsRjJidVoweGVWcgpOS3h1RlIrb3dTcUovY0hzQmtNZ0ZBQXZXVUxFM3EwTTY3ZGdjdnVFTHNhUVNRalBuenVmQlZEeXY2OGV6UE50CjJTSzIyU01uMFR3YkZyZGFIWUViZ010WDhYNHFENEVsMHFQVFNpb0FPRUlQTmlGMyt6T1Y3SHZ4V0xTK09mRnMKR3RmN2Z5ck4rT004MlFlRGwxaG9qQVQ2L3Jjc25EUHRHN0pvRVZXR2FWR0NKamhOT3RkZGhDVVlrSjU3U2traApwdnl4eUYvS05CRTBPaStTemNQNTZBV2RxWi9SSHJ6ZEh0TFN5dGh6ZER3QTNTRVB2NVZRK1lFVUdWVkRYMTBNCkM5Sm9scnlrcHlsNHNoOXhUOUw2K1BaTVdVczlFenVhQVdERzNJb0U5Z2IxZnNmK1NjTlNHaE1xREg0Qy80Y0IKUUFxMHR5RUNnWUVBd1lnRDJFNnRESXBzUUtBLzZwbFpHNnNPcGxRTzZ3MlU5WmtzQzZtUFQwNnNCOXdRMmxNaAo5LzB2cVp5T3htck5RVnptREVwZlA4OGhuRFkzQWZ4Y1pneFBLUGlRekd0cWNqS2RNem9DTE90SnMwSkl5dE4zCk4vS3JWblIrZU1QQ1BkRmwyTHJsN1VsTWkzWGUva294OVpBYVhHelN4VDE1MzVkNHRxdnFMalVDZ1lFQTNKcE0KVG5Wc1NHVkxyb2VmclhMeGNxSWxJeUZ2b0lZL3UyYmxtNXBkcnBCN3pmeVV5UnVQc1RhTTBrYjFWdmpRMndIQQovTWtIRXJnUHBuY1dRZXhKYmtWK1cxUENCREZMSTlaMVQxS2hGdmQ0RFdBYlFDQXRZMGVEWVVjTUJvSVNIVFErClV3RG41emt1Z2E5QmFIOEJhUitrTmUyYWRicm0rY0Urb2Q3VXZyMENnWUJVejNaZjVKcVJWRmY4T2ozSVlVdGIKaEtyMjJQOXdvcE1VemZzdllTOGNZaTJoaEI4ZWppL2tyVitseEtZTTdlRGxOQURjZ2ZzYnkzbS9LME1QNjdmUwpRTEt3RWIzaTEyL2VlNi9JTXpPZzI3dUFneHZEUnNpSURDQnAwc05aeU8vbWgwMUtuUjBGejRscjFFdlV4RThBCmZoWVBTdUZTN28zcUhrY1lSbDVwd1FLQmdEYmFoeTdiTTltc2xtMEhmRVQ4MTl6UlJMcS9qYW8wdDVRNXVjNC8KVEJ3a0FTVHZNVy93VW9LV05kM3psdjNSVU4ya1NnQ1JYQmpqZThEQXkrQUlpUm5LWGVrSG9xNjRNeDd1TEsxVQp0b21uYjBxa0l5S0czY0paL2VrcWFXc1UzTHcyU1drS1NKL09NQ28vRWR5UitCL1RwbGxpZzQzU3M2eFd5T1FuCkxHOWhBb0dBZlp2UUJIQnd2QlVnTHdidkpqQnpST1MwYlBjMzF2c0dkMkNvbGZ3Nml5bjE4NmY5VGdmUmNCN1QKY2dtdEJwRHplYmlmNEhuekc5dTNqZXNVNzZTOXJUbmtmV0pzbW02ME1xUG11bHNxY1grMlJXbWoybktSYW0rZwpDSlY3Vm5PZ1VFMmlLTHh1SDFqOGJibDhFOTVHNDVWSzkxdnZ1a29wVTY0ZWl5Q20xQ0k9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/root-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcHNXSXorVVdkQUlvNnY4Mkw3SThWZUc1NFJjSG54SjFVL0p4NW9VMklaQURFdVZQCmV2dkhnTFZvTkc1a29qdVBXWDNwVk5hM01PK2JyK3cyUCt2dDZmeWRZUkZXTXI5c0NUR2c3emV6ajdqODk3Q1QKL2duOUNhR090N0FMK2VqOHlMUlRyVzg1RGUwNHp1ZWF4UmVJbDZIU0x0VHpPcmRuM1RJL0hsUzdjRnZCRG1iWApRdVdaN09YaEVsYThKeTNpZm1TTEVualYreUE2N1dvRTVqZVJ2Mkk3N3BNZW4yT20yZ01RaXFaNytDWmtNUTlCCjM4WGEzdUxwT3RjK01HVEdSdUM3bkxkaStvcmwzVlUrZ0JaN1Q2RUdXM1lVZlJQQWFRZzJxcmNybllZYi9HY0gKQ0ZCeE1zZFhDd3R2MnVBUHVrUUp2eTZ2NjZ3WE5Bbko5Qk56SVFJREFRQUJBb0lCQUhCT3VsRjJidVoweGVWcgpOS3h1RlIrb3dTcUovY0hzQmtNZ0ZBQXZXVUxFM3EwTTY3ZGdjdnVFTHNhUVNRalBuenVmQlZEeXY2OGV6UE50CjJTSzIyU01uMFR3YkZyZGFIWUViZ010WDhYNHFENEVsMHFQVFNpb0FPRUlQTmlGMyt6T1Y3SHZ4V0xTK09mRnMKR3RmN2Z5ck4rT004MlFlRGwxaG9qQVQ2L3Jjc25EUHRHN0pvRVZXR2FWR0NKamhOT3RkZGhDVVlrSjU3U2traApwdnl4eUYvS05CRTBPaStTemNQNTZBV2RxWi9SSHJ6ZEh0TFN5dGh6ZER3QTNTRVB2NVZRK1lFVUdWVkRYMTBNCkM5Sm9scnlrcHlsNHNoOXhUOUw2K1BaTVdVczlFenVhQVdERzNJb0U5Z2IxZnNmK1NjTlNHaE1xREg0Qy80Y0IKUUFxMHR5RUNnWUVBd1lnRDJFNnRESXBzUUtBLzZwbFpHNnNPcGxRTzZ3MlU5WmtzQzZtUFQwNnNCOXdRMmxNaAo5LzB2cVp5T3htck5RVnptREVwZlA4OGhuRFkzQWZ4Y1pneFBLUGlRekd0cWNqS2RNem9DTE90SnMwSkl5dE4zCk4vS3JWblIrZU1QQ1BkRmwyTHJsN1VsTWkzWGUva294OVpBYVhHelN4VDE1MzVkNHRxdnFMalVDZ1lFQTNKcE0KVG5Wc1NHVkxyb2VmclhMeGNxSWxJeUZ2b0lZL3UyYmxtNXBkcnBCN3pmeVV5UnVQc1RhTTBrYjFWdmpRMndIQQovTWtIRXJnUHBuY1dRZXhKYmtWK1cxUENCREZMSTlaMVQxS2hGdmQ0RFdBYlFDQXRZMGVEWVVjTUJvSVNIVFErClV3RG41emt1Z2E5QmFIOEJhUitrTmUyYWRicm0rY0Urb2Q3VXZyMENnWUJVejNaZjVKcVJWRmY4T2ozSVlVdGIKaEtyMjJQOXdvcE1VemZzdllTOGNZaTJoaEI4ZWppL2tyVitseEtZTTdlRGxOQURjZ2ZzYnkzbS9LME1QNjdmUwpRTEt3RWIzaTEyL2VlNi9JTXpPZzI3dUFneHZEUnNpSURDQnAwc05aeU8vbWgwMUtuUjBGejRscjFFdlV4RThBCmZoWVBTdUZTN28zcUhrY1lSbDVwd1FLQmdEYmFoeTdiTTltc2xtMEhmRVQ4MTl6UlJMcS9qYW8wdDVRNXVjNC8KVEJ3a0FTVHZNVy93VW9LV05kM3psdjNSVU4ya1NnQ1JYQmpqZThEQXkrQUlpUm5LWGVrSG9xNjRNeDd1TEsxVQp0b21uYjBxa0l5S0czY0paL2VrcWFXc1UzTHcyU1drS1NKL09NQ28vRWR5UitCL1RwbGxpZzQzU3M2eFd5T1FuCkxHOWhBb0dBZlp2UUJIQnd2QlVnTHdidkpqQnpST1MwYlBjMzF2c0dkMkNvbGZ3Nml5bjE4NmY5VGdmUmNCN1QKY2dtdEJwRHplYmlmNEhuekc5dTNqZXNVNzZTOXJUbmtmV0pzbW02ME1xUG11bHNxY1grMlJXbWoybktSYW0rZwpDSlY3Vm5PZ1VFMmlLTHh1SDFqOGJibDhFOTVHNDVWSzkxdnZ1a29wVTY0ZWl5Q20xQ0k9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/root-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1qSTRNVGswTlRRMFdoY05Namd4TWpJMQpNVGswTlRRMFdqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNteFlqUDVSWjBBaWpxL3pZdnNqeFYKNGJuaEZ3ZWZFblZUOG5IbWhUWWhrQU1TNVU5Nis4ZUF0V2cwYm1TaU80OVpmZWxVMXJjdzc1dXY3RFkvNiszcAovSjFoRVZZeXYyd0pNYUR2TjdPUHVQejNzSlArQ2YwSm9ZNjNzQXY1NlB6SXRGT3RiemtON1RqTzU1ckZGNGlYCm9kSXUxUE02dDJmZE1qOGVWTHR3VzhFT1p0ZEM1Wm5zNWVFU1Zyd25MZUorWklzU2VOWDdJRHJ0YWdUbU41Ry8KWWp2dWt4NmZZNmJhQXhDS3BudjRKbVF4RDBIZnhkcmU0dWs2MXo0d1pNWkc0THVjdDJMNml1WGRWVDZBRm50UApvUVpiZGhSOUU4QnBDRGFxdHl1ZGhodjhad2NJVUhFeXgxY0xDMi9hNEErNlJBbS9McS9yckJjMENjbjBFM01oCkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUnpVM2oxQXJ3Z3E3U1NveWZtQTl0L1BlVlJoREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3pBbwp6RHl1aWdHTDZ4SCtGbi9ZS1FTc3pJd1paREJ6ajZkbXlyTlJPU1g5Ujl6bDRYTmFSb3ZPdjNkL291aVBUL1dSCng0cWFSc1JPWDZYWlZoVlZPUjZUVHVtU3VjYU5VRzZoMDdnREtoTk16azA2dktFNGxlZWgycjRucVN3MkJkNDcKZTFMbFk3Y1RJQXo1YVEvWGM0dktGbGpVM0hJVmYwVFAyOE85MlhmVmRleFI2c214d2lOYVd1RlE5MENTT09HVgpOSXVpZmFQUHFpaXlyOFdqaExoNTlXZnk0WEZ3R2J5Y3lxOVcwZjRyRUJSdFQrMTdsTEE2bnlpVk1jUUtZaGIxCk5DVEtmMjFWSjlLZmwvdW0yVW1BcWgwNUxKNkpwbWxyT0s1djJVTmFiZTZ4cnR2OFBxdjhiYS9mQUVxUERuVE4KZmJGNDFOWllQVkxpVFpjdVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.ServiceAccountKeyPair": {
        "Pvt": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeC9NWDVIMm5sSUZYVlI1U0FwaHgzaDFQTzk3Rm5ScnNRY2dKR2VwcEYzMDBtVXMxCjROOEdTL0drVkxuOXNzZUREbkhkNGlvb0lZalZnTVBDbFR1K0puck1XSTR2czgxdWpuQzdydTI0TG9Rcy9SS1MKQnF3WldGcDVOeXQzdUtxOG91SmFyaTlSejB3UFRxLzYzQkNqTG9SRXVidE05S2NlQ21maUVsc2YvTUJ1R3pYUgpKeVdPNlZnbTJJcmZWcjJWY1A1TXJOZDdVc3FSeXRueEc2OVFiOFA0MUZ4R1RUMFJnWXMwT1NoN1p3SDRRZEJICitFcmFZODQ2b2oxekVyTUtxUTJoa2NhMm5HYlNQTUhROXplazVCTTRYMldHOGIvRWY5OHlyK0pvVDFyMmYwZEsKdDhvSHdRT1M4RngxNGo3Y092WHBjUFgyYUFrYzlEVUxadjRJMHdJREFRQUJBb0lCQVFDc1I5VEtWMHBSTnJDYwo4cWNPL1hML1FwbkdxRWYwK2dHZkhGQmJPQktjM3BDM2xJb3oyM1o5Y1JONnZWYk8rQUVBTFRSVmJxVnRYNDAyCmlYWGJSOEtyUFJ0ZElnWVFFbTJ6NVlhUlR0cG5taE41YXNyUFhQSHBvdXJXa21seGdBdFEvVi9NdlpEcjRFbEEKTDNraXJHTXQ3V0daOXJ4MEFKcHR0TnlobkVxUFoyYk5jYmgrb2NVM1pFS09halJabVZxVGdqR0g3T2dKSmNOcgpJYmhvMk1rb0V6bmRxR0g1RG8xTysyTlI2Q1BlWjhkRUI4YkFmakhLZnpSYjhkbzVQeXZOU3JOZ3dPdXVuYXVZCm1CTnl1ZS9HWHhWaFMwNkxqVm83QWRUWng1cUFQenZBcUh5aXFsY2ZjN1NHbzVhUThoMHo2bUpTS2VWakdTdXIKeWd0L2dCN0JBb0dCQVBqeHJnYXZOb0dlT05aa29EZUhBNjZyb1BBVWFKL2NVZTBtcFQvd2l4djBKT2hya3QwQwpsQXBLbUVwT01ISFFzRnRsOGgrdkxRTVd3VUdWREJKelMwZzVXeUt5bk91cjNIVmdvTWpicU11UGZFdnhVa2VhCjc1ZGhTNWFYak96Ylc3QXNIVTlkUDQ1U2NCcjRzWnZwK1E2TVRpV0loVkxFejluNjQ1eXlERE9aQW9HQkFNMmQKNmNMUWRGdGJFdDJLNkVSMGlqVXlnci9vR245UVU3T0dpSDM3ZGhiK0t0NmxLZEJ1cDNuZXVSZHlaYlJ2aksrdQoyRkxkQ0Z3Y3lvalNzejZXeEdKU3VjT3MyNVAreFFqc3VTaXpQbmVNczZyV1JWNzRZNWxUQ2RoYlRTT2w3a2h5CmNjQkNIbXhDSnhTd3ZvRGZ6bjB4a1ZkZlhPU2s0V09YeU9kUFpTTkxBb0dBR1RBaTRveEI0SldJdkxDTHdYS0kKdmRpaHZRamptU0Vxck9zWEYwUVlYeWl4djA1N0dwK1RLUU5wSzBPRUJWQVBPQUExb2wwUUdkcm9qT0V1eW9NZAozOTNseWJuMnhLV3I5YmhrTEU2RllxdE84VVFtaGhZNEhjSDdhdTVFbFFhUTNWOXBTOGxzajlMcGd1RWMzMkNxCkVYM0N2bXQweWU0ZDliazc1SFBqWmlrQ2dZQjU3ZTJqLzljd0lXYWpoMjdLd1V6LzFNOGlHL0l5a3lDL2NjVFkKNkZnVHRHOFpqbG1vWnlYYktBOGNiMU1PVjZQV3ZsazdjaVUxOGtETU9CM2d2S2tDSVVwVlZkanovdjA2bUo0SQpHNXFzYS94VER6TWQ2Uyt1eVVZcVRhSUZ4S3p6dXlIblA0NG81bVdrYUZiZnQxZ01kMnRYbzQ1RGE5N1lIemNjCnE4RXUxd0tCZ0NINmEzS3Y5MWVqaTlseTc0MzU1bGdGOWtGdS90eXMwN1A0VU16QmF5UHYrNXI3SHJDb05pTWIKbVZGZmpZRHhYNGFnV2thQkc3bW9oVDh5ZlNuTFhLb1RveHJvUTQ3L0tySzVZRGdGT2p2cE4rWHVhYnNCRnQ4cgpKa1piTHhZbTJLYzJJUXNOKzBhY0RNcnFVQjUvVk13YWw3VGJNZU9nUXZKQklNc1pTZEwzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "Pub": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeC9NWDVIMm5sSUZYVlI1U0FwaHgKM2gxUE85N0ZuUnJzUWNnSkdlcHBGMzAwbVVzMTROOEdTL0drVkxuOXNzZUREbkhkNGlvb0lZalZnTVBDbFR1KwpKbnJNV0k0dnM4MXVqbkM3cnUyNExvUXMvUktTQnF3WldGcDVOeXQzdUtxOG91SmFyaTlSejB3UFRxLzYzQkNqCkxvUkV1YnRNOUtjZUNtZmlFbHNmL01CdUd6WFJKeVdPNlZnbTJJcmZWcjJWY1A1TXJOZDdVc3FSeXRueEc2OVEKYjhQNDFGeEdUVDBSZ1lzME9TaDdad0g0UWRCSCtFcmFZODQ2b2oxekVyTUtxUTJoa2NhMm5HYlNQTUhROXplawo1Qk00WDJXRzhiL0VmOTh5citKb1QxcjJmMGRLdDhvSHdRT1M4RngxNGo3Y092WHBjUFgyYUFrYzlEVUxadjRJCjB3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/service-account.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeC9NWDVIMm5sSUZYVlI1U0FwaHgzaDFQTzk3Rm5ScnNRY2dKR2VwcEYzMDBtVXMxCjROOEdTL0drVkxuOXNzZUREbkhkNGlvb0lZalZnTVBDbFR1K0puck1XSTR2czgxdWpuQzdydTI0TG9Rcy9SS1MKQnF3WldGcDVOeXQzdUtxOG91SmFyaTlSejB3UFRxLzYzQkNqTG9SRXVidE05S2NlQ21maUVsc2YvTUJ1R3pYUgpKeVdPNlZnbTJJcmZWcjJWY1A1TXJOZDdVc3FSeXRueEc2OVFiOFA0MUZ4R1RUMFJnWXMwT1NoN1p3SDRRZEJICitFcmFZODQ2b2oxekVyTUtxUTJoa2NhMm5HYlNQTUhROXplazVCTTRYMldHOGIvRWY5OHlyK0pvVDFyMmYwZEsKdDhvSHdRT1M4RngxNGo3Y092WHBjUFgyYUFrYzlEVUxadjRJMHdJREFRQUJBb0lCQVFDc1I5VEtWMHBSTnJDYwo4cWNPL1hML1FwbkdxRWYwK2dHZkhGQmJPQktjM3BDM2xJb3oyM1o5Y1JONnZWYk8rQUVBTFRSVmJxVnRYNDAyCmlYWGJSOEtyUFJ0ZElnWVFFbTJ6NVlhUlR0cG5taE41YXNyUFhQSHBvdXJXa21seGdBdFEvVi9NdlpEcjRFbEEKTDNraXJHTXQ3V0daOXJ4MEFKcHR0TnlobkVxUFoyYk5jYmgrb2NVM1pFS09halJabVZxVGdqR0g3T2dKSmNOcgpJYmhvMk1rb0V6bmRxR0g1RG8xTysyTlI2Q1BlWjhkRUI4YkFmakhLZnpSYjhkbzVQeXZOU3JOZ3dPdXVuYXVZCm1CTnl1ZS9HWHhWaFMwNkxqVm83QWRUWng1cUFQenZBcUh5aXFsY2ZjN1NHbzVhUThoMHo2bUpTS2VWakdTdXIKeWd0L2dCN0JBb0dCQVBqeHJnYXZOb0dlT05aa29EZUhBNjZyb1BBVWFKL2NVZTBtcFQvd2l4djBKT2hya3QwQwpsQXBLbUVwT01ISFFzRnRsOGgrdkxRTVd3VUdWREJKelMwZzVXeUt5bk91cjNIVmdvTWpicU11UGZFdnhVa2VhCjc1ZGhTNWFYak96Ylc3QXNIVTlkUDQ1U2NCcjRzWnZwK1E2TVRpV0loVkxFejluNjQ1eXlERE9aQW9HQkFNMmQKNmNMUWRGdGJFdDJLNkVSMGlqVXlnci9vR245UVU3T0dpSDM3ZGhiK0t0NmxLZEJ1cDNuZXVSZHlaYlJ2aksrdQoyRkxkQ0Z3Y3lvalNzejZXeEdKU3VjT3MyNVAreFFqc3VTaXpQbmVNczZyV1JWNzRZNWxUQ2RoYlRTT2w3a2h5CmNjQkNIbXhDSnhTd3ZvRGZ6bjB4a1ZkZlhPU2s0V09YeU9kUFpTTkxBb0dBR1RBaTRveEI0SldJdkxDTHdYS0kKdmRpaHZRamptU0Vxck9zWEYwUVlYeWl4djA1N0dwK1RLUU5wSzBPRUJWQVBPQUExb2wwUUdkcm9qT0V1eW9NZAozOTNseWJuMnhLV3I5YmhrTEU2RllxdE84VVFtaGhZNEhjSDdhdTVFbFFhUTNWOXBTOGxzajlMcGd1RWMzMkNxCkVYM0N2bXQweWU0ZDliazc1SFBqWmlrQ2dZQjU3ZTJqLzljd0lXYWpoMjdLd1V6LzFNOGlHL0l5a3lDL2NjVFkKNkZnVHRHOFpqbG1vWnlYYktBOGNiMU1PVjZQV3ZsazdjaVUxOGtETU9CM2d2S2tDSVVwVlZkanovdjA2bUo0SQpHNXFzYS94VER6TWQ2Uyt1eVVZcVRhSUZ4S3p6dXlIblA0NG81bVdrYUZiZnQxZ01kMnRYbzQ1RGE5N1lIemNjCnE4RXUxd0tCZ0NINmEzS3Y5MWVqaTlseTc0MzU1bGdGOWtGdS90eXMwN1A0VU16QmF5UHYrNXI3SHJDb05pTWIKbVZGZmpZRHhYNGFnV2thQkc3bW9oVDh5ZlNuTFhLb1RveHJvUTQ3L0tySzVZRGdGT2p2cE4rWHVhYnNCRnQ4cgpKa1piTHhZbTJLYzJJUXNOKzBhY0RNcnFVQjUvVk13YWw3VGJNZU9nUXZKQklNc1pTZEwzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/service-account.pub",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeC9NWDVIMm5sSUZYVlI1U0FwaHgKM2gxUE85N0ZuUnJzUWNnSkdlcHBGMzAwbVVzMTROOEdTL0drVkxuOXNzZUREbkhkNGlvb0lZalZnTVBDbFR1KwpKbnJNV0k0dnM4MXVqbkM3cnUyNExvUXMvUktTQnF3WldGcDVOeXQzdUtxOG91SmFyaTlSejB3UFRxLzYzQkNqCkxvUkV1YnRNOUtjZUNtZmlFbHNmL01CdUd6WFJKeVdPNlZnbTJJcmZWcjJWY1A1TXJOZDdVc3FSeXRueEc2OVEKYjhQNDFGeEdUVDBSZ1lzME9TaDdad0g0UWRCSCtFcmFZODQ2b2oxekVyTUtxUTJoa2NhMm5HYlNQTUhROXplawo1Qk00WDJXRzhiL0VmOTh5citKb1QxcjJmMGRLdDhvSHdRT1M4RngxNGo3Y092WHBjUFgyYUFrYzlEVUxadjRJCjB3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"
            }
        ]
    },
    "*tls.ServiceServingCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lJZjl1WlNyUkxGRk13RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0xURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhHREFXQmdOVkJBTVREM05sCmNuWnBZMlV0YzJWeWRtbHVaekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLbVkKTjFpT3NNNDAraHlBVGtOS1ZUcVJCWURjVlR5enU3cC96OTRQa2Z4VFFmWVg4N0pkMlZPMjBFaWVoU09CYWtiZwp0cTNFMzM2eGk0MGRpb0VPM1cxSDZoT3QzUmhpN2l4Um5qWDhEcWxPWEgreHNsQzJwM25rMGZka292azdTKzR3CndOTUg4YkZDTkc0ZXg0aFpsbGRBaHZGQkYxUk1VM0xvczhPWjljWG51NTB6NUdxQzRHdU05V0V1WEpUSmNTUGgKb0JsU0ZUSkt0dGlPdFpXS0ZBM0VqOW9SZjRvZTlETGdIWjJpSDVtNzhTOWRsRjdlTS8xWnJJLzBWYiszbHNvawpVeHpsbVVBNHRYaE5kR2tkY2IwT2FJTmJRQUZOQWsySld4aTlZM3BpcSswVnlDaEdTRFZrKzE4QldaUStDcUJVCjVYS0dMamRDeFJtVHdXa2g2VGtDQXdFQUFhTmpNR0V3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5NVZHRU1COEdBMVVkSXdRWQpNQmFBRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5NVZHRU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVRWK3VICkJ5NnBSVnZjL1FKMkRzYmowWTNKT09yRkloNkxZU1NJb3hGMWg0UFBXQVYzMDQ0QkkvQkdvSUhicWhiRk1xdlIKTDFtcjdUZlgycXdyelFpMUxoOU40R0tOSXVpYW1PSlFGMkJkQmNLWjUxc0NMZGxLVG9qekduK0oxR2ZER1pTKwp6dkVOM2lrWVJMMWgwb3pqRDVlMk56bC9RTWNIcVZZNU5TdncwdkRWUVpuODhaLzN2M3c4T3BYNVlRRGpwZGtnClFpZnR4azhDUUk0WDEwR3FTRnJ4STRsSzFZSVYyTFI1VUhITVFSYXFaK3h0THhRRlZvbXgwekJaVmZVcHM1a1kKSWhucGZEYzZWY0FTSTFRK1puWDZ5Qno1ZGhwR3Y2UFVnczV6cUkyMUlDNVNlamRVTXYwMUR5TTREaGZBN3YrWAo5QVFUbDBKR3IzOC90VE1pCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVpnM1dJNnd6alQ2SElCT1EwcFZPcEVGZ054VlBMTzd1bi9QM2crUi9GTkI5aGZ6CnNsM1pVN2JRU0o2Rkk0RnFSdUMycmNUZmZyR0xqUjJLZ1E3ZGJVZnFFNjNkR0dMdUxGR2VOZndPcVU1Y2Y3R3kKVUxhbmVlVFI5MlNpK1R0TDdqREEwd2Z4c1VJMGJoN0hpRm1XVjBDRzhVRVhWRXhUY3Vpenc1bjF4ZWU3blRQawphb0xnYTR6MVlTNWNsTWx4SStHZ0dWSVZNa3EyMkk2MWxZb1VEY1NQMmhGL2loNzBNdUFkbmFJZm1idnhMMTJVClh0NHovVm1zai9SVnY3ZVd5aVJUSE9XWlFEaTFlRTEwYVIxeHZRNW9nMXRBQVUwQ1RZbGJHTDFqZW1LcjdSWEkKS0VaSU5XVDdYd0ZabEQ0S29GVGxjb1l1TjBMRkdaUEJhU0hwT1FJREFRQUJBb0lCQUhFd1lsLzhmQXhrVnptRwplTFY0ZXdHbm9LQ3NiVWNpUGZ6dktQRHdPMkxJdnBGYzB3ME1qZXZOYTUzTUR0ZnZtOXJLUjZJYWIzL0RSM3hiClp3RlR4bjBWTGlrTU5TLzlkekNsR0k2M042SFA1dlJpeUx3TjdDRHlreUFtVG85QkFDQnM4WVRuSEd4TjMyaFAKcXFSYUJua2RXL0xRbXAxc2c1V0JzZGl1Zk5Za0NUTmFxdXgwRDJFNlBvWjRWaWRETWlreER6NzRJSFVKcVFCUgpRc0hmNEF6OGRGNDlnQnpGN0ljbk9pMlQxN3pjelNHS2pNanZ6T2xYZkxIaXRBVmhmSjBoTnA4cThCS2IwVi9DCmFLdHFDYzIwQTRQMjQzYVRjSi9BVDNMR1Q5ZWFwbnEwUE1tdUdFTHFPWHJ6a2w2M0dDQkhDbVBBaXpVMWNHTUgKQ2Nsby84RUNnWUVBMllUQnpMall2azl3bG4yaFdYdzdjeElmOXlRUzIvQnorTHA0bWU1ZkFLeit0SnZ0cG1ESQpsZ3JBRGg1cTFPWk5hc01oeEI4dVdSTjg5dndrcGdJd0FOT2VXanYwbjNkR1hhNUNrZDJySVhUUzl1SC9nczBtCmw1bjMyUWVCaE9Ua09iZXBVTjhoT0pPVHpRUFBnbm40YmRJQk9oWkhOQkwwQVgwQVM4anFuMVVDZ1lFQXg1a0YKSDhhbGw2d3lTT3pVQ2FGRWN6RlJ0S25SOTdNSzEvK2poQ3BCUEJXMnk1Q2hNMlhYMHNqTCs4MnprczJJTEFUYQpMUHVtcE0zS09kMkRTUGNjcmQrdjFTYXllUDNiTm9CTWh1MHgvd3dhR1hEaUpUWGpqem81THN5dEMvR0NIQVpPCkF0bnM0dlUzV0R0VGVXWHRqQUFnaGlUUW1adVZVTk1Pa3RFYStsVUNnWUVBdXltdk0vOXRpRHVFamdrbGQ0RWQKQ2tOek84MVBhTzQ2YTYvUHErdmUxUThGenRSSXBadXJuT2M5SUNqdUZhamd2bGVPeTFsbElRSlN5WlpsMW00VgpiZkNvMWMyM0RDdXVZVmRiTW5YQkZYV1hQUlZ6TE5KblBaVWZIU0NIUXBsTkE1alQyS0ZWelgrMmNuYXY2LzRWClZER2FHcWdtdGxrRW1lODcvUG14WUUwQ2dZQWZBUUh1d2FpUE9zeEV6NlRRS2lDNzAvbGhHcy9tcmdVTk1FUnkKRHk0NjZ4U040bFZuNm5YdjVBanJnRFJZcFZ4MW1mdFo2VzBsUkdJWlF2TlZyaXppUlZER3gxQUp3MFQ5M2tnRQozV3RhdHNLSEdTWEhxZXRESUVRcHBObHNkWU5FWHlaWEF3cnM1akpHbmxDRkZ2UWpQeEhPUklHeW1weERCY1hKCndIbDBVUUtCZ0NBN3h0Z1o3VElhckxFN25ZaEtiT21vNW9jS2JXWWVxMm1CcnFDMjBiYzR1VUFyaDJGYjM3SEgKczJnaW9yYUlFb2ptMFpZZlFpQUcwWXpWRlEvNzZTUzNhYUJQZm1CZW5CUTVWOHFOZENCR0kvT3N5NnZ1MG9kSQpvSms1U1dpdE1NaFpzVVNxbWphL0lIZDhPYlpuOFJsZmwvbHFhTjBvZWtaVXBrYWVHU1EzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/service-serving-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVpnM1dJNnd6alQ2SElCT1EwcFZPcEVGZ054VlBMTzd1bi9QM2crUi9GTkI5aGZ6CnNsM1pVN2JRU0o2Rkk0RnFSdUMycmNUZmZyR0xqUjJLZ1E3ZGJVZnFFNjNkR0dMdUxGR2VOZndPcVU1Y2Y3R3kKVUxhbmVlVFI5MlNpK1R0TDdqREEwd2Z4c1VJMGJoN0hpRm1XVjBDRzhVRVhWRXhUY3Vpenc1bjF4ZWU3blRQawphb0xnYTR6MVlTNWNsTWx4SStHZ0dWSVZNa3EyMkk2MWxZb1VEY1NQMmhGL2loNzBNdUFkbmFJZm1idnhMMTJVClh0NHovVm1zai9SVnY3ZVd5aVJUSE9XWlFEaTFlRTEwYVIxeHZRNW9nMXRBQVUwQ1RZbGJHTDFqZW1LcjdSWEkKS0VaSU5XVDdYd0ZabEQ0S29GVGxjb1l1TjBMRkdaUEJhU0hwT1FJREFRQUJBb0lCQUhFd1lsLzhmQXhrVnptRwplTFY0ZXdHbm9LQ3NiVWNpUGZ6dktQRHdPMkxJdnBGYzB3ME1qZXZOYTUzTUR0ZnZtOXJLUjZJYWIzL0RSM3hiClp3RlR4bjBWTGlrTU5TLzlkekNsR0k2M042SFA1dlJpeUx3TjdDRHlreUFtVG85QkFDQnM4WVRuSEd4TjMyaFAKcXFSYUJua2RXL0xRbXAxc2c1V0JzZGl1Zk5Za0NUTmFxdXgwRDJFNlBvWjRWaWRETWlreER6NzRJSFVKcVFCUgpRc0hmNEF6OGRGNDlnQnpGN0ljbk9pMlQxN3pjelNHS2pNanZ6T2xYZkxIaXRBVmhmSjBoTnA4cThCS2IwVi9DCmFLdHFDYzIwQTRQMjQzYVRjSi9BVDNMR1Q5ZWFwbnEwUE1tdUdFTHFPWHJ6a2w2M0dDQkhDbVBBaXpVMWNHTUgKQ2Nsby84RUNnWUVBMllUQnpMall2azl3bG4yaFdYdzdjeElmOXlRUzIvQnorTHA0bWU1ZkFLeit0SnZ0cG1ESQpsZ3JBRGg1cTFPWk5hc01oeEI4dVdSTjg5dndrcGdJd0FOT2VXanYwbjNkR1hhNUNrZDJySVhUUzl1SC9nczBtCmw1bjMyUWVCaE9Ua09iZXBVTjhoT0pPVHpRUFBnbm40YmRJQk9oWkhOQkwwQVgwQVM4anFuMVVDZ1lFQXg1a0YKSDhhbGw2d3lTT3pVQ2FGRWN6RlJ0S25SOTdNSzEvK2poQ3BCUEJXMnk1Q2hNMlhYMHNqTCs4MnprczJJTEFUYQpMUHVtcE0zS09kMkRTUGNjcmQrdjFTYXllUDNiTm9CTWh1MHgvd3dhR1hEaUpUWGpqem81THN5dEMvR0NIQVpPCkF0bnM0dlUzV0R0VGVXWHRqQUFnaGlUUW1adVZVTk1Pa3RFYStsVUNnWUVBdXltdk0vOXRpRHVFamdrbGQ0RWQKQ2tOek84MVBhTzQ2YTYvUHErdmUxUThGenRSSXBadXJuT2M5SUNqdUZhamd2bGVPeTFsbElRSlN5WlpsMW00VgpiZkNvMWMyM0RDdXVZVmRiTW5YQkZYV1hQUlZ6TE5KblBaVWZIU0NIUXBsTkE1alQyS0ZWelgrMmNuYXY2LzRWClZER2FHcWdtdGxrRW1lODcvUG14WUUwQ2dZQWZBUUh1d2FpUE9zeEV6NlRRS2lDNzAvbGhHcy9tcmdVTk1FUnkKRHk0NjZ4U040bFZuNm5YdjVBanJnRFJZcFZ4MW1mdFo2VzBsUkdJWlF2TlZyaXppUlZER3gxQUp3MFQ5M2tnRQozV3RhdHNLSEdTWEhxZXRESUVRcHBObHNkWU5FWHlaWEF3cnM1akpHbmxDRkZ2UWpQeEhPUklHeW1weERCY1hKCndIbDBVUUtCZ0NBN3h0Z1o3VElhckxFN25ZaEtiT21vNW9jS2JXWWVxMm1CcnFDMjBiYzR1VUFyaDJGYjM3SEgKczJnaW9yYUlFb2ptMFpZZlFpQUcwWXpWRlEvNzZTUzNhYUJQZm1CZW5CUTVWOHFOZENCR0kvT3N5NnZ1MG9kSQpvSms1U1dpdE1NaFpzVVNxbWphL0lIZDhPYlpuOFJsZmwvbHFhTjBvZWtaVXBrYWVHU1EzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/service-serving-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lJZjl1WlNyUkxGRk13RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRJeU9ERTVORFUwTkZvWApEVEk0TVRJeU5URTVORFUwTlZvd0xURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhHREFXQmdOVkJBTVREM05sCmNuWnBZMlV0YzJWeWRtbHVaekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLbVkKTjFpT3NNNDAraHlBVGtOS1ZUcVJCWURjVlR5enU3cC96OTRQa2Z4VFFmWVg4N0pkMlZPMjBFaWVoU09CYWtiZwp0cTNFMzM2eGk0MGRpb0VPM1cxSDZoT3QzUmhpN2l4Um5qWDhEcWxPWEgreHNsQzJwM25rMGZka292azdTKzR3CndOTUg4YkZDTkc0ZXg0aFpsbGRBaHZGQkYxUk1VM0xvczhPWjljWG51NTB6NUdxQzRHdU05V0V1WEpUSmNTUGgKb0JsU0ZUSkt0dGlPdFpXS0ZBM0VqOW9SZjRvZTlETGdIWjJpSDVtNzhTOWRsRjdlTS8xWnJJLzBWYiszbHNvawpVeHpsbVVBNHRYaE5kR2tkY2IwT2FJTmJRQUZOQWsySld4aTlZM3BpcSswVnlDaEdTRFZrKzE4QldaUStDcUJVCjVYS0dMamRDeFJtVHdXa2g2VGtDQXdFQUFhTmpNR0V3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5NVZHRU1COEdBMVVkSXdRWQpNQmFBRkhOVGVQVUN2Q0NydEpLakorWUQyMzg5NVZHRU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVRWK3VICkJ5NnBSVnZjL1FKMkRzYmowWTNKT09yRkloNkxZU1NJb3hGMWg0UFBXQVYzMDQ0QkkvQkdvSUhicWhiRk1xdlIKTDFtcjdUZlgycXdyelFpMUxoOU40R0tOSXVpYW1PSlFGMkJkQmNLWjUxc0NMZGxLVG9qekduK0oxR2ZER1pTKwp6dkVOM2lrWVJMMWgwb3pqRDVlMk56bC9RTWNIcVZZNU5TdncwdkRWUVpuODhaLzN2M3c4T3BYNVlRRGpwZGtnClFpZnR4azhDUUk0WDEwR3FTRnJ4STRsSzFZSVYyTFI1VUhITVFSYXFaK3h0THhRRlZvbXgwekJaVmZVcHM1a1kKSWhucGZEYzZWY0FTSTFRK1puWDZ5Qno1ZGhwR3Y2UFVnczV6cUkyMUlDNVNlamRVTXYwMUR5TTREaGZBN3YrWAo5QVFUbDBKR3IzOC90VE1pCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    }
}