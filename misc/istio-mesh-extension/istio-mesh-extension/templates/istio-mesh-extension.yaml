---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.Namespace }}
  labels:
    app: {{ template "istio-mesh-extension.name" . }}
    chart: {{ template "istio-mesh-extension.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.Namespace }}  
  labels:
    chart: {{ template "istio-mesh-extension.chart" . }}
spec:
  externalTrafficPolicy: Local
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 2
  type: NodePort
  ports:
  - port: {{ .Values.tunnelPort }}
    targetPort: {{ .Values.tunnelPort }}
    protocol: UDP
    name: {{ .Values.tunnelName }}
  selector:
    app: {{ template "istio-mesh-extension.name" . }}
    release: {{ .Release.Name }}
---        
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: {{ template "istio-mesh-extension.name" . }}
    chart: {{ template "istio-mesh-extension.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ .Chart.Name }}
  namespace: {{ .Values.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ template "istio-mesh-extension.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "istio-mesh-extension.name" . }}
        release: {{ .Release.Name }}
      name: {{ .Chart.Name }}
    spec:
      containers:
      - env:
        - name: TUNNEL_LOCAL_PEER
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: TUNNEL_REMOTE_PEER
          value: {{ .Values.tunnelRemotePeer}}   
        - name: TUNNEL_CIDR
          value: {{ .Values.tunnelCIDR}}
        - name: TUNNEL_DEV_NAME
          value: {{ .Values.tunnelName }}  
        - name: TUNNEL_PORT
          value: '{{ .Values.tunnelPort }}'
        - name: TUNNEL_MODE
          value: '{{ .Values.tunnelMode }}'
        - name: TUNNEL_PEER_PUBLIC_KEY
          value: '{{ .Values.tunnelPeerPublicKey }}'
        - name: TUNNEL_PRIVATE_KEY
          value: '{{ .Values.tunnelPrivateKey }}'                                                               
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: openvswitch
          mountPath: /var/run/openvswitch/db.sock                                            
      serviceAccountName: {{ .Chart.Name }}
      hostNetwork: false
      volumes:  
      - name: openvswitch
        hostPath: 
          path: /var/run/openvswitch/db.sock
          type: Socket                     
---
apiVersion: v1
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: 'privileged allows access to all privileged and host
      features and the ability to run as any user, any group, any fsGroup, and with
      any SELinux context.  WARNING: this is the most relaxed SCC and should be
      used only for cluster administration. Grant with caution.'
  creationTimestamp: null
  name: {{ .Chart.Name }}
  labels:
  app: {{ template "istio-mesh-extension.name" . }}
  chart: {{ template "istio-mesh-extension.chart" . }}
  release: {{ .Release.Name }}
  heritage: {{ .Release.Service }}  
allowHostDirVolumePlugin: true
allowHostIPC: true
allowHostNetwork: true
allowHostPID: true
allowHostPorts: true
allowPrivilegedContainer: true
allowedCapabilities:
- '*'
allowedFlexVolumes: null
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups:
- system:cluster-admins
- system:nodes
- system:masters
priority: 8
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:{{ .Values.Namespace }}:{{ .Chart.Name }}
volumes:
- '*'

