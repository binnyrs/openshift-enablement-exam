---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ appname }}
  namespace: {{ namespace }}
  labels:
    app: {{ appname }}
---
apiVersion: v1
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: 'privileged allows access to all privileged and host
      features and the ability to run as any user, any group, any fsGroup, and with
      any SELinux context.  WARNING: this is the most relaxed SCC and should be
      used only for cluster administration. Grant with caution.'
  creationTimestamp: null
  name: {{ appname }}
  labels:
  app: {{ appname }}  
allowHostDirVolumePlugin: true
allowHostIPC: true
allowHostNetwork: true
allowHostPID: true
allowHostPorts: true
allowPrivilegedContainer: true
allowedCapabilities:
- '*'
allowedFlexVolumes: null
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups:
- system:cluster-admins
- system:nodes
- system:masters
priority: 8
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:{{ namespace }}:{{ appname }}
volumes:
- '*'
{% for node in cluster.nodes %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ appname~"-"~node.name.split('.')[0] }}
  namespace: {{ namespace }}
  labels:
    app: {{ appname }}
    node: {{ node.name }}
data:
  wireguard.config: |-
   [Interface]
   ListenPort = {{ tunnel_port }} 
   PrivateKey = {{ node.private_key }}
    
{% for ext_cluster in clusters %}
{% if ext_cluster != cluster %}
{% for ext_node in ext_cluster.nodes %}
   [Peer]
   PublicKey = {{ ext_node.public_key }}
   AllowedIPs = {{ ext_node.hostsubnet }}
   Endpoint = {{ ext_node.public_ip }}:{{ ext_node.port }}
   PersistentKeepalive = 25
   
{% endfor %}
{% endif %}
{% endfor %} 
    
---        
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: {{ appname }}
    node: {{ node.name }}
  name: {{ appname~"-"~node.name.split('.')[0] }}
  namespace: {{ namespace }}
spec:
  selector:
    matchLabels:
      app: {{ appname }}
      node: {{ node.name }}
  template:
    metadata:
      labels:
        app: {{ appname }}
        node: {{ node.name }}
      name: {{ appname~"-"~node.name.split('.')[0] }}
    spec:
      nodeSelector: 
        kubernetes.io/hostname: {{ node.hostname }}
      containers:
      - env:
        - name: TUNNEL_DEV_NAME
          value: sdn-tunnel  
        - name: TUNNEL_MODE
          value: wireguard
        - name: WIREGUARD_CONFIG
          value: /root/wireguard_config/wireguard.config                                                                 
        image: "{{ image }}"
        imagePullPolicy: Always
        name: sdn-tunnel
        securityContext:
          privileged: true
        volumeMounts:
        - name: openvswitch
          mountPath: /var/run/openvswitch/db.sock
        - name: wireguard-config
          mountPath: /root/wireguard_config                                              
      serviceAccountName: {{ appname }}
      hostNetwork: false
      volumes:  
      - name: openvswitch
        hostPath: 
          path: /var/run/openvswitch/db.sock
          type: Socket
      - name: wireguard-config
        configMap: 
          name: {{ "sdn-tunnel-"~node.name.split('.')[0] }}     
{% endfor %}      